// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "do_convolution.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic do_convolution::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic do_convolution::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> do_convolution::ap_ST_fsm_state1 = "1";
const sc_lv<11> do_convolution::ap_ST_fsm_state2 = "10";
const sc_lv<11> do_convolution::ap_ST_fsm_state3 = "100";
const sc_lv<11> do_convolution::ap_ST_fsm_state4 = "1000";
const sc_lv<11> do_convolution::ap_ST_fsm_state5 = "10000";
const sc_lv<11> do_convolution::ap_ST_fsm_state6 = "100000";
const sc_lv<11> do_convolution::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> do_convolution::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> do_convolution::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> do_convolution::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> do_convolution::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> do_convolution::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> do_convolution::ap_const_lv32_1 = "1";
const sc_lv<1> do_convolution::ap_const_lv1_0 = "0";
const sc_lv<32> do_convolution::ap_const_lv32_2 = "10";
const sc_lv<32> do_convolution::ap_const_lv32_3 = "11";
const sc_lv<32> do_convolution::ap_const_lv32_4 = "100";
const sc_lv<32> do_convolution::ap_const_lv32_5 = "101";
const sc_lv<32> do_convolution::ap_const_lv32_6 = "110";
const sc_lv<32> do_convolution::ap_const_lv32_7 = "111";
const sc_lv<32> do_convolution::ap_const_lv32_8 = "1000";
const sc_lv<32> do_convolution::ap_const_lv32_9 = "1001";
const sc_lv<32> do_convolution::ap_const_lv32_A = "1010";
const sc_lv<3> do_convolution::ap_const_lv3_0 = "000";
const sc_lv<1> do_convolution::ap_const_lv1_1 = "1";
const sc_lv<3> do_convolution::ap_const_lv3_7 = "111";
const sc_lv<3> do_convolution::ap_const_lv3_5 = "101";
const sc_lv<3> do_convolution::ap_const_lv3_1 = "1";
const sc_lv<2> do_convolution::ap_const_lv2_0 = "00";
const sc_lv<3> do_convolution::ap_const_lv3_2 = "10";
const sc_lv<4> do_convolution::ap_const_lv4_4 = "100";
const sc_lv<4> do_convolution::ap_const_lv4_5 = "101";
const bool do_convolution::ap_const_boolean_1 = true;

do_convolution::do_convolution(sc_module_name name) : sc_module(name), mVcdFile(0) {
    window_U = new do_convolution_wibkb("window_U");
    window_U->clk(ap_clk);
    window_U->reset(ap_rst);
    window_U->address0(window_address0);
    window_U->ce0(window_ce0);
    window_U->we0(window_we0);
    window_U->d0(data_in_q0);
    window_U->q0(window_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_224_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_224_p2 );

    SC_METHOD(thread_data_in_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_18_cast_fu_372_p1 );

    SC_METHOD(thread_data_in_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_data_out_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_15_cast_fu_477_p1 );

    SC_METHOD(thread_data_out_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_data_out_d0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( val_out_reg_173 );

    SC_METHOD(thread_data_out_we0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond1_i_fu_407_p2 );

    SC_METHOD(thread_exitcond1_fu_278_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_reg_150 );

    SC_METHOD(thread_exitcond1_i_fu_407_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i_i_reg_186 );

    SC_METHOD(thread_exitcond2_fu_262_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( x_assign_1_reg_138 );

    SC_METHOD(thread_exitcond3_fu_224_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( y_assign_1_reg_127 );

    SC_METHOD(thread_exitcond_fu_341_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_reg_161 );

    SC_METHOD(thread_exitcond_i_fu_486_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( j_i_reg_209 );

    SC_METHOD(thread_i_1_fu_307_p2);
    sensitive << ( i_reg_150 );

    SC_METHOD(thread_i_2_fu_418_p2);
    sensitive << ( i_i_reg_186 );

    SC_METHOD(thread_i_cast_fu_274_p1);
    sensitive << ( i_reg_150 );

    SC_METHOD(thread_i_i_cast_fu_403_p1);
    sensitive << ( i_i_reg_186 );

    SC_METHOD(thread_j_1_fu_492_p2);
    sensitive << ( j_i_reg_209 );

    SC_METHOD(thread_j_2_fu_397_p2);
    sensitive << ( j_reg_161 );

    SC_METHOD(thread_j_cast_fu_337_p1);
    sensitive << ( j_reg_161 );

    SC_METHOD(thread_j_i_cast_fu_482_p1);
    sensitive << ( j_i_reg_209 );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_20_cast_fu_507_p1 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_or_cond_fu_358_p2);
    sensitive << ( switch8_reg_616 );
    sensitive << ( switch_fu_352_p2 );

    SC_METHOD(thread_p_i_i_fu_547_p2);
    sensitive << ( tmp4_reg_651 );
    sensitive << ( tmp5_fu_541_p2 );

    SC_METHOD(thread_p_shl_cast_fu_248_p1);
    sensitive << ( tmp_4_fu_240_p3 );

    SC_METHOD(thread_result_1_fu_557_p3);
    sensitive << ( result_1_i_reg_197 );
    sensitive << ( p_i_i_fu_547_p2 );
    sensitive << ( result_fu_552_p2 );

    SC_METHOD(thread_result_fu_552_p2);
    sensitive << ( tmp_7_i_reg_689 );
    sensitive << ( result_1_i_reg_197 );

    SC_METHOD(thread_rev7_fu_529_p2);
    sensitive << ( tmp_15_fu_521_p3 );

    SC_METHOD(thread_rev_fu_450_p2);
    sensitive << ( tmp_fu_442_p3 );

    SC_METHOD(thread_switch8_fu_331_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_278_p2 );
    sensitive << ( y_assign_fu_284_p2 );

    SC_METHOD(thread_switch_fu_352_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_341_p2 );
    sensitive << ( x_assign_fu_347_p2 );

    SC_METHOD(thread_tmp4_fu_462_p2);
    sensitive << ( tmp_i_i_fu_456_p2 );
    sensitive << ( rev_fu_450_p2 );

    SC_METHOD(thread_tmp5_fu_541_p2);
    sensitive << ( tmp_1_i_i_fu_535_p2 );
    sensitive << ( rev7_fu_529_p2 );

    SC_METHOD(thread_tmp_10_fu_472_p2);
    sensitive << ( tmp_s_reg_579 );
    sensitive << ( tmp_cast_10_fu_468_p1 );

    SC_METHOD(thread_tmp_11_fu_428_p3);
    sensitive << ( i_2_fu_418_p2 );

    SC_METHOD(thread_tmp_12_fu_436_p2);
    sensitive << ( tmp_11_fu_428_p3 );
    sensitive << ( tmp_2_i_cast_fu_424_p1 );

    SC_METHOD(thread_tmp_13_fu_367_p2);
    sensitive << ( tmp_3_reg_601 );
    sensitive << ( tmp_6_cast_fu_363_p1 );

    SC_METHOD(thread_tmp_14_fu_387_p2);
    sensitive << ( tmp_8_reg_611 );
    sensitive << ( tmp_8_cast_fu_383_p1 );

    SC_METHOD(thread_tmp_15_cast_fu_477_p1);
    sensitive << ( tmp_10_fu_472_p2 );

    SC_METHOD(thread_tmp_15_fu_521_p3);
    sensitive << ( x_assign_2_fu_517_p2 );

    SC_METHOD(thread_tmp_16_fu_502_p2);
    sensitive << ( tmp_12_reg_646 );
    sensitive << ( tmp_6_i_cast_fu_498_p1 );

    SC_METHOD(thread_tmp_18_cast_fu_372_p1);
    sensitive << ( tmp_13_fu_367_p2 );

    SC_METHOD(thread_tmp_19_cast_fu_392_p1);
    sensitive << ( tmp_14_fu_387_p2 );

    SC_METHOD(thread_tmp_1_i_i_fu_535_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( x_assign_2_fu_517_p2 );

    SC_METHOD(thread_tmp_20_cast_fu_507_p1);
    sensitive << ( tmp_16_fu_502_p2 );

    SC_METHOD(thread_tmp_2_cast_fu_289_p1);
    sensitive << ( y_assign_fu_284_p2 );

    SC_METHOD(thread_tmp_2_fu_293_p3);
    sensitive << ( y_assign_fu_284_p2 );

    SC_METHOD(thread_tmp_2_i_cast_fu_424_p1);
    sensitive << ( i_2_fu_418_p2 );

    SC_METHOD(thread_tmp_3_cast_fu_313_p1);
    sensitive << ( i_1_fu_307_p2 );

    SC_METHOD(thread_tmp_3_fu_301_p2);
    sensitive << ( tmp_2_cast_fu_289_p1 );
    sensitive << ( tmp_2_fu_293_p3 );

    SC_METHOD(thread_tmp_4_fu_240_p3);
    sensitive << ( y_assign_1_reg_127 );

    SC_METHOD(thread_tmp_6_cast_fu_363_p1);
    sensitive << ( x_assign_fu_347_p2 );

    SC_METHOD(thread_tmp_6_fu_317_p3);
    sensitive << ( i_1_fu_307_p2 );

    SC_METHOD(thread_tmp_6_i_cast_fu_498_p1);
    sensitive << ( j_1_fu_492_p2 );

    SC_METHOD(thread_tmp_7_fu_377_p2);
    sensitive << ( j_reg_161 );

    SC_METHOD(thread_tmp_7_i_fu_513_p2);
    sensitive << ( window_load_reg_679 );
    sensitive << ( kernel_load_reg_684 );

    SC_METHOD(thread_tmp_8_cast_fu_383_p1);
    sensitive << ( tmp_7_fu_377_p2 );

    SC_METHOD(thread_tmp_8_fu_325_p2);
    sensitive << ( tmp_6_fu_317_p3 );
    sensitive << ( tmp_3_cast_fu_313_p1 );

    SC_METHOD(thread_tmp_cast_10_fu_468_p1);
    sensitive << ( x_assign_1_reg_138 );

    SC_METHOD(thread_tmp_cast_fu_236_p1);
    sensitive << ( y_assign_1_reg_127 );

    SC_METHOD(thread_tmp_fu_442_p3);
    sensitive << ( y_assign_2_fu_413_p2 );

    SC_METHOD(thread_tmp_i_i_fu_456_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond1_i_fu_407_p2 );
    sensitive << ( y_assign_2_fu_413_p2 );

    SC_METHOD(thread_tmp_s_fu_252_p2);
    sensitive << ( tmp_cast_fu_236_p1 );
    sensitive << ( p_shl_cast_fu_248_p1 );

    SC_METHOD(thread_window_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_19_cast_fu_392_p1 );
    sensitive << ( tmp_20_cast_fu_507_p1 );

    SC_METHOD(thread_window_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_window_we0);
    sensitive << ( or_cond_reg_624 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_x_assign_2_fu_517_p2);
    sensitive << ( x_cast_reg_584 );
    sensitive << ( j_i_cast_reg_656 );

    SC_METHOD(thread_x_assign_fu_347_p2);
    sensitive << ( x_cast_reg_584 );
    sensitive << ( j_cast_fu_337_p1 );

    SC_METHOD(thread_x_cast_fu_258_p1);
    sensitive << ( x_assign_1_reg_138 );

    SC_METHOD(thread_x_fu_268_p2);
    sensitive << ( x_assign_1_reg_138 );

    SC_METHOD(thread_y_assign_2_fu_413_p2);
    sensitive << ( y_cast_reg_565 );
    sensitive << ( i_i_cast_fu_403_p1 );

    SC_METHOD(thread_y_assign_fu_284_p2);
    sensitive << ( y_cast_reg_565 );
    sensitive << ( i_cast_fu_274_p1 );

    SC_METHOD(thread_y_cast_fu_220_p1);
    sensitive << ( y_assign_1_reg_127 );

    SC_METHOD(thread_y_fu_230_p2);
    sensitive << ( y_assign_1_reg_127 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_224_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_278_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_341_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond1_i_fu_407_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_i_fu_486_p2 );
    sensitive << ( exitcond2_fu_262_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "do_convolution_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_out_address0, "(port)data_out_address0");
    sc_trace(mVcdFile, data_out_ce0, "(port)data_out_ce0");
    sc_trace(mVcdFile, data_out_we0, "(port)data_out_we0");
    sc_trace(mVcdFile, data_out_d0, "(port)data_out_d0");
    sc_trace(mVcdFile, data_in_address0, "(port)data_in_address0");
    sc_trace(mVcdFile, data_in_ce0, "(port)data_in_ce0");
    sc_trace(mVcdFile, data_in_q0, "(port)data_in_q0");
    sc_trace(mVcdFile, kernel_address0, "(port)kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "(port)kernel_ce0");
    sc_trace(mVcdFile, kernel_q0, "(port)kernel_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, y_cast_fu_220_p1, "y_cast_fu_220_p1");
    sc_trace(mVcdFile, y_cast_reg_565, "y_cast_reg_565");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, y_fu_230_p2, "y_fu_230_p2");
    sc_trace(mVcdFile, y_reg_574, "y_reg_574");
    sc_trace(mVcdFile, tmp_s_fu_252_p2, "tmp_s_fu_252_p2");
    sc_trace(mVcdFile, tmp_s_reg_579, "tmp_s_reg_579");
    sc_trace(mVcdFile, exitcond3_fu_224_p2, "exitcond3_fu_224_p2");
    sc_trace(mVcdFile, x_cast_fu_258_p1, "x_cast_fu_258_p1");
    sc_trace(mVcdFile, x_cast_reg_584, "x_cast_reg_584");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, x_fu_268_p2, "x_fu_268_p2");
    sc_trace(mVcdFile, x_reg_593, "x_reg_593");
    sc_trace(mVcdFile, tmp_3_fu_301_p2, "tmp_3_fu_301_p2");
    sc_trace(mVcdFile, tmp_3_reg_601, "tmp_3_reg_601");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond1_fu_278_p2, "exitcond1_fu_278_p2");
    sc_trace(mVcdFile, i_1_fu_307_p2, "i_1_fu_307_p2");
    sc_trace(mVcdFile, i_1_reg_606, "i_1_reg_606");
    sc_trace(mVcdFile, tmp_8_fu_325_p2, "tmp_8_fu_325_p2");
    sc_trace(mVcdFile, tmp_8_reg_611, "tmp_8_reg_611");
    sc_trace(mVcdFile, switch8_fu_331_p2, "switch8_fu_331_p2");
    sc_trace(mVcdFile, switch8_reg_616, "switch8_reg_616");
    sc_trace(mVcdFile, or_cond_fu_358_p2, "or_cond_fu_358_p2");
    sc_trace(mVcdFile, or_cond_reg_624, "or_cond_reg_624");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond_fu_341_p2, "exitcond_fu_341_p2");
    sc_trace(mVcdFile, j_2_fu_397_p2, "j_2_fu_397_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_2_fu_418_p2, "i_2_fu_418_p2");
    sc_trace(mVcdFile, i_2_reg_641, "i_2_reg_641");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond1_i_fu_407_p2, "exitcond1_i_fu_407_p2");
    sc_trace(mVcdFile, tmp_12_fu_436_p2, "tmp_12_fu_436_p2");
    sc_trace(mVcdFile, tmp_12_reg_646, "tmp_12_reg_646");
    sc_trace(mVcdFile, tmp4_fu_462_p2, "tmp4_fu_462_p2");
    sc_trace(mVcdFile, tmp4_reg_651, "tmp4_reg_651");
    sc_trace(mVcdFile, j_i_cast_fu_482_p1, "j_i_cast_fu_482_p1");
    sc_trace(mVcdFile, j_i_cast_reg_656, "j_i_cast_reg_656");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, j_1_fu_492_p2, "j_1_fu_492_p2");
    sc_trace(mVcdFile, j_1_reg_664, "j_1_reg_664");
    sc_trace(mVcdFile, exitcond_i_fu_486_p2, "exitcond_i_fu_486_p2");
    sc_trace(mVcdFile, window_q0, "window_q0");
    sc_trace(mVcdFile, window_load_reg_679, "window_load_reg_679");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, kernel_load_reg_684, "kernel_load_reg_684");
    sc_trace(mVcdFile, tmp_7_i_fu_513_p2, "tmp_7_i_fu_513_p2");
    sc_trace(mVcdFile, tmp_7_i_reg_689, "tmp_7_i_reg_689");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, result_1_fu_557_p3, "result_1_fu_557_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, window_address0, "window_address0");
    sc_trace(mVcdFile, window_ce0, "window_ce0");
    sc_trace(mVcdFile, window_we0, "window_we0");
    sc_trace(mVcdFile, y_assign_1_reg_127, "y_assign_1_reg_127");
    sc_trace(mVcdFile, exitcond2_fu_262_p2, "exitcond2_fu_262_p2");
    sc_trace(mVcdFile, x_assign_1_reg_138, "x_assign_1_reg_138");
    sc_trace(mVcdFile, i_reg_150, "i_reg_150");
    sc_trace(mVcdFile, j_reg_161, "j_reg_161");
    sc_trace(mVcdFile, val_out_reg_173, "val_out_reg_173");
    sc_trace(mVcdFile, i_i_reg_186, "i_i_reg_186");
    sc_trace(mVcdFile, result_1_i_reg_197, "result_1_i_reg_197");
    sc_trace(mVcdFile, j_i_reg_209, "j_i_reg_209");
    sc_trace(mVcdFile, tmp_18_cast_fu_372_p1, "tmp_18_cast_fu_372_p1");
    sc_trace(mVcdFile, tmp_19_cast_fu_392_p1, "tmp_19_cast_fu_392_p1");
    sc_trace(mVcdFile, tmp_15_cast_fu_477_p1, "tmp_15_cast_fu_477_p1");
    sc_trace(mVcdFile, tmp_20_cast_fu_507_p1, "tmp_20_cast_fu_507_p1");
    sc_trace(mVcdFile, tmp_4_fu_240_p3, "tmp_4_fu_240_p3");
    sc_trace(mVcdFile, tmp_cast_fu_236_p1, "tmp_cast_fu_236_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_248_p1, "p_shl_cast_fu_248_p1");
    sc_trace(mVcdFile, i_cast_fu_274_p1, "i_cast_fu_274_p1");
    sc_trace(mVcdFile, y_assign_fu_284_p2, "y_assign_fu_284_p2");
    sc_trace(mVcdFile, tmp_2_cast_fu_289_p1, "tmp_2_cast_fu_289_p1");
    sc_trace(mVcdFile, tmp_2_fu_293_p3, "tmp_2_fu_293_p3");
    sc_trace(mVcdFile, tmp_6_fu_317_p3, "tmp_6_fu_317_p3");
    sc_trace(mVcdFile, tmp_3_cast_fu_313_p1, "tmp_3_cast_fu_313_p1");
    sc_trace(mVcdFile, j_cast_fu_337_p1, "j_cast_fu_337_p1");
    sc_trace(mVcdFile, x_assign_fu_347_p2, "x_assign_fu_347_p2");
    sc_trace(mVcdFile, switch_fu_352_p2, "switch_fu_352_p2");
    sc_trace(mVcdFile, tmp_6_cast_fu_363_p1, "tmp_6_cast_fu_363_p1");
    sc_trace(mVcdFile, tmp_13_fu_367_p2, "tmp_13_fu_367_p2");
    sc_trace(mVcdFile, tmp_7_fu_377_p2, "tmp_7_fu_377_p2");
    sc_trace(mVcdFile, tmp_8_cast_fu_383_p1, "tmp_8_cast_fu_383_p1");
    sc_trace(mVcdFile, tmp_14_fu_387_p2, "tmp_14_fu_387_p2");
    sc_trace(mVcdFile, i_i_cast_fu_403_p1, "i_i_cast_fu_403_p1");
    sc_trace(mVcdFile, tmp_11_fu_428_p3, "tmp_11_fu_428_p3");
    sc_trace(mVcdFile, tmp_2_i_cast_fu_424_p1, "tmp_2_i_cast_fu_424_p1");
    sc_trace(mVcdFile, y_assign_2_fu_413_p2, "y_assign_2_fu_413_p2");
    sc_trace(mVcdFile, tmp_fu_442_p3, "tmp_fu_442_p3");
    sc_trace(mVcdFile, tmp_i_i_fu_456_p2, "tmp_i_i_fu_456_p2");
    sc_trace(mVcdFile, rev_fu_450_p2, "rev_fu_450_p2");
    sc_trace(mVcdFile, tmp_cast_10_fu_468_p1, "tmp_cast_10_fu_468_p1");
    sc_trace(mVcdFile, tmp_10_fu_472_p2, "tmp_10_fu_472_p2");
    sc_trace(mVcdFile, tmp_6_i_cast_fu_498_p1, "tmp_6_i_cast_fu_498_p1");
    sc_trace(mVcdFile, tmp_16_fu_502_p2, "tmp_16_fu_502_p2");
    sc_trace(mVcdFile, x_assign_2_fu_517_p2, "x_assign_2_fu_517_p2");
    sc_trace(mVcdFile, tmp_15_fu_521_p3, "tmp_15_fu_521_p3");
    sc_trace(mVcdFile, tmp_1_i_i_fu_535_p2, "tmp_1_i_i_fu_535_p2");
    sc_trace(mVcdFile, rev7_fu_529_p2, "rev7_fu_529_p2");
    sc_trace(mVcdFile, tmp5_fu_541_p2, "tmp5_fu_541_p2");
    sc_trace(mVcdFile, p_i_i_fu_547_p2, "p_i_i_fu_547_p2");
    sc_trace(mVcdFile, result_fu_552_p2, "result_fu_552_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("do_convolution.hdltvin.dat");
    mHdltvoutHandle.open("do_convolution.hdltvout.dat");
}

do_convolution::~do_convolution() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete window_U;
}

void do_convolution::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_278_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        i_i_reg_186 = ap_const_lv3_7;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(exitcond_i_fu_486_p2.read(), ap_const_lv1_1))) {
        i_i_reg_186 = i_2_reg_641.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_341_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        i_reg_150 = i_1_reg_606.read();
    } else if ((esl_seteq<1,1,1>(exitcond2_fu_262_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_reg_150 = ap_const_lv3_7;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_i_reg_209 = j_1_reg_664.read();
    } else if ((esl_seteq<1,1,1>(exitcond1_i_fu_407_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        j_i_reg_209 = ap_const_lv3_7;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_reg_161 = j_2_fu_397_p2.read();
    } else if ((esl_seteq<1,1,1>(exitcond1_fu_278_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        j_reg_161 = ap_const_lv3_7;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        result_1_i_reg_197 = result_1_fu_557_p3.read();
    } else if ((esl_seteq<1,1,1>(exitcond1_i_fu_407_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        result_1_i_reg_197 = val_out_reg_173.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_278_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        val_out_reg_173 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(exitcond_i_fu_486_p2.read(), ap_const_lv1_1))) {
        val_out_reg_173 = result_1_i_reg_197.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond1_i_fu_407_p2.read(), ap_const_lv1_1))) {
        x_assign_1_reg_138 = x_reg_593.read();
    } else if ((esl_seteq<1,1,1>(exitcond3_fu_224_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        x_assign_1_reg_138 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_262_p2.read(), ap_const_lv1_1))) {
        y_assign_1_reg_127 = y_reg_574.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        y_assign_1_reg_127 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_278_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        i_1_reg_606 = i_1_fu_307_p2.read();
        switch8_reg_616 = switch8_fu_331_p2.read();
        tmp_3_reg_601 = tmp_3_fu_301_p2.read();
        tmp_8_reg_611 = tmp_8_fu_325_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_i_fu_407_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        i_2_reg_641 = i_2_fu_418_p2.read();
        tmp4_reg_651 = tmp4_fu_462_p2.read();
        tmp_12_reg_646 = tmp_12_fu_436_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_i_fu_486_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        j_1_reg_664 = j_1_fu_492_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j_i_cast_reg_656 = j_i_cast_fu_482_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        kernel_load_reg_684 = kernel_q0.read();
        window_load_reg_679 = window_q0.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_341_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        or_cond_reg_624 = or_cond_fu_358_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_7_i_reg_689 = tmp_7_i_fu_513_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_fu_224_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_s_reg_579 = tmp_s_fu_252_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_cast_reg_584 = x_cast_fu_258_p1.read();
        x_reg_593 = x_fu_268_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        y_cast_reg_565 = y_cast_fu_220_p1.read();
        y_reg_574 = y_fu_230_p2.read();
    }
}

void do_convolution::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void do_convolution::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void do_convolution::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void do_convolution::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void do_convolution::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void do_convolution::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void do_convolution::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void do_convolution::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void do_convolution::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void do_convolution::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void do_convolution::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void do_convolution::thread_ap_done() {
    if ((esl_seteq<1,1,1>(exitcond3_fu_224_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void do_convolution::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void do_convolution::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond3_fu_224_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void do_convolution::thread_data_in_address0() {
    data_in_address0 =  (sc_lv<5>) (tmp_18_cast_fu_372_p1.read());
}

void do_convolution::thread_data_in_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        data_in_ce0 = ap_const_logic_1;
    } else {
        data_in_ce0 = ap_const_logic_0;
    }
}

void do_convolution::thread_data_out_address0() {
    data_out_address0 =  (sc_lv<5>) (tmp_15_cast_fu_477_p1.read());
}

void do_convolution::thread_data_out_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        data_out_ce0 = ap_const_logic_1;
    } else {
        data_out_ce0 = ap_const_logic_0;
    }
}

void do_convolution::thread_data_out_d0() {
    data_out_d0 = val_out_reg_173.read();
}

void do_convolution::thread_data_out_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond1_i_fu_407_p2.read(), ap_const_lv1_1))) {
        data_out_we0 = ap_const_logic_1;
    } else {
        data_out_we0 = ap_const_logic_0;
    }
}

void do_convolution::thread_exitcond1_fu_278_p2() {
    exitcond1_fu_278_p2 = (!i_reg_150.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_150.read() == ap_const_lv3_2);
}

void do_convolution::thread_exitcond1_i_fu_407_p2() {
    exitcond1_i_fu_407_p2 = (!i_i_reg_186.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_186.read() == ap_const_lv3_2);
}

void do_convolution::thread_exitcond2_fu_262_p2() {
    exitcond2_fu_262_p2 = (!x_assign_1_reg_138.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_1_reg_138.read() == ap_const_lv3_5);
}

void do_convolution::thread_exitcond3_fu_224_p2() {
    exitcond3_fu_224_p2 = (!y_assign_1_reg_127.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(y_assign_1_reg_127.read() == ap_const_lv3_5);
}

void do_convolution::thread_exitcond_fu_341_p2() {
    exitcond_fu_341_p2 = (!j_reg_161.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_161.read() == ap_const_lv3_2);
}

void do_convolution::thread_exitcond_i_fu_486_p2() {
    exitcond_i_fu_486_p2 = (!j_i_reg_209.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_209.read() == ap_const_lv3_2);
}

void do_convolution::thread_i_1_fu_307_p2() {
    i_1_fu_307_p2 = (!i_reg_150.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_bigint<3>(i_reg_150.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void do_convolution::thread_i_2_fu_418_p2() {
    i_2_fu_418_p2 = (!i_i_reg_186.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_bigint<3>(i_i_reg_186.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void do_convolution::thread_i_cast_fu_274_p1() {
    i_cast_fu_274_p1 = esl_sext<4,3>(i_reg_150.read());
}

void do_convolution::thread_i_i_cast_fu_403_p1() {
    i_i_cast_fu_403_p1 = esl_sext<4,3>(i_i_reg_186.read());
}

void do_convolution::thread_j_1_fu_492_p2() {
    j_1_fu_492_p2 = (!j_i_reg_209.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_bigint<3>(j_i_reg_209.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void do_convolution::thread_j_2_fu_397_p2() {
    j_2_fu_397_p2 = (!j_reg_161.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_bigint<3>(j_reg_161.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void do_convolution::thread_j_cast_fu_337_p1() {
    j_cast_fu_337_p1 = esl_sext<4,3>(j_reg_161.read());
}

void do_convolution::thread_j_i_cast_fu_482_p1() {
    j_i_cast_fu_482_p1 = esl_sext<4,3>(j_i_reg_209.read());
}

void do_convolution::thread_kernel_address0() {
    kernel_address0 =  (sc_lv<4>) (tmp_20_cast_fu_507_p1.read());
}

void do_convolution::thread_kernel_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        kernel_ce0 = ap_const_logic_1;
    } else {
        kernel_ce0 = ap_const_logic_0;
    }
}

void do_convolution::thread_or_cond_fu_358_p2() {
    or_cond_fu_358_p2 = (switch8_reg_616.read() | switch_fu_352_p2.read());
}

void do_convolution::thread_p_i_i_fu_547_p2() {
    p_i_i_fu_547_p2 = (tmp5_fu_541_p2.read() & tmp4_reg_651.read());
}

void do_convolution::thread_p_shl_cast_fu_248_p1() {
    p_shl_cast_fu_248_p1 = esl_zext<6,5>(tmp_4_fu_240_p3.read());
}

void do_convolution::thread_result_1_fu_557_p3() {
    result_1_fu_557_p3 = (!p_i_i_fu_547_p2.read()[0].is_01())? sc_lv<32>(): ((p_i_i_fu_547_p2.read()[0].to_bool())? result_fu_552_p2.read(): result_1_i_reg_197.read());
}

void do_convolution::thread_result_fu_552_p2() {
    result_fu_552_p2 = (!tmp_7_i_reg_689.read().is_01() || !result_1_i_reg_197.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_i_reg_689.read()) + sc_biguint<32>(result_1_i_reg_197.read()));
}

void do_convolution::thread_rev7_fu_529_p2() {
    rev7_fu_529_p2 = (tmp_15_fu_521_p3.read() ^ ap_const_lv1_1);
}

void do_convolution::thread_rev_fu_450_p2() {
    rev_fu_450_p2 = (tmp_fu_442_p3.read() ^ ap_const_lv1_1);
}

void do_convolution::thread_switch8_fu_331_p2() {
    switch8_fu_331_p2 = (!y_assign_fu_284_p2.read().is_01() || !ap_const_lv4_4.is_01())? sc_lv<1>(): (sc_biguint<4>(y_assign_fu_284_p2.read()) > sc_biguint<4>(ap_const_lv4_4));
}

void do_convolution::thread_switch_fu_352_p2() {
    switch_fu_352_p2 = (!x_assign_fu_347_p2.read().is_01() || !ap_const_lv4_4.is_01())? sc_lv<1>(): (sc_biguint<4>(x_assign_fu_347_p2.read()) > sc_biguint<4>(ap_const_lv4_4));
}

void do_convolution::thread_tmp4_fu_462_p2() {
    tmp4_fu_462_p2 = (tmp_i_i_fu_456_p2.read() & rev_fu_450_p2.read());
}

void do_convolution::thread_tmp5_fu_541_p2() {
    tmp5_fu_541_p2 = (tmp_1_i_i_fu_535_p2.read() & rev7_fu_529_p2.read());
}

void do_convolution::thread_tmp_10_fu_472_p2() {
    tmp_10_fu_472_p2 = (!tmp_s_reg_579.read().is_01() || !tmp_cast_10_fu_468_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_s_reg_579.read()) + sc_biguint<6>(tmp_cast_10_fu_468_p1.read()));
}

void do_convolution::thread_tmp_11_fu_428_p3() {
    tmp_11_fu_428_p3 = esl_concat<3,2>(i_2_fu_418_p2.read(), ap_const_lv2_0);
}

void do_convolution::thread_tmp_12_fu_436_p2() {
    tmp_12_fu_436_p2 = (!tmp_11_fu_428_p3.read().is_01() || !tmp_2_i_cast_fu_424_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_11_fu_428_p3.read()) - sc_biguint<5>(tmp_2_i_cast_fu_424_p1.read()));
}

void do_convolution::thread_tmp_13_fu_367_p2() {
    tmp_13_fu_367_p2 = (!tmp_3_reg_601.read().is_01() || !tmp_6_cast_fu_363_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_3_reg_601.read()) + sc_biguint<6>(tmp_6_cast_fu_363_p1.read()));
}

void do_convolution::thread_tmp_14_fu_387_p2() {
    tmp_14_fu_387_p2 = (!tmp_8_reg_611.read().is_01() || !tmp_8_cast_fu_383_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_8_reg_611.read()) + sc_biguint<5>(tmp_8_cast_fu_383_p1.read()));
}

void do_convolution::thread_tmp_15_cast_fu_477_p1() {
    tmp_15_cast_fu_477_p1 = esl_zext<64,6>(tmp_10_fu_472_p2.read());
}

void do_convolution::thread_tmp_15_fu_521_p3() {
    tmp_15_fu_521_p3 = x_assign_2_fu_517_p2.read().range(3, 3);
}

void do_convolution::thread_tmp_16_fu_502_p2() {
    tmp_16_fu_502_p2 = (!tmp_12_reg_646.read().is_01() || !tmp_6_i_cast_fu_498_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_12_reg_646.read()) + sc_biguint<5>(tmp_6_i_cast_fu_498_p1.read()));
}

void do_convolution::thread_tmp_18_cast_fu_372_p1() {
    tmp_18_cast_fu_372_p1 = esl_sext<64,6>(tmp_13_fu_367_p2.read());
}

void do_convolution::thread_tmp_19_cast_fu_392_p1() {
    tmp_19_cast_fu_392_p1 = esl_sext<64,5>(tmp_14_fu_387_p2.read());
}

void do_convolution::thread_tmp_1_i_i_fu_535_p2() {
    tmp_1_i_i_fu_535_p2 = (!x_assign_2_fu_517_p2.read().is_01() || !ap_const_lv4_5.is_01())? sc_lv<1>(): (sc_bigint<4>(x_assign_2_fu_517_p2.read()) < sc_bigint<4>(ap_const_lv4_5));
}

void do_convolution::thread_tmp_20_cast_fu_507_p1() {
    tmp_20_cast_fu_507_p1 = esl_sext<64,5>(tmp_16_fu_502_p2.read());
}

void do_convolution::thread_tmp_2_cast_fu_289_p1() {
    tmp_2_cast_fu_289_p1 = esl_sext<6,4>(y_assign_fu_284_p2.read());
}

void do_convolution::thread_tmp_2_fu_293_p3() {
    tmp_2_fu_293_p3 = esl_concat<4,2>(y_assign_fu_284_p2.read(), ap_const_lv2_0);
}

void do_convolution::thread_tmp_2_i_cast_fu_424_p1() {
    tmp_2_i_cast_fu_424_p1 = esl_zext<5,3>(i_2_fu_418_p2.read());
}

void do_convolution::thread_tmp_3_cast_fu_313_p1() {
    tmp_3_cast_fu_313_p1 = esl_zext<5,3>(i_1_fu_307_p2.read());
}

void do_convolution::thread_tmp_3_fu_301_p2() {
    tmp_3_fu_301_p2 = (!tmp_2_cast_fu_289_p1.read().is_01() || !tmp_2_fu_293_p3.read().is_01())? sc_lv<6>(): (sc_bigint<6>(tmp_2_cast_fu_289_p1.read()) + sc_biguint<6>(tmp_2_fu_293_p3.read()));
}

void do_convolution::thread_tmp_4_fu_240_p3() {
    tmp_4_fu_240_p3 = esl_concat<3,2>(y_assign_1_reg_127.read(), ap_const_lv2_0);
}

void do_convolution::thread_tmp_6_cast_fu_363_p1() {
    tmp_6_cast_fu_363_p1 = esl_zext<6,4>(x_assign_fu_347_p2.read());
}

void do_convolution::thread_tmp_6_fu_317_p3() {
    tmp_6_fu_317_p3 = esl_concat<3,2>(i_1_fu_307_p2.read(), ap_const_lv2_0);
}

void do_convolution::thread_tmp_6_i_cast_fu_498_p1() {
    tmp_6_i_cast_fu_498_p1 = esl_zext<5,3>(j_1_fu_492_p2.read());
}

void do_convolution::thread_tmp_7_fu_377_p2() {
    tmp_7_fu_377_p2 = (!j_reg_161.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_bigint<3>(j_reg_161.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void do_convolution::thread_tmp_7_i_fu_513_p2() {
    tmp_7_i_fu_513_p2 = (!kernel_load_reg_684.read().is_01() || !window_load_reg_679.read().is_01())? sc_lv<32>(): sc_bigint<32>(kernel_load_reg_684.read()) * sc_bigint<32>(window_load_reg_679.read());
}

void do_convolution::thread_tmp_8_cast_fu_383_p1() {
    tmp_8_cast_fu_383_p1 = esl_zext<5,3>(tmp_7_fu_377_p2.read());
}

void do_convolution::thread_tmp_8_fu_325_p2() {
    tmp_8_fu_325_p2 = (!tmp_6_fu_317_p3.read().is_01() || !tmp_3_cast_fu_313_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_6_fu_317_p3.read()) - sc_biguint<5>(tmp_3_cast_fu_313_p1.read()));
}

void do_convolution::thread_tmp_cast_10_fu_468_p1() {
    tmp_cast_10_fu_468_p1 = esl_zext<6,3>(x_assign_1_reg_138.read());
}

void do_convolution::thread_tmp_cast_fu_236_p1() {
    tmp_cast_fu_236_p1 = esl_zext<6,3>(y_assign_1_reg_127.read());
}

void do_convolution::thread_tmp_fu_442_p3() {
    tmp_fu_442_p3 = y_assign_2_fu_413_p2.read().range(3, 3);
}

void do_convolution::thread_tmp_i_i_fu_456_p2() {
    tmp_i_i_fu_456_p2 = (!y_assign_2_fu_413_p2.read().is_01() || !ap_const_lv4_5.is_01())? sc_lv<1>(): (sc_bigint<4>(y_assign_2_fu_413_p2.read()) < sc_bigint<4>(ap_const_lv4_5));
}

void do_convolution::thread_tmp_s_fu_252_p2() {
    tmp_s_fu_252_p2 = (!tmp_cast_fu_236_p1.read().is_01() || !p_shl_cast_fu_248_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_cast_fu_236_p1.read()) + sc_biguint<6>(p_shl_cast_fu_248_p1.read()));
}

void do_convolution::thread_window_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        window_address0 =  (sc_lv<4>) (tmp_20_cast_fu_507_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        window_address0 =  (sc_lv<4>) (tmp_19_cast_fu_392_p1.read());
    } else {
        window_address0 = "XXXX";
    }
}

void do_convolution::thread_window_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        window_ce0 = ap_const_logic_1;
    } else {
        window_ce0 = ap_const_logic_0;
    }
}

void do_convolution::thread_window_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_624.read()))) {
        window_we0 = ap_const_logic_1;
    } else {
        window_we0 = ap_const_logic_0;
    }
}

void do_convolution::thread_x_assign_2_fu_517_p2() {
    x_assign_2_fu_517_p2 = (!x_cast_reg_584.read().is_01() || !j_i_cast_reg_656.read().is_01())? sc_lv<4>(): (sc_biguint<4>(x_cast_reg_584.read()) + sc_bigint<4>(j_i_cast_reg_656.read()));
}

void do_convolution::thread_x_assign_fu_347_p2() {
    x_assign_fu_347_p2 = (!j_cast_fu_337_p1.read().is_01() || !x_cast_reg_584.read().is_01())? sc_lv<4>(): (sc_bigint<4>(j_cast_fu_337_p1.read()) + sc_biguint<4>(x_cast_reg_584.read()));
}

void do_convolution::thread_x_cast_fu_258_p1() {
    x_cast_fu_258_p1 = esl_zext<4,3>(x_assign_1_reg_138.read());
}

void do_convolution::thread_x_fu_268_p2() {
    x_fu_268_p2 = (!x_assign_1_reg_138.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_assign_1_reg_138.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void do_convolution::thread_y_assign_2_fu_413_p2() {
    y_assign_2_fu_413_p2 = (!y_cast_reg_565.read().is_01() || !i_i_cast_fu_403_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(y_cast_reg_565.read()) + sc_bigint<4>(i_i_cast_fu_403_p1.read()));
}

void do_convolution::thread_y_assign_fu_284_p2() {
    y_assign_fu_284_p2 = (!i_cast_fu_274_p1.read().is_01() || !y_cast_reg_565.read().is_01())? sc_lv<4>(): (sc_bigint<4>(i_cast_fu_274_p1.read()) + sc_biguint<4>(y_cast_reg_565.read()));
}

void do_convolution::thread_y_cast_fu_220_p1() {
    y_cast_fu_220_p1 = esl_zext<4,3>(y_assign_1_reg_127.read());
}

void do_convolution::thread_y_fu_230_p2() {
    y_fu_230_p2 = (!y_assign_1_reg_127.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(y_assign_1_reg_127.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void do_convolution::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond3_fu_224_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_262_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_278_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_341_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(exitcond1_i_fu_407_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(exitcond_i_fu_486_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void do_convolution::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_address0\" :  \"" << data_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_ce0\" :  \"" << data_out_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_we0\" :  \"" << data_out_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_d0\" :  \"" << data_out_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_in_address0\" :  \"" << data_in_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_in_ce0\" :  \"" << data_in_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_q0\" :  \"" << data_in_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address0\" :  \"" << kernel_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce0\" :  \"" << kernel_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q0\" :  \"" << kernel_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

