// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _do_convolution_HH_
#define _do_convolution_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "do_convolution_wibkb.h"

namespace ap_rtl {

struct do_convolution : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > data_out_address0;
    sc_out< sc_logic > data_out_ce0;
    sc_out< sc_logic > data_out_we0;
    sc_out< sc_lv<32> > data_out_d0;
    sc_out< sc_lv<5> > data_in_address0;
    sc_out< sc_logic > data_in_ce0;
    sc_in< sc_lv<32> > data_in_q0;
    sc_out< sc_lv<4> > kernel_address0;
    sc_out< sc_logic > kernel_ce0;
    sc_in< sc_lv<32> > kernel_q0;


    // Module declarations
    do_convolution(sc_module_name name);
    SC_HAS_PROCESS(do_convolution);

    ~do_convolution();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    do_convolution_wibkb* window_U;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > y_cast_fu_220_p1;
    sc_signal< sc_lv<4> > y_cast_reg_565;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<3> > y_fu_230_p2;
    sc_signal< sc_lv<3> > y_reg_574;
    sc_signal< sc_lv<6> > tmp_s_fu_252_p2;
    sc_signal< sc_lv<6> > tmp_s_reg_579;
    sc_signal< sc_lv<1> > exitcond3_fu_224_p2;
    sc_signal< sc_lv<4> > x_cast_fu_258_p1;
    sc_signal< sc_lv<4> > x_cast_reg_584;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > x_fu_268_p2;
    sc_signal< sc_lv<3> > x_reg_593;
    sc_signal< sc_lv<6> > tmp_3_fu_301_p2;
    sc_signal< sc_lv<6> > tmp_3_reg_601;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > exitcond1_fu_278_p2;
    sc_signal< sc_lv<3> > i_1_fu_307_p2;
    sc_signal< sc_lv<3> > i_1_reg_606;
    sc_signal< sc_lv<5> > tmp_8_fu_325_p2;
    sc_signal< sc_lv<5> > tmp_8_reg_611;
    sc_signal< sc_lv<1> > switch8_fu_331_p2;
    sc_signal< sc_lv<1> > switch8_reg_616;
    sc_signal< sc_lv<1> > or_cond_fu_358_p2;
    sc_signal< sc_lv<1> > or_cond_reg_624;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond_fu_341_p2;
    sc_signal< sc_lv<3> > j_2_fu_397_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > i_2_fu_418_p2;
    sc_signal< sc_lv<3> > i_2_reg_641;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > exitcond1_i_fu_407_p2;
    sc_signal< sc_lv<5> > tmp_12_fu_436_p2;
    sc_signal< sc_lv<5> > tmp_12_reg_646;
    sc_signal< sc_lv<1> > tmp4_fu_462_p2;
    sc_signal< sc_lv<1> > tmp4_reg_651;
    sc_signal< sc_lv<4> > j_i_cast_fu_482_p1;
    sc_signal< sc_lv<4> > j_i_cast_reg_656;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<3> > j_1_fu_492_p2;
    sc_signal< sc_lv<3> > j_1_reg_664;
    sc_signal< sc_lv<1> > exitcond_i_fu_486_p2;
    sc_signal< sc_lv<32> > window_q0;
    sc_signal< sc_lv<32> > window_load_reg_679;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > kernel_load_reg_684;
    sc_signal< sc_lv<32> > tmp_7_i_fu_513_p2;
    sc_signal< sc_lv<32> > tmp_7_i_reg_689;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > result_1_fu_557_p3;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<4> > window_address0;
    sc_signal< sc_logic > window_ce0;
    sc_signal< sc_logic > window_we0;
    sc_signal< sc_lv<3> > y_assign_1_reg_127;
    sc_signal< sc_lv<1> > exitcond2_fu_262_p2;
    sc_signal< sc_lv<3> > x_assign_1_reg_138;
    sc_signal< sc_lv<3> > i_reg_150;
    sc_signal< sc_lv<3> > j_reg_161;
    sc_signal< sc_lv<32> > val_out_reg_173;
    sc_signal< sc_lv<3> > i_i_reg_186;
    sc_signal< sc_lv<32> > result_1_i_reg_197;
    sc_signal< sc_lv<3> > j_i_reg_209;
    sc_signal< sc_lv<64> > tmp_18_cast_fu_372_p1;
    sc_signal< sc_lv<64> > tmp_19_cast_fu_392_p1;
    sc_signal< sc_lv<64> > tmp_15_cast_fu_477_p1;
    sc_signal< sc_lv<64> > tmp_20_cast_fu_507_p1;
    sc_signal< sc_lv<5> > tmp_4_fu_240_p3;
    sc_signal< sc_lv<6> > tmp_cast_fu_236_p1;
    sc_signal< sc_lv<6> > p_shl_cast_fu_248_p1;
    sc_signal< sc_lv<4> > i_cast_fu_274_p1;
    sc_signal< sc_lv<4> > y_assign_fu_284_p2;
    sc_signal< sc_lv<6> > tmp_2_cast_fu_289_p1;
    sc_signal< sc_lv<6> > tmp_2_fu_293_p3;
    sc_signal< sc_lv<5> > tmp_6_fu_317_p3;
    sc_signal< sc_lv<5> > tmp_3_cast_fu_313_p1;
    sc_signal< sc_lv<4> > j_cast_fu_337_p1;
    sc_signal< sc_lv<4> > x_assign_fu_347_p2;
    sc_signal< sc_lv<1> > switch_fu_352_p2;
    sc_signal< sc_lv<6> > tmp_6_cast_fu_363_p1;
    sc_signal< sc_lv<6> > tmp_13_fu_367_p2;
    sc_signal< sc_lv<3> > tmp_7_fu_377_p2;
    sc_signal< sc_lv<5> > tmp_8_cast_fu_383_p1;
    sc_signal< sc_lv<5> > tmp_14_fu_387_p2;
    sc_signal< sc_lv<4> > i_i_cast_fu_403_p1;
    sc_signal< sc_lv<5> > tmp_11_fu_428_p3;
    sc_signal< sc_lv<5> > tmp_2_i_cast_fu_424_p1;
    sc_signal< sc_lv<4> > y_assign_2_fu_413_p2;
    sc_signal< sc_lv<1> > tmp_fu_442_p3;
    sc_signal< sc_lv<1> > tmp_i_i_fu_456_p2;
    sc_signal< sc_lv<1> > rev_fu_450_p2;
    sc_signal< sc_lv<6> > tmp_cast_10_fu_468_p1;
    sc_signal< sc_lv<6> > tmp_10_fu_472_p2;
    sc_signal< sc_lv<5> > tmp_6_i_cast_fu_498_p1;
    sc_signal< sc_lv<5> > tmp_16_fu_502_p2;
    sc_signal< sc_lv<4> > x_assign_2_fu_517_p2;
    sc_signal< sc_lv<1> > tmp_15_fu_521_p3;
    sc_signal< sc_lv<1> > tmp_1_i_i_fu_535_p2;
    sc_signal< sc_lv<1> > rev7_fu_529_p2;
    sc_signal< sc_lv<1> > tmp5_fu_541_p2;
    sc_signal< sc_lv<1> > p_i_i_fu_547_p2;
    sc_signal< sc_lv<32> > result_fu_552_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_data_in_address0();
    void thread_data_in_ce0();
    void thread_data_out_address0();
    void thread_data_out_ce0();
    void thread_data_out_d0();
    void thread_data_out_we0();
    void thread_exitcond1_fu_278_p2();
    void thread_exitcond1_i_fu_407_p2();
    void thread_exitcond2_fu_262_p2();
    void thread_exitcond3_fu_224_p2();
    void thread_exitcond_fu_341_p2();
    void thread_exitcond_i_fu_486_p2();
    void thread_i_1_fu_307_p2();
    void thread_i_2_fu_418_p2();
    void thread_i_cast_fu_274_p1();
    void thread_i_i_cast_fu_403_p1();
    void thread_j_1_fu_492_p2();
    void thread_j_2_fu_397_p2();
    void thread_j_cast_fu_337_p1();
    void thread_j_i_cast_fu_482_p1();
    void thread_kernel_address0();
    void thread_kernel_ce0();
    void thread_or_cond_fu_358_p2();
    void thread_p_i_i_fu_547_p2();
    void thread_p_shl_cast_fu_248_p1();
    void thread_result_1_fu_557_p3();
    void thread_result_fu_552_p2();
    void thread_rev7_fu_529_p2();
    void thread_rev_fu_450_p2();
    void thread_switch8_fu_331_p2();
    void thread_switch_fu_352_p2();
    void thread_tmp4_fu_462_p2();
    void thread_tmp5_fu_541_p2();
    void thread_tmp_10_fu_472_p2();
    void thread_tmp_11_fu_428_p3();
    void thread_tmp_12_fu_436_p2();
    void thread_tmp_13_fu_367_p2();
    void thread_tmp_14_fu_387_p2();
    void thread_tmp_15_cast_fu_477_p1();
    void thread_tmp_15_fu_521_p3();
    void thread_tmp_16_fu_502_p2();
    void thread_tmp_18_cast_fu_372_p1();
    void thread_tmp_19_cast_fu_392_p1();
    void thread_tmp_1_i_i_fu_535_p2();
    void thread_tmp_20_cast_fu_507_p1();
    void thread_tmp_2_cast_fu_289_p1();
    void thread_tmp_2_fu_293_p3();
    void thread_tmp_2_i_cast_fu_424_p1();
    void thread_tmp_3_cast_fu_313_p1();
    void thread_tmp_3_fu_301_p2();
    void thread_tmp_4_fu_240_p3();
    void thread_tmp_6_cast_fu_363_p1();
    void thread_tmp_6_fu_317_p3();
    void thread_tmp_6_i_cast_fu_498_p1();
    void thread_tmp_7_fu_377_p2();
    void thread_tmp_7_i_fu_513_p2();
    void thread_tmp_8_cast_fu_383_p1();
    void thread_tmp_8_fu_325_p2();
    void thread_tmp_cast_10_fu_468_p1();
    void thread_tmp_cast_fu_236_p1();
    void thread_tmp_fu_442_p3();
    void thread_tmp_i_i_fu_456_p2();
    void thread_tmp_s_fu_252_p2();
    void thread_window_address0();
    void thread_window_ce0();
    void thread_window_we0();
    void thread_x_assign_2_fu_517_p2();
    void thread_x_assign_fu_347_p2();
    void thread_x_cast_fu_258_p1();
    void thread_x_fu_268_p2();
    void thread_y_assign_2_fu_413_p2();
    void thread_y_assign_fu_284_p2();
    void thread_y_cast_fu_220_p1();
    void thread_y_fu_230_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
