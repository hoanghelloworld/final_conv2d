// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "do_convolution.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic do_convolution::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic do_convolution::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> do_convolution::ap_ST_fsm_state1 = "1";
const sc_lv<7> do_convolution::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<7> do_convolution::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<7> do_convolution::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<7> do_convolution::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<7> do_convolution::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<7> do_convolution::ap_ST_fsm_state10 = "1000000";
const sc_lv<32> do_convolution::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool do_convolution::ap_const_boolean_1 = true;
const sc_lv<32> do_convolution::ap_const_lv32_2 = "10";
const bool do_convolution::ap_const_boolean_0 = false;
const sc_lv<1> do_convolution::ap_const_lv1_0 = "0";
const sc_lv<32> do_convolution::ap_const_lv32_3 = "11";
const sc_lv<32> do_convolution::ap_const_lv32_4 = "100";
const sc_lv<32> do_convolution::ap_const_lv32_5 = "101";
const sc_lv<1> do_convolution::ap_const_lv1_1 = "1";
const sc_lv<32> do_convolution::ap_const_lv32_1 = "1";
const sc_lv<5> do_convolution::ap_const_lv5_0 = "00000";
const sc_lv<3> do_convolution::ap_const_lv3_0 = "000";
const sc_lv<64> do_convolution::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> do_convolution::ap_const_lv64_1 = "1";
const sc_lv<64> do_convolution::ap_const_lv64_2 = "10";
const sc_lv<64> do_convolution::ap_const_lv64_3 = "11";
const sc_lv<64> do_convolution::ap_const_lv64_4 = "100";
const sc_lv<64> do_convolution::ap_const_lv64_5 = "101";
const sc_lv<64> do_convolution::ap_const_lv64_6 = "110";
const sc_lv<64> do_convolution::ap_const_lv64_7 = "111";
const sc_lv<64> do_convolution::ap_const_lv64_8 = "1000";
const sc_lv<3> do_convolution::ap_const_lv3_7 = "111";
const sc_lv<3> do_convolution::ap_const_lv3_1 = "1";
const sc_lv<3> do_convolution::ap_const_lv3_5 = "101";
const sc_lv<5> do_convolution::ap_const_lv5_19 = "11001";
const sc_lv<5> do_convolution::ap_const_lv5_1 = "1";
const sc_lv<2> do_convolution::ap_const_lv2_0 = "00";
const sc_lv<3> do_convolution::ap_const_lv3_2 = "10";
const sc_lv<32> do_convolution::ap_const_lv32_6 = "110";

do_convolution::do_convolution(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage2_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_341_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_280_p4);
    sensitive << ( indvar_flatten_reg_276 );
    sensitive << ( exitcond_flatten_reg_974 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( indvar_flatten_next_reg_978 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_x_assign_1_phi_fu_302_p4);
    sensitive << ( x_assign_1_reg_298 );
    sensitive << ( exitcond_flatten_reg_974 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( x_reg_1078 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_y_assign_1_phi_fu_291_p4);
    sensitive << ( y_assign_1_reg_287 );
    sensitive << ( exitcond_flatten_reg_974 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_mid2_reg_989 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_data_in_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_12_cast_fu_608_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_9_cast_fu_463_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_15_cast_fu_558_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_11_cast_fu_680_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_17_cast_fu_734_p1 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_data_in_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_13_cast_fu_478_p1 );
    sensitive << ( tmp_10_cast_fu_524_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_16_cast_fu_632_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_14_cast_fu_684_p1 );

    SC_METHOD(thread_data_in_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_in_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_data_out_address0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_12_cast_reg_1100 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_data_out_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_data_out_d0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( p_i1_reg_1229 );
    sensitive << ( result_2_2_1_i_reg_1256 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( result_3_2_2_i_fu_870_p2 );

    SC_METHOD(thread_data_out_we0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_974_pp0_iter1_reg );

    SC_METHOD(thread_exitcond_flatten_fu_341_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_280_p4 );

    SC_METHOD(thread_exitcond_fu_353_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( ap_phi_mux_x_assign_1_phi_fu_302_p4 );

    SC_METHOD(thread_indvar_flatten_next_fu_347_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_280_p4 );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_kernel_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_kernel_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_or_cond1_i1_fu_738_p2);
    sensitive << ( tmp_i4_mid2_reg_1015 );
    sensitive << ( tmp_9_i_reg_1051 );

    SC_METHOD(thread_or_cond1_i_fu_514_p2);
    sensitive << ( tmp_i_mid2_reg_1001 );
    sensitive << ( tmp_9_i_fu_509_p2 );

    SC_METHOD(thread_p_i1_fu_790_p2);
    sensitive << ( tmp_i4_mid2_reg_1015 );
    sensitive << ( tmp_1_i4_reg_1115 );

    SC_METHOD(thread_p_i_fu_623_p2);
    sensitive << ( tmp_i_mid2_reg_1001 );
    sensitive << ( tmp_1_i4_fu_618_p2 );

    SC_METHOD(thread_p_shl1_cast_fu_395_p1);
    sensitive << ( tmp_4_fu_387_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_499_p1);
    sensitive << ( tmp_fu_492_p3 );

    SC_METHOD(thread_p_shl_cast_fu_589_p1);
    sensitive << ( tmp_1_fu_582_p3 );

    SC_METHOD(thread_result_2_0_1_i_fu_706_p3);
    sensitive << ( tmp_i_mid2_reg_1001 );
    sensitive << ( result_3_0_1_i_fu_701_p2 );

    SC_METHOD(thread_result_2_0_2_i_fu_761_p3);
    sensitive << ( p_i_reg_1122 );
    sensitive << ( result_2_0_1_i_reg_1177 );
    sensitive << ( result_3_0_2_i_fu_757_p2 );

    SC_METHOD(thread_result_2_1_2_i_fu_822_p3);
    sensitive << ( tmp_1_i4_reg_1115 );
    sensitive << ( result_3_1_1_i_fu_812_p2 );
    sensitive << ( result_3_1_2_i_fu_817_p2 );

    SC_METHOD(thread_result_2_1_i_fu_806_p3);
    sensitive << ( tmp_9_i_reg_1051 );
    sensitive << ( result_2_0_2_i_reg_1213 );
    sensitive << ( result_3_1_i_fu_802_p2 );

    SC_METHOD(thread_result_2_2_1_i_fu_859_p3);
    sensitive << ( tmp_i4_mid2_reg_1015_pp0_iter1_reg );
    sensitive << ( result_2_1_2_i_reg_1239 );
    sensitive << ( result_3_2_1_i_fu_854_p2 );

    SC_METHOD(thread_result_2_2_i_fu_848_p3);
    sensitive << ( or_cond1_i1_reg_1198 );
    sensitive << ( result_2_1_2_i_reg_1239 );
    sensitive << ( result_3_2_i_fu_844_p2 );

    SC_METHOD(thread_result_2_i_fu_695_p3);
    sensitive << ( or_cond1_i_reg_1058 );
    sensitive << ( tmp_7_i_reg_1147 );

    SC_METHOD(thread_result_3_0_1_i_fu_701_p2);
    sensitive << ( tmp_7_0_1_i_reg_1152 );
    sensitive << ( result_2_i_fu_695_p3 );

    SC_METHOD(thread_result_3_0_2_i_fu_757_p2);
    sensitive << ( result_2_0_1_i_reg_1177 );
    sensitive << ( tmp_7_0_2_i_reg_1183 );

    SC_METHOD(thread_result_3_1_1_i_fu_812_p2);
    sensitive << ( tmp_7_1_1_i_reg_1219 );
    sensitive << ( result_2_1_i_fu_806_p3 );

    SC_METHOD(thread_result_3_1_2_i_fu_817_p2);
    sensitive << ( tmp_7_1_2_i_reg_1224 );
    sensitive << ( result_3_1_1_i_fu_812_p2 );

    SC_METHOD(thread_result_3_1_i_fu_802_p2);
    sensitive << ( tmp_7_1_i_reg_1188 );
    sensitive << ( result_2_0_2_i_reg_1213 );

    SC_METHOD(thread_result_3_2_1_i_fu_854_p2);
    sensitive << ( tmp_7_2_1_i_reg_1251 );
    sensitive << ( result_2_2_i_fu_848_p3 );

    SC_METHOD(thread_result_3_2_2_i_fu_870_p2);
    sensitive << ( result_2_2_1_i_reg_1256 );
    sensitive << ( tmp_7_2_2_i_reg_1262 );

    SC_METHOD(thread_result_3_2_i_fu_844_p2);
    sensitive << ( result_2_1_2_i_reg_1239 );
    sensitive << ( tmp_7_2_i_reg_1246 );

    SC_METHOD(thread_tmp_10_cast_fu_524_p1);
    sensitive << ( tmp_s_fu_519_p2 );

    SC_METHOD(thread_tmp_10_fu_472_p2);
    sensitive << ( tmp_5_fu_399_p2 );
    sensitive << ( tmp_6_0_1_cast_fu_468_p1 );

    SC_METHOD(thread_tmp_11_cast_fu_680_p1);
    sensitive << ( tmp_6_reg_1095 );

    SC_METHOD(thread_tmp_11_fu_613_p2);
    sensitive << ( tmp_6_0_1_cast_reg_1034 );
    sensitive << ( tmp_8_fu_593_p2 );

    SC_METHOD(thread_tmp_12_cast_fu_608_p1);
    sensitive << ( tmp_7_fu_604_p2 );

    SC_METHOD(thread_tmp_12_fu_553_p2);
    sensitive << ( tmp_5_reg_996 );
    sensitive << ( tmp_6_0_2_cast_fu_549_p1 );

    SC_METHOD(thread_tmp_13_cast_fu_478_p1);
    sensitive << ( tmp_10_fu_472_p2 );

    SC_METHOD(thread_tmp_13_fu_628_p2);
    sensitive << ( tmp_3_reg_1045 );
    sensitive << ( tmp_6_0_2_cast_reg_1084 );

    SC_METHOD(thread_tmp_14_cast_fu_684_p1);
    sensitive << ( tmp_11_reg_1110 );

    SC_METHOD(thread_tmp_14_fu_637_p2);
    sensitive << ( tmp_6_0_2_cast_reg_1084 );
    sensitive << ( tmp_8_fu_593_p2 );

    SC_METHOD(thread_tmp_15_cast_fu_558_p1);
    sensitive << ( tmp_12_fu_553_p2 );

    SC_METHOD(thread_tmp_16_cast_fu_632_p1);
    sensitive << ( tmp_13_fu_628_p2 );

    SC_METHOD(thread_tmp_17_cast_fu_734_p1);
    sensitive << ( tmp_14_reg_1132 );

    SC_METHOD(thread_tmp_1_fu_582_p3);
    sensitive << ( tmp_2_2_mid2_reg_1009 );

    SC_METHOD(thread_tmp_1_i4_fu_618_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_974 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( x_reg_1078 );

    SC_METHOD(thread_tmp_2_2_mid2_cast_fu_579_p1);
    sensitive << ( tmp_2_2_mid2_reg_1009 );

    SC_METHOD(thread_tmp_2_2_mid2_fu_425_p3);
    sensitive << ( y_fu_329_p2 );
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( y_assign_2_mid1_fu_419_p2 );

    SC_METHOD(thread_tmp_3_fu_503_p2);
    sensitive << ( p_shl2_cast_fu_499_p1 );
    sensitive << ( tmp_mid2_cast_fu_489_p1 );

    SC_METHOD(thread_tmp_4_fu_387_p3);
    sensitive << ( tmp_4_mid2_v_fu_375_p3 );

    SC_METHOD(thread_tmp_4_mid2_cast_fu_383_p1);
    sensitive << ( tmp_4_mid2_v_fu_375_p3 );

    SC_METHOD(thread_tmp_4_mid2_v_fu_375_p3);
    sensitive << ( ap_phi_mux_y_assign_1_phi_fu_291_p4 );
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( y_assign_fu_317_p2 );

    SC_METHOD(thread_tmp_5_fu_399_p2);
    sensitive << ( p_shl1_cast_fu_395_p1 );
    sensitive << ( tmp_4_mid2_cast_fu_383_p1 );

    SC_METHOD(thread_tmp_6_0_1_cast_fu_468_p1);
    sensitive << ( x_assign_1_mid2_fu_359_p3 );

    SC_METHOD(thread_tmp_6_0_2_cast_fu_549_p1);
    sensitive << ( x_fu_544_p2 );

    SC_METHOD(thread_tmp_6_cast_fu_453_p1);
    sensitive << ( x_assign_fu_447_p2 );

    SC_METHOD(thread_tmp_6_fu_599_p2);
    sensitive << ( tmp_6_cast_reg_1023 );
    sensitive << ( tmp_8_fu_593_p2 );

    SC_METHOD(thread_tmp_7_0_1_i_fu_662_p2);
    sensitive << ( reg_313 );
    sensitive << ( window_0_1_1_4_reg_1073 );

    SC_METHOD(thread_tmp_7_0_2_i_fu_713_p2);
    sensitive << ( reg_309 );
    sensitive << ( window_0_2_1_5_reg_1137 );

    SC_METHOD(thread_tmp_7_1_1_i_fu_767_p2);
    sensitive << ( reg_309 );
    sensitive << ( window_1_1_reg_1167 );

    SC_METHOD(thread_tmp_7_1_2_i_fu_772_p2);
    sensitive << ( reg_313 );
    sensitive << ( window_1_2_1_7_reg_1172 );

    SC_METHOD(thread_tmp_7_1_i_fu_718_p2);
    sensitive << ( reg_313 );
    sensitive << ( window_1_0_1_6_reg_1142 );

    SC_METHOD(thread_tmp_7_2_1_i_fu_834_p2);
    sensitive << ( reg_313 );
    sensitive << ( window_2_1_1_9_reg_1208 );

    SC_METHOD(thread_tmp_7_2_2_i_fu_865_p2);
    sensitive << ( reg_309 );
    sensitive << ( window_2_2_1_10_reg_1234 );

    SC_METHOD(thread_tmp_7_2_i_fu_829_p2);
    sensitive << ( reg_309 );
    sensitive << ( window_2_0_1_8_reg_1203 );

    SC_METHOD(thread_tmp_7_fu_604_p2);
    sensitive << ( tmp_6_0_1_cast_reg_1034 );
    sensitive << ( tmp_3_reg_1045 );

    SC_METHOD(thread_tmp_7_i_fu_657_p2);
    sensitive << ( reg_309 );
    sensitive << ( window_0_0_1_3_reg_1068 );

    SC_METHOD(thread_tmp_8_fu_593_p2);
    sensitive << ( p_shl_cast_fu_589_p1 );
    sensitive << ( tmp_2_2_mid2_cast_fu_579_p1 );

    SC_METHOD(thread_tmp_9_cast_fu_463_p1);
    sensitive << ( tmp_9_fu_457_p2 );

    SC_METHOD(thread_tmp_9_fu_457_p2);
    sensitive << ( tmp_5_fu_399_p2 );
    sensitive << ( tmp_6_cast_fu_453_p1 );

    SC_METHOD(thread_tmp_9_i_fu_509_p2);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( exitcond_flatten_reg_974 );
    sensitive << ( x_assign_1_mid2_reg_983 );

    SC_METHOD(thread_tmp_fu_492_p3);
    sensitive << ( tmp_mid2_reg_989 );

    SC_METHOD(thread_tmp_i4_fu_335_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( y_fu_329_p2 );

    SC_METHOD(thread_tmp_i4_mid1_fu_433_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( y_assign_2_mid1_fu_419_p2 );

    SC_METHOD(thread_tmp_i4_mid2_fu_439_p3);
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( tmp_i4_mid1_fu_433_p2 );
    sensitive << ( tmp_i4_fu_335_p2 );

    SC_METHOD(thread_tmp_i_fu_323_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_y_assign_1_phi_fu_291_p4 );

    SC_METHOD(thread_tmp_i_mid1_fu_405_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( y_fu_329_p2 );

    SC_METHOD(thread_tmp_i_mid2_fu_411_p3);
    sensitive << ( exitcond_fu_353_p2 );
    sensitive << ( tmp_i_mid1_fu_405_p2 );
    sensitive << ( tmp_i_fu_323_p2 );

    SC_METHOD(thread_tmp_mid2_cast_fu_489_p1);
    sensitive << ( tmp_mid2_reg_989 );

    SC_METHOD(thread_tmp_mid2_fu_367_p3);
    sensitive << ( ap_phi_mux_y_assign_1_phi_fu_291_p4 );
    sensitive << ( y_fu_329_p2 );
    sensitive << ( exitcond_fu_353_p2 );

    SC_METHOD(thread_tmp_s_fu_519_p2);
    sensitive << ( tmp_6_cast_reg_1023 );
    sensitive << ( tmp_3_fu_503_p2 );

    SC_METHOD(thread_window_0_0_1_3_fu_529_p3);
    sensitive << ( data_in_q0 );
    sensitive << ( or_cond1_i_fu_514_p2 );
    sensitive << ( window_0_0_1_fu_74 );

    SC_METHOD(thread_window_0_1_1_4_fu_537_p3);
    sensitive << ( data_in_q1 );
    sensitive << ( tmp_i_mid2_reg_1001 );
    sensitive << ( window_0_1_1_fu_78 );

    SC_METHOD(thread_window_0_2_1_5_fu_642_p3);
    sensitive << ( data_in_q0 );
    sensitive << ( p_i_fu_623_p2 );
    sensitive << ( window_0_2_1_fu_82 );

    SC_METHOD(thread_window_1_0_1_6_fu_650_p3);
    sensitive << ( data_in_q1 );
    sensitive << ( tmp_9_i_reg_1051 );
    sensitive << ( window_1_0_1_fu_86 );

    SC_METHOD(thread_window_1_2_1_7_fu_688_p3);
    sensitive << ( data_in_q1 );
    sensitive << ( tmp_1_i4_reg_1115 );
    sensitive << ( window_1_2_1_fu_90 );

    SC_METHOD(thread_window_2_0_1_8_fu_742_p3);
    sensitive << ( data_in_q0 );
    sensitive << ( or_cond1_i1_fu_738_p2 );
    sensitive << ( window_2_0_1_fu_94 );

    SC_METHOD(thread_window_2_1_1_9_fu_750_p3);
    sensitive << ( data_in_q1 );
    sensitive << ( tmp_i4_mid2_reg_1015 );
    sensitive << ( window_2_1_1_fu_98 );

    SC_METHOD(thread_window_2_2_1_10_fu_794_p3);
    sensitive << ( data_in_q0 );
    sensitive << ( p_i1_fu_790_p2 );
    sensitive << ( window_2_2_1_fu_102 );

    SC_METHOD(thread_x_assign_1_mid2_fu_359_p3);
    sensitive << ( ap_phi_mux_x_assign_1_phi_fu_302_p4 );
    sensitive << ( exitcond_fu_353_p2 );

    SC_METHOD(thread_x_assign_fu_447_p2);
    sensitive << ( x_assign_1_mid2_fu_359_p3 );

    SC_METHOD(thread_x_fu_544_p2);
    sensitive << ( x_assign_1_mid2_reg_983 );

    SC_METHOD(thread_y_assign_2_mid1_fu_419_p2);
    sensitive << ( ap_phi_mux_y_assign_1_phi_fu_291_p4 );

    SC_METHOD(thread_y_assign_fu_317_p2);
    sensitive << ( ap_phi_mux_y_assign_1_phi_fu_291_p4 );

    SC_METHOD(thread_y_fu_329_p2);
    sensitive << ( ap_phi_mux_y_assign_1_phi_fu_291_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_fu_341_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "do_convolution_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_out_address0, "(port)data_out_address0");
    sc_trace(mVcdFile, data_out_ce0, "(port)data_out_ce0");
    sc_trace(mVcdFile, data_out_we0, "(port)data_out_we0");
    sc_trace(mVcdFile, data_out_d0, "(port)data_out_d0");
    sc_trace(mVcdFile, data_in_address0, "(port)data_in_address0");
    sc_trace(mVcdFile, data_in_ce0, "(port)data_in_ce0");
    sc_trace(mVcdFile, data_in_q0, "(port)data_in_q0");
    sc_trace(mVcdFile, data_in_address1, "(port)data_in_address1");
    sc_trace(mVcdFile, data_in_ce1, "(port)data_in_ce1");
    sc_trace(mVcdFile, data_in_q1, "(port)data_in_q1");
    sc_trace(mVcdFile, kernel_address0, "(port)kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "(port)kernel_ce0");
    sc_trace(mVcdFile, kernel_q0, "(port)kernel_q0");
    sc_trace(mVcdFile, kernel_address1, "(port)kernel_address1");
    sc_trace(mVcdFile, kernel_ce1, "(port)kernel_ce1");
    sc_trace(mVcdFile, kernel_q1, "(port)kernel_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_276, "indvar_flatten_reg_276");
    sc_trace(mVcdFile, y_assign_1_reg_287, "y_assign_1_reg_287");
    sc_trace(mVcdFile, x_assign_1_reg_298, "x_assign_1_reg_298");
    sc_trace(mVcdFile, reg_309, "reg_309");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage1_iter1, "ap_block_state8_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, exitcond_flatten_reg_974, "exitcond_flatten_reg_974");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage2_iter1, "ap_block_state9_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, tmp_i4_mid2_reg_1015, "tmp_i4_mid2_reg_1015");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter1, "ap_block_state7_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, reg_313, "reg_313");
    sc_trace(mVcdFile, exitcond_flatten_fu_341_p2, "exitcond_flatten_fu_341_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_974_pp0_iter1_reg, "exitcond_flatten_reg_974_pp0_iter1_reg");
    sc_trace(mVcdFile, indvar_flatten_next_fu_347_p2, "indvar_flatten_next_fu_347_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_978, "indvar_flatten_next_reg_978");
    sc_trace(mVcdFile, x_assign_1_mid2_fu_359_p3, "x_assign_1_mid2_fu_359_p3");
    sc_trace(mVcdFile, x_assign_1_mid2_reg_983, "x_assign_1_mid2_reg_983");
    sc_trace(mVcdFile, tmp_mid2_fu_367_p3, "tmp_mid2_fu_367_p3");
    sc_trace(mVcdFile, tmp_mid2_reg_989, "tmp_mid2_reg_989");
    sc_trace(mVcdFile, tmp_5_fu_399_p2, "tmp_5_fu_399_p2");
    sc_trace(mVcdFile, tmp_5_reg_996, "tmp_5_reg_996");
    sc_trace(mVcdFile, tmp_i_mid2_fu_411_p3, "tmp_i_mid2_fu_411_p3");
    sc_trace(mVcdFile, tmp_i_mid2_reg_1001, "tmp_i_mid2_reg_1001");
    sc_trace(mVcdFile, tmp_2_2_mid2_fu_425_p3, "tmp_2_2_mid2_fu_425_p3");
    sc_trace(mVcdFile, tmp_2_2_mid2_reg_1009, "tmp_2_2_mid2_reg_1009");
    sc_trace(mVcdFile, tmp_i4_mid2_fu_439_p3, "tmp_i4_mid2_fu_439_p3");
    sc_trace(mVcdFile, tmp_i4_mid2_reg_1015_pp0_iter1_reg, "tmp_i4_mid2_reg_1015_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_6_cast_fu_453_p1, "tmp_6_cast_fu_453_p1");
    sc_trace(mVcdFile, tmp_6_cast_reg_1023, "tmp_6_cast_reg_1023");
    sc_trace(mVcdFile, tmp_6_0_1_cast_fu_468_p1, "tmp_6_0_1_cast_fu_468_p1");
    sc_trace(mVcdFile, tmp_6_0_1_cast_reg_1034, "tmp_6_0_1_cast_reg_1034");
    sc_trace(mVcdFile, tmp_3_fu_503_p2, "tmp_3_fu_503_p2");
    sc_trace(mVcdFile, tmp_3_reg_1045, "tmp_3_reg_1045");
    sc_trace(mVcdFile, tmp_9_i_fu_509_p2, "tmp_9_i_fu_509_p2");
    sc_trace(mVcdFile, tmp_9_i_reg_1051, "tmp_9_i_reg_1051");
    sc_trace(mVcdFile, or_cond1_i_fu_514_p2, "or_cond1_i_fu_514_p2");
    sc_trace(mVcdFile, or_cond1_i_reg_1058, "or_cond1_i_reg_1058");
    sc_trace(mVcdFile, window_0_0_1_3_fu_529_p3, "window_0_0_1_3_fu_529_p3");
    sc_trace(mVcdFile, window_0_0_1_3_reg_1068, "window_0_0_1_3_reg_1068");
    sc_trace(mVcdFile, window_0_1_1_4_fu_537_p3, "window_0_1_1_4_fu_537_p3");
    sc_trace(mVcdFile, window_0_1_1_4_reg_1073, "window_0_1_1_4_reg_1073");
    sc_trace(mVcdFile, x_fu_544_p2, "x_fu_544_p2");
    sc_trace(mVcdFile, x_reg_1078, "x_reg_1078");
    sc_trace(mVcdFile, tmp_6_0_2_cast_fu_549_p1, "tmp_6_0_2_cast_fu_549_p1");
    sc_trace(mVcdFile, tmp_6_0_2_cast_reg_1084, "tmp_6_0_2_cast_reg_1084");
    sc_trace(mVcdFile, tmp_6_fu_599_p2, "tmp_6_fu_599_p2");
    sc_trace(mVcdFile, tmp_6_reg_1095, "tmp_6_reg_1095");
    sc_trace(mVcdFile, tmp_12_cast_fu_608_p1, "tmp_12_cast_fu_608_p1");
    sc_trace(mVcdFile, tmp_12_cast_reg_1100, "tmp_12_cast_reg_1100");
    sc_trace(mVcdFile, tmp_11_fu_613_p2, "tmp_11_fu_613_p2");
    sc_trace(mVcdFile, tmp_11_reg_1110, "tmp_11_reg_1110");
    sc_trace(mVcdFile, tmp_1_i4_fu_618_p2, "tmp_1_i4_fu_618_p2");
    sc_trace(mVcdFile, tmp_1_i4_reg_1115, "tmp_1_i4_reg_1115");
    sc_trace(mVcdFile, p_i_fu_623_p2, "p_i_fu_623_p2");
    sc_trace(mVcdFile, p_i_reg_1122, "p_i_reg_1122");
    sc_trace(mVcdFile, tmp_14_fu_637_p2, "tmp_14_fu_637_p2");
    sc_trace(mVcdFile, tmp_14_reg_1132, "tmp_14_reg_1132");
    sc_trace(mVcdFile, window_0_2_1_5_fu_642_p3, "window_0_2_1_5_fu_642_p3");
    sc_trace(mVcdFile, window_0_2_1_5_reg_1137, "window_0_2_1_5_reg_1137");
    sc_trace(mVcdFile, window_1_0_1_6_fu_650_p3, "window_1_0_1_6_fu_650_p3");
    sc_trace(mVcdFile, window_1_0_1_6_reg_1142, "window_1_0_1_6_reg_1142");
    sc_trace(mVcdFile, tmp_7_i_fu_657_p2, "tmp_7_i_fu_657_p2");
    sc_trace(mVcdFile, tmp_7_i_reg_1147, "tmp_7_i_reg_1147");
    sc_trace(mVcdFile, tmp_7_0_1_i_fu_662_p2, "tmp_7_0_1_i_fu_662_p2");
    sc_trace(mVcdFile, tmp_7_0_1_i_reg_1152, "tmp_7_0_1_i_reg_1152");
    sc_trace(mVcdFile, window_1_1_reg_1167, "window_1_1_reg_1167");
    sc_trace(mVcdFile, window_1_2_1_7_fu_688_p3, "window_1_2_1_7_fu_688_p3");
    sc_trace(mVcdFile, window_1_2_1_7_reg_1172, "window_1_2_1_7_reg_1172");
    sc_trace(mVcdFile, result_2_0_1_i_fu_706_p3, "result_2_0_1_i_fu_706_p3");
    sc_trace(mVcdFile, result_2_0_1_i_reg_1177, "result_2_0_1_i_reg_1177");
    sc_trace(mVcdFile, tmp_7_0_2_i_fu_713_p2, "tmp_7_0_2_i_fu_713_p2");
    sc_trace(mVcdFile, tmp_7_0_2_i_reg_1183, "tmp_7_0_2_i_reg_1183");
    sc_trace(mVcdFile, tmp_7_1_i_fu_718_p2, "tmp_7_1_i_fu_718_p2");
    sc_trace(mVcdFile, tmp_7_1_i_reg_1188, "tmp_7_1_i_reg_1188");
    sc_trace(mVcdFile, or_cond1_i1_fu_738_p2, "or_cond1_i1_fu_738_p2");
    sc_trace(mVcdFile, or_cond1_i1_reg_1198, "or_cond1_i1_reg_1198");
    sc_trace(mVcdFile, window_2_0_1_8_fu_742_p3, "window_2_0_1_8_fu_742_p3");
    sc_trace(mVcdFile, window_2_0_1_8_reg_1203, "window_2_0_1_8_reg_1203");
    sc_trace(mVcdFile, window_2_1_1_9_fu_750_p3, "window_2_1_1_9_fu_750_p3");
    sc_trace(mVcdFile, window_2_1_1_9_reg_1208, "window_2_1_1_9_reg_1208");
    sc_trace(mVcdFile, result_2_0_2_i_fu_761_p3, "result_2_0_2_i_fu_761_p3");
    sc_trace(mVcdFile, result_2_0_2_i_reg_1213, "result_2_0_2_i_reg_1213");
    sc_trace(mVcdFile, tmp_7_1_1_i_fu_767_p2, "tmp_7_1_1_i_fu_767_p2");
    sc_trace(mVcdFile, tmp_7_1_1_i_reg_1219, "tmp_7_1_1_i_reg_1219");
    sc_trace(mVcdFile, tmp_7_1_2_i_fu_772_p2, "tmp_7_1_2_i_fu_772_p2");
    sc_trace(mVcdFile, tmp_7_1_2_i_reg_1224, "tmp_7_1_2_i_reg_1224");
    sc_trace(mVcdFile, p_i1_fu_790_p2, "p_i1_fu_790_p2");
    sc_trace(mVcdFile, p_i1_reg_1229, "p_i1_reg_1229");
    sc_trace(mVcdFile, window_2_2_1_10_fu_794_p3, "window_2_2_1_10_fu_794_p3");
    sc_trace(mVcdFile, window_2_2_1_10_reg_1234, "window_2_2_1_10_reg_1234");
    sc_trace(mVcdFile, result_2_1_2_i_fu_822_p3, "result_2_1_2_i_fu_822_p3");
    sc_trace(mVcdFile, result_2_1_2_i_reg_1239, "result_2_1_2_i_reg_1239");
    sc_trace(mVcdFile, tmp_7_2_i_fu_829_p2, "tmp_7_2_i_fu_829_p2");
    sc_trace(mVcdFile, tmp_7_2_i_reg_1246, "tmp_7_2_i_reg_1246");
    sc_trace(mVcdFile, tmp_7_2_1_i_fu_834_p2, "tmp_7_2_1_i_fu_834_p2");
    sc_trace(mVcdFile, tmp_7_2_1_i_reg_1251, "tmp_7_2_1_i_reg_1251");
    sc_trace(mVcdFile, result_2_2_1_i_fu_859_p3, "result_2_2_1_i_fu_859_p3");
    sc_trace(mVcdFile, result_2_2_1_i_reg_1256, "result_2_2_1_i_reg_1256");
    sc_trace(mVcdFile, tmp_7_2_2_i_fu_865_p2, "tmp_7_2_2_i_fu_865_p2");
    sc_trace(mVcdFile, tmp_7_2_2_i_reg_1262, "tmp_7_2_2_i_reg_1262");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_280_p4, "ap_phi_mux_indvar_flatten_phi_fu_280_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_y_assign_1_phi_fu_291_p4, "ap_phi_mux_y_assign_1_phi_fu_291_p4");
    sc_trace(mVcdFile, ap_phi_mux_x_assign_1_phi_fu_302_p4, "ap_phi_mux_x_assign_1_phi_fu_302_p4");
    sc_trace(mVcdFile, tmp_9_cast_fu_463_p1, "tmp_9_cast_fu_463_p1");
    sc_trace(mVcdFile, tmp_13_cast_fu_478_p1, "tmp_13_cast_fu_478_p1");
    sc_trace(mVcdFile, tmp_10_cast_fu_524_p1, "tmp_10_cast_fu_524_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_15_cast_fu_558_p1, "tmp_15_cast_fu_558_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, tmp_16_cast_fu_632_p1, "tmp_16_cast_fu_632_p1");
    sc_trace(mVcdFile, tmp_11_cast_fu_680_p1, "tmp_11_cast_fu_680_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, tmp_14_cast_fu_684_p1, "tmp_14_cast_fu_684_p1");
    sc_trace(mVcdFile, tmp_17_cast_fu_734_p1, "tmp_17_cast_fu_734_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, window_0_0_1_fu_74, "window_0_0_1_fu_74");
    sc_trace(mVcdFile, window_0_1_1_fu_78, "window_0_1_1_fu_78");
    sc_trace(mVcdFile, window_0_2_1_fu_82, "window_0_2_1_fu_82");
    sc_trace(mVcdFile, window_1_0_1_fu_86, "window_1_0_1_fu_86");
    sc_trace(mVcdFile, window_1_2_1_fu_90, "window_1_2_1_fu_90");
    sc_trace(mVcdFile, window_2_0_1_fu_94, "window_2_0_1_fu_94");
    sc_trace(mVcdFile, window_2_1_1_fu_98, "window_2_1_1_fu_98");
    sc_trace(mVcdFile, window_2_2_1_fu_102, "window_2_2_1_fu_102");
    sc_trace(mVcdFile, y_fu_329_p2, "y_fu_329_p2");
    sc_trace(mVcdFile, exitcond_fu_353_p2, "exitcond_fu_353_p2");
    sc_trace(mVcdFile, y_assign_fu_317_p2, "y_assign_fu_317_p2");
    sc_trace(mVcdFile, tmp_4_mid2_v_fu_375_p3, "tmp_4_mid2_v_fu_375_p3");
    sc_trace(mVcdFile, tmp_4_fu_387_p3, "tmp_4_fu_387_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_395_p1, "p_shl1_cast_fu_395_p1");
    sc_trace(mVcdFile, tmp_4_mid2_cast_fu_383_p1, "tmp_4_mid2_cast_fu_383_p1");
    sc_trace(mVcdFile, tmp_i_mid1_fu_405_p2, "tmp_i_mid1_fu_405_p2");
    sc_trace(mVcdFile, tmp_i_fu_323_p2, "tmp_i_fu_323_p2");
    sc_trace(mVcdFile, y_assign_2_mid1_fu_419_p2, "y_assign_2_mid1_fu_419_p2");
    sc_trace(mVcdFile, tmp_i4_mid1_fu_433_p2, "tmp_i4_mid1_fu_433_p2");
    sc_trace(mVcdFile, tmp_i4_fu_335_p2, "tmp_i4_fu_335_p2");
    sc_trace(mVcdFile, x_assign_fu_447_p2, "x_assign_fu_447_p2");
    sc_trace(mVcdFile, tmp_9_fu_457_p2, "tmp_9_fu_457_p2");
    sc_trace(mVcdFile, tmp_10_fu_472_p2, "tmp_10_fu_472_p2");
    sc_trace(mVcdFile, tmp_fu_492_p3, "tmp_fu_492_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_499_p1, "p_shl2_cast_fu_499_p1");
    sc_trace(mVcdFile, tmp_mid2_cast_fu_489_p1, "tmp_mid2_cast_fu_489_p1");
    sc_trace(mVcdFile, tmp_s_fu_519_p2, "tmp_s_fu_519_p2");
    sc_trace(mVcdFile, tmp_12_fu_553_p2, "tmp_12_fu_553_p2");
    sc_trace(mVcdFile, tmp_1_fu_582_p3, "tmp_1_fu_582_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_589_p1, "p_shl_cast_fu_589_p1");
    sc_trace(mVcdFile, tmp_2_2_mid2_cast_fu_579_p1, "tmp_2_2_mid2_cast_fu_579_p1");
    sc_trace(mVcdFile, tmp_8_fu_593_p2, "tmp_8_fu_593_p2");
    sc_trace(mVcdFile, tmp_7_fu_604_p2, "tmp_7_fu_604_p2");
    sc_trace(mVcdFile, tmp_13_fu_628_p2, "tmp_13_fu_628_p2");
    sc_trace(mVcdFile, result_2_i_fu_695_p3, "result_2_i_fu_695_p3");
    sc_trace(mVcdFile, result_3_0_1_i_fu_701_p2, "result_3_0_1_i_fu_701_p2");
    sc_trace(mVcdFile, result_3_0_2_i_fu_757_p2, "result_3_0_2_i_fu_757_p2");
    sc_trace(mVcdFile, result_3_1_i_fu_802_p2, "result_3_1_i_fu_802_p2");
    sc_trace(mVcdFile, result_2_1_i_fu_806_p3, "result_2_1_i_fu_806_p3");
    sc_trace(mVcdFile, result_3_1_1_i_fu_812_p2, "result_3_1_1_i_fu_812_p2");
    sc_trace(mVcdFile, result_3_1_2_i_fu_817_p2, "result_3_1_2_i_fu_817_p2");
    sc_trace(mVcdFile, result_3_2_i_fu_844_p2, "result_3_2_i_fu_844_p2");
    sc_trace(mVcdFile, result_2_2_i_fu_848_p3, "result_2_2_i_fu_848_p3");
    sc_trace(mVcdFile, result_3_2_1_i_fu_854_p2, "result_3_2_1_i_fu_854_p2");
    sc_trace(mVcdFile, result_3_2_2_i_fu_870_p2, "result_3_2_2_i_fu_870_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("do_convolution.hdltvin.dat");
    mHdltvoutHandle.open("do_convolution.hdltvout.dat");
}

do_convolution::~do_convolution() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void do_convolution::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()) && 
             ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read()) && 
               esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read())) || 
              (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage4_subdone.read()) && 
               esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()))))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read())) || 
                    (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage4_subdone.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read())))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_276 = indvar_flatten_next_reg_978.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_276 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        x_assign_1_reg_298 = x_reg_1078.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_assign_1_reg_298 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        y_assign_1_reg_287 = tmp_mid2_reg_989.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        y_assign_1_reg_287 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_974 = exitcond_flatten_fu_341_p2.read();
        exitcond_flatten_reg_974_pp0_iter1_reg = exitcond_flatten_reg_974.read();
        tmp_i4_mid2_reg_1015_pp0_iter1_reg = tmp_i4_mid2_reg_1015.read();
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_next_reg_978 = indvar_flatten_next_fu_347_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        or_cond1_i1_reg_1198 = or_cond1_i1_fu_738_p2.read();
        result_2_0_2_i_reg_1213 = result_2_0_2_i_fu_761_p3.read();
        tmp_7_1_1_i_reg_1219 = tmp_7_1_1_i_fu_767_p2.read();
        window_2_0_1_8_reg_1203 = window_2_0_1_8_fu_742_p3.read();
        window_2_1_1_9_reg_1208 = window_2_1_1_9_fu_750_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0))) {
        or_cond1_i_reg_1058 = or_cond1_i_fu_514_p2.read();
        tmp_3_reg_1045 = tmp_3_fu_503_p2.read();
        tmp_6_0_2_cast_reg_1084 = tmp_6_0_2_cast_fu_549_p1.read();
        tmp_9_i_reg_1051 = tmp_9_i_fu_509_p2.read();
        window_0_0_1_3_reg_1068 = window_0_0_1_3_fu_529_p3.read();
        window_0_1_1_4_reg_1073 = window_0_1_1_4_fu_537_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_i1_reg_1229 = p_i1_fu_790_p2.read();
        result_2_1_2_i_reg_1239 = result_2_1_2_i_fu_822_p3.read();
        window_2_2_1_10_reg_1234 = window_2_2_1_10_fu_794_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        p_i_reg_1122 = p_i_fu_623_p2.read();
        tmp_12_cast_reg_1100 = tmp_12_cast_fu_608_p1.read();
        tmp_14_reg_1132 = tmp_14_fu_637_p2.read();
        tmp_1_i4_reg_1115 = tmp_1_i4_fu_618_p2.read();
        tmp_6_reg_1095 = tmp_6_fu_599_p2.read();
        window_0_2_1_5_reg_1137 = window_0_2_1_5_fu_642_p3.read();
        window_1_0_1_6_reg_1142 = window_1_0_1_6_fu_650_p3.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(tmp_i4_mid2_reg_1015.read(), ap_const_lv1_1)) || (esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_309 = kernel_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(tmp_i4_mid2_reg_1015.read(), ap_const_lv1_1)))) {
        reg_313 = kernel_q1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        result_2_0_1_i_reg_1177 = result_2_0_1_i_fu_706_p3.read();
        window_1_2_1_7_reg_1172 = window_1_2_1_7_fu_688_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_974_pp0_iter1_reg.read()))) {
        result_2_2_1_i_reg_1256 = result_2_2_1_i_fu_859_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_i4_mid2_reg_1015.read(), ap_const_lv1_1))) {
        tmp_11_reg_1110 = tmp_11_fu_613_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_341_p2.read()))) {
        tmp_2_2_mid2_reg_1009 = tmp_2_2_mid2_fu_425_p3.read();
        tmp_5_reg_996 = tmp_5_fu_399_p2.read();
        tmp_6_0_1_cast_reg_1034 = tmp_6_0_1_cast_fu_468_p1.read();
        tmp_6_cast_reg_1023 = tmp_6_cast_fu_453_p1.read();
        tmp_i4_mid2_reg_1015 = tmp_i4_mid2_fu_439_p3.read();
        tmp_i_mid2_reg_1001 = tmp_i_mid2_fu_411_p3.read();
        x_assign_1_mid2_reg_983 = x_assign_1_mid2_fu_359_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_mid2_reg_1001.read()))) {
        tmp_7_0_1_i_reg_1152 = tmp_7_0_1_i_fu_662_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, p_i_reg_1122.read()))) {
        tmp_7_0_2_i_reg_1183 = tmp_7_0_2_i_fu_713_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_i4_reg_1115.read()))) {
        tmp_7_1_2_i_reg_1224 = tmp_7_1_2_i_fu_772_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_i_reg_1051.read()))) {
        tmp_7_1_i_reg_1188 = tmp_7_1_i_fu_718_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_i4_mid2_reg_1015.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_7_2_1_i_reg_1251 = tmp_7_2_1_i_fu_834_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_974_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, p_i1_reg_1229.read()))) {
        tmp_7_2_2_i_reg_1262 = tmp_7_2_2_i_fu_865_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_i4_mid2_reg_1015.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_i1_reg_1198.read()))) {
        tmp_7_2_i_reg_1246 = tmp_7_2_i_fu_829_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond1_i_reg_1058.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_mid2_reg_1001.read()))) {
        tmp_7_i_reg_1147 = tmp_7_i_fu_657_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_341_p2.read()))) {
        tmp_mid2_reg_989 = tmp_mid2_fu_367_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0))) {
        window_0_0_1_fu_74 = window_0_0_1_3_fu_529_p3.read();
        window_0_1_1_fu_78 = window_0_1_1_4_fu_537_p3.read();
        x_reg_1078 = x_fu_544_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        window_0_2_1_fu_82 = window_0_2_1_5_fu_642_p3.read();
        window_1_0_1_fu_86 = window_1_0_1_6_fu_650_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        window_1_1_reg_1167 = data_in_q0.read();
        window_1_2_1_fu_90 = window_1_2_1_7_fu_688_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        window_2_0_1_fu_94 = window_2_0_1_8_fu_742_p3.read();
        window_2_1_1_fu_98 = window_2_1_1_9_fu_750_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        window_2_2_1_fu_102 = window_2_2_1_10_fu_794_p3.read();
    }
}

void do_convolution::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void do_convolution::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void do_convolution::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void do_convolution::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void do_convolution::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void do_convolution::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void do_convolution::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[6];
}

void do_convolution::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_state7_pp0_stage0_iter1() {
    ap_block_state7_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_state8_pp0_stage1_iter1() {
    ap_block_state8_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_block_state9_pp0_stage2_iter1() {
    ap_block_state9_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void do_convolution::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_341_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void do_convolution::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void do_convolution::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void do_convolution::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void do_convolution::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void do_convolution::thread_ap_phi_mux_indvar_flatten_phi_fu_280_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_280_p4 = indvar_flatten_next_reg_978.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_280_p4 = indvar_flatten_reg_276.read();
    }
}

void do_convolution::thread_ap_phi_mux_x_assign_1_phi_fu_302_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_x_assign_1_phi_fu_302_p4 = x_reg_1078.read();
    } else {
        ap_phi_mux_x_assign_1_phi_fu_302_p4 = x_assign_1_reg_298.read();
    }
}

void do_convolution::thread_ap_phi_mux_y_assign_1_phi_fu_291_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_974.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_y_assign_1_phi_fu_291_p4 = tmp_mid2_reg_989.read();
    } else {
        ap_phi_mux_y_assign_1_phi_fu_291_p4 = y_assign_1_reg_287.read();
    }
}

void do_convolution::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void do_convolution::thread_data_in_address0() {
    if (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            data_in_address0 =  (sc_lv<5>) (tmp_17_cast_fu_734_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            data_in_address0 =  (sc_lv<5>) (tmp_11_cast_fu_680_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            data_in_address0 =  (sc_lv<5>) (tmp_12_cast_fu_608_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            data_in_address0 =  (sc_lv<5>) (tmp_15_cast_fu_558_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            data_in_address0 =  (sc_lv<5>) (tmp_9_cast_fu_463_p1.read());
        } else {
            data_in_address0 = "XXXXX";
        }
    } else {
        data_in_address0 = "XXXXX";
    }
}

void do_convolution::thread_data_in_address1() {
    if (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            data_in_address1 =  (sc_lv<5>) (tmp_14_cast_fu_684_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            data_in_address1 =  (sc_lv<5>) (tmp_16_cast_fu_632_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            data_in_address1 =  (sc_lv<5>) (tmp_10_cast_fu_524_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            data_in_address1 =  (sc_lv<5>) (tmp_13_cast_fu_478_p1.read());
        } else {
            data_in_address1 = "XXXXX";
        }
    } else {
        data_in_address1 = "XXXXX";
    }
}

void do_convolution::thread_data_in_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        data_in_ce0 = ap_const_logic_1;
    } else {
        data_in_ce0 = ap_const_logic_0;
    }
}

void do_convolution::thread_data_in_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        data_in_ce1 = ap_const_logic_1;
    } else {
        data_in_ce1 = ap_const_logic_0;
    }
}

void do_convolution::thread_data_out_address0() {
    data_out_address0 =  (sc_lv<5>) (tmp_12_cast_reg_1100.read());
}

void do_convolution::thread_data_out_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1))) {
        data_out_ce0 = ap_const_logic_1;
    } else {
        data_out_ce0 = ap_const_logic_0;
    }
}

void do_convolution::thread_data_out_d0() {
    data_out_d0 = (!p_i1_reg_1229.read()[0].is_01())? sc_lv<32>(): ((p_i1_reg_1229.read()[0].to_bool())? result_3_2_2_i_fu_870_p2.read(): result_2_2_1_i_reg_1256.read());
}

void do_convolution::thread_data_out_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_974_pp0_iter1_reg.read()))) {
        data_out_we0 = ap_const_logic_1;
    } else {
        data_out_we0 = ap_const_logic_0;
    }
}

void do_convolution::thread_exitcond_flatten_fu_341_p2() {
    exitcond_flatten_fu_341_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_280_p4.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_280_p4.read() == ap_const_lv5_19);
}

void do_convolution::thread_exitcond_fu_353_p2() {
    exitcond_fu_353_p2 = (!ap_phi_mux_x_assign_1_phi_fu_302_p4.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_x_assign_1_phi_fu_302_p4.read() == ap_const_lv3_5);
}

void do_convolution::thread_indvar_flatten_next_fu_347_p2() {
    indvar_flatten_next_fu_347_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_280_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_indvar_flatten_phi_fu_280_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void do_convolution::thread_kernel_address0() {
    if (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_8);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_6);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_4);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_2);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_0);
        } else {
            kernel_address0 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        kernel_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void do_convolution::thread_kernel_address1() {
    if (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_7);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_5);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_3);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_1);
        } else {
            kernel_address1 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        kernel_address1 =  (sc_lv<4>) ("XXXX");
    }
}

void do_convolution::thread_kernel_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        kernel_ce0 = ap_const_logic_1;
    } else {
        kernel_ce0 = ap_const_logic_0;
    }
}

void do_convolution::thread_kernel_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        kernel_ce1 = ap_const_logic_1;
    } else {
        kernel_ce1 = ap_const_logic_0;
    }
}

void do_convolution::thread_or_cond1_i1_fu_738_p2() {
    or_cond1_i1_fu_738_p2 = (tmp_i4_mid2_reg_1015.read() & tmp_9_i_reg_1051.read());
}

void do_convolution::thread_or_cond1_i_fu_514_p2() {
    or_cond1_i_fu_514_p2 = (tmp_i_mid2_reg_1001.read() & tmp_9_i_fu_509_p2.read());
}

void do_convolution::thread_p_i1_fu_790_p2() {
    p_i1_fu_790_p2 = (tmp_i4_mid2_reg_1015.read() & tmp_1_i4_reg_1115.read());
}

void do_convolution::thread_p_i_fu_623_p2() {
    p_i_fu_623_p2 = (tmp_i_mid2_reg_1001.read() & tmp_1_i4_fu_618_p2.read());
}

void do_convolution::thread_p_shl1_cast_fu_395_p1() {
    p_shl1_cast_fu_395_p1 = esl_sext<6,5>(tmp_4_fu_387_p3.read());
}

void do_convolution::thread_p_shl2_cast_fu_499_p1() {
    p_shl2_cast_fu_499_p1 = esl_zext<6,5>(tmp_fu_492_p3.read());
}

void do_convolution::thread_p_shl_cast_fu_589_p1() {
    p_shl_cast_fu_589_p1 = esl_zext<6,5>(tmp_1_fu_582_p3.read());
}

void do_convolution::thread_result_2_0_1_i_fu_706_p3() {
    result_2_0_1_i_fu_706_p3 = (!tmp_i_mid2_reg_1001.read()[0].is_01())? sc_lv<32>(): ((tmp_i_mid2_reg_1001.read()[0].to_bool())? result_3_0_1_i_fu_701_p2.read(): ap_const_lv32_0);
}

void do_convolution::thread_result_2_0_2_i_fu_761_p3() {
    result_2_0_2_i_fu_761_p3 = (!p_i_reg_1122.read()[0].is_01())? sc_lv<32>(): ((p_i_reg_1122.read()[0].to_bool())? result_3_0_2_i_fu_757_p2.read(): result_2_0_1_i_reg_1177.read());
}

void do_convolution::thread_result_2_1_2_i_fu_822_p3() {
    result_2_1_2_i_fu_822_p3 = (!tmp_1_i4_reg_1115.read()[0].is_01())? sc_lv<32>(): ((tmp_1_i4_reg_1115.read()[0].to_bool())? result_3_1_2_i_fu_817_p2.read(): result_3_1_1_i_fu_812_p2.read());
}

void do_convolution::thread_result_2_1_i_fu_806_p3() {
    result_2_1_i_fu_806_p3 = (!tmp_9_i_reg_1051.read()[0].is_01())? sc_lv<32>(): ((tmp_9_i_reg_1051.read()[0].to_bool())? result_3_1_i_fu_802_p2.read(): result_2_0_2_i_reg_1213.read());
}

void do_convolution::thread_result_2_2_1_i_fu_859_p3() {
    result_2_2_1_i_fu_859_p3 = (!tmp_i4_mid2_reg_1015_pp0_iter1_reg.read()[0].is_01())? sc_lv<32>(): ((tmp_i4_mid2_reg_1015_pp0_iter1_reg.read()[0].to_bool())? result_3_2_1_i_fu_854_p2.read(): result_2_1_2_i_reg_1239.read());
}

void do_convolution::thread_result_2_2_i_fu_848_p3() {
    result_2_2_i_fu_848_p3 = (!or_cond1_i1_reg_1198.read()[0].is_01())? sc_lv<32>(): ((or_cond1_i1_reg_1198.read()[0].to_bool())? result_3_2_i_fu_844_p2.read(): result_2_1_2_i_reg_1239.read());
}

void do_convolution::thread_result_2_i_fu_695_p3() {
    result_2_i_fu_695_p3 = (!or_cond1_i_reg_1058.read()[0].is_01())? sc_lv<32>(): ((or_cond1_i_reg_1058.read()[0].to_bool())? tmp_7_i_reg_1147.read(): ap_const_lv32_0);
}

void do_convolution::thread_result_3_0_1_i_fu_701_p2() {
    result_3_0_1_i_fu_701_p2 = (!tmp_7_0_1_i_reg_1152.read().is_01() || !result_2_i_fu_695_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_0_1_i_reg_1152.read()) + sc_biguint<32>(result_2_i_fu_695_p3.read()));
}

void do_convolution::thread_result_3_0_2_i_fu_757_p2() {
    result_3_0_2_i_fu_757_p2 = (!tmp_7_0_2_i_reg_1183.read().is_01() || !result_2_0_1_i_reg_1177.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_0_2_i_reg_1183.read()) + sc_biguint<32>(result_2_0_1_i_reg_1177.read()));
}

void do_convolution::thread_result_3_1_1_i_fu_812_p2() {
    result_3_1_1_i_fu_812_p2 = (!tmp_7_1_1_i_reg_1219.read().is_01() || !result_2_1_i_fu_806_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_1_1_i_reg_1219.read()) + sc_biguint<32>(result_2_1_i_fu_806_p3.read()));
}

void do_convolution::thread_result_3_1_2_i_fu_817_p2() {
    result_3_1_2_i_fu_817_p2 = (!tmp_7_1_2_i_reg_1224.read().is_01() || !result_3_1_1_i_fu_812_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_1_2_i_reg_1224.read()) + sc_biguint<32>(result_3_1_1_i_fu_812_p2.read()));
}

void do_convolution::thread_result_3_1_i_fu_802_p2() {
    result_3_1_i_fu_802_p2 = (!tmp_7_1_i_reg_1188.read().is_01() || !result_2_0_2_i_reg_1213.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_1_i_reg_1188.read()) + sc_biguint<32>(result_2_0_2_i_reg_1213.read()));
}

void do_convolution::thread_result_3_2_1_i_fu_854_p2() {
    result_3_2_1_i_fu_854_p2 = (!tmp_7_2_1_i_reg_1251.read().is_01() || !result_2_2_i_fu_848_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_2_1_i_reg_1251.read()) + sc_biguint<32>(result_2_2_i_fu_848_p3.read()));
}

void do_convolution::thread_result_3_2_2_i_fu_870_p2() {
    result_3_2_2_i_fu_870_p2 = (!tmp_7_2_2_i_reg_1262.read().is_01() || !result_2_2_1_i_reg_1256.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_2_2_i_reg_1262.read()) + sc_biguint<32>(result_2_2_1_i_reg_1256.read()));
}

void do_convolution::thread_result_3_2_i_fu_844_p2() {
    result_3_2_i_fu_844_p2 = (!tmp_7_2_i_reg_1246.read().is_01() || !result_2_1_2_i_reg_1239.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_2_i_reg_1246.read()) + sc_biguint<32>(result_2_1_2_i_reg_1239.read()));
}

void do_convolution::thread_tmp_10_cast_fu_524_p1() {
    tmp_10_cast_fu_524_p1 = esl_zext<64,6>(tmp_s_fu_519_p2.read());
}

void do_convolution::thread_tmp_10_fu_472_p2() {
    tmp_10_fu_472_p2 = (!tmp_6_0_1_cast_fu_468_p1.read().is_01() || !tmp_5_fu_399_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_6_0_1_cast_fu_468_p1.read()) + sc_biguint<6>(tmp_5_fu_399_p2.read()));
}

void do_convolution::thread_tmp_11_cast_fu_680_p1() {
    tmp_11_cast_fu_680_p1 = esl_zext<64,6>(tmp_6_reg_1095.read());
}

void do_convolution::thread_tmp_11_fu_613_p2() {
    tmp_11_fu_613_p2 = (!tmp_6_0_1_cast_reg_1034.read().is_01() || !tmp_8_fu_593_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_6_0_1_cast_reg_1034.read()) + sc_biguint<6>(tmp_8_fu_593_p2.read()));
}

void do_convolution::thread_tmp_12_cast_fu_608_p1() {
    tmp_12_cast_fu_608_p1 = esl_zext<64,6>(tmp_7_fu_604_p2.read());
}

void do_convolution::thread_tmp_12_fu_553_p2() {
    tmp_12_fu_553_p2 = (!tmp_6_0_2_cast_fu_549_p1.read().is_01() || !tmp_5_reg_996.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_6_0_2_cast_fu_549_p1.read()) + sc_biguint<6>(tmp_5_reg_996.read()));
}

void do_convolution::thread_tmp_13_cast_fu_478_p1() {
    tmp_13_cast_fu_478_p1 = esl_sext<64,6>(tmp_10_fu_472_p2.read());
}

void do_convolution::thread_tmp_13_fu_628_p2() {
    tmp_13_fu_628_p2 = (!tmp_6_0_2_cast_reg_1084.read().is_01() || !tmp_3_reg_1045.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_6_0_2_cast_reg_1084.read()) + sc_biguint<6>(tmp_3_reg_1045.read()));
}

void do_convolution::thread_tmp_14_cast_fu_684_p1() {
    tmp_14_cast_fu_684_p1 = esl_zext<64,6>(tmp_11_reg_1110.read());
}

void do_convolution::thread_tmp_14_fu_637_p2() {
    tmp_14_fu_637_p2 = (!tmp_6_0_2_cast_reg_1084.read().is_01() || !tmp_8_fu_593_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_6_0_2_cast_reg_1084.read()) + sc_biguint<6>(tmp_8_fu_593_p2.read()));
}

void do_convolution::thread_tmp_15_cast_fu_558_p1() {
    tmp_15_cast_fu_558_p1 = esl_sext<64,6>(tmp_12_fu_553_p2.read());
}

void do_convolution::thread_tmp_16_cast_fu_632_p1() {
    tmp_16_cast_fu_632_p1 = esl_zext<64,6>(tmp_13_fu_628_p2.read());
}

void do_convolution::thread_tmp_17_cast_fu_734_p1() {
    tmp_17_cast_fu_734_p1 = esl_zext<64,6>(tmp_14_reg_1132.read());
}

void do_convolution::thread_tmp_1_fu_582_p3() {
    tmp_1_fu_582_p3 = esl_concat<3,2>(tmp_2_2_mid2_reg_1009.read(), ap_const_lv2_0);
}

void do_convolution::thread_tmp_1_i4_fu_618_p2() {
    tmp_1_i4_fu_618_p2 = (!x_reg_1078.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): (sc_biguint<3>(x_reg_1078.read()) < sc_biguint<3>(ap_const_lv3_5));
}

void do_convolution::thread_tmp_2_2_mid2_cast_fu_579_p1() {
    tmp_2_2_mid2_cast_fu_579_p1 = esl_zext<6,3>(tmp_2_2_mid2_reg_1009.read());
}

void do_convolution::thread_tmp_2_2_mid2_fu_425_p3() {
    tmp_2_2_mid2_fu_425_p3 = (!exitcond_fu_353_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_fu_353_p2.read()[0].to_bool())? y_assign_2_mid1_fu_419_p2.read(): y_fu_329_p2.read());
}

void do_convolution::thread_tmp_3_fu_503_p2() {
    tmp_3_fu_503_p2 = (!p_shl2_cast_fu_499_p1.read().is_01() || !tmp_mid2_cast_fu_489_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl2_cast_fu_499_p1.read()) + sc_biguint<6>(tmp_mid2_cast_fu_489_p1.read()));
}

void do_convolution::thread_tmp_4_fu_387_p3() {
    tmp_4_fu_387_p3 = esl_concat<3,2>(tmp_4_mid2_v_fu_375_p3.read(), ap_const_lv2_0);
}

void do_convolution::thread_tmp_4_mid2_cast_fu_383_p1() {
    tmp_4_mid2_cast_fu_383_p1 = esl_sext<6,3>(tmp_4_mid2_v_fu_375_p3.read());
}

void do_convolution::thread_tmp_4_mid2_v_fu_375_p3() {
    tmp_4_mid2_v_fu_375_p3 = (!exitcond_fu_353_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_fu_353_p2.read()[0].to_bool())? ap_phi_mux_y_assign_1_phi_fu_291_p4.read(): y_assign_fu_317_p2.read());
}

void do_convolution::thread_tmp_5_fu_399_p2() {
    tmp_5_fu_399_p2 = (!p_shl1_cast_fu_395_p1.read().is_01() || !tmp_4_mid2_cast_fu_383_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(p_shl1_cast_fu_395_p1.read()) + sc_bigint<6>(tmp_4_mid2_cast_fu_383_p1.read()));
}

void do_convolution::thread_tmp_6_0_1_cast_fu_468_p1() {
    tmp_6_0_1_cast_fu_468_p1 = esl_zext<6,3>(x_assign_1_mid2_fu_359_p3.read());
}

void do_convolution::thread_tmp_6_0_2_cast_fu_549_p1() {
    tmp_6_0_2_cast_fu_549_p1 = esl_zext<6,3>(x_fu_544_p2.read());
}

void do_convolution::thread_tmp_6_cast_fu_453_p1() {
    tmp_6_cast_fu_453_p1 = esl_sext<6,3>(x_assign_fu_447_p2.read());
}

void do_convolution::thread_tmp_6_fu_599_p2() {
    tmp_6_fu_599_p2 = (!tmp_6_cast_reg_1023.read().is_01() || !tmp_8_fu_593_p2.read().is_01())? sc_lv<6>(): (sc_bigint<6>(tmp_6_cast_reg_1023.read()) + sc_biguint<6>(tmp_8_fu_593_p2.read()));
}

void do_convolution::thread_tmp_7_0_1_i_fu_662_p2() {
    tmp_7_0_1_i_fu_662_p2 = (!window_0_1_1_4_reg_1073.read().is_01() || !reg_313.read().is_01())? sc_lv<32>(): sc_bigint<32>(window_0_1_1_4_reg_1073.read()) * sc_bigint<32>(reg_313.read());
}

void do_convolution::thread_tmp_7_0_2_i_fu_713_p2() {
    tmp_7_0_2_i_fu_713_p2 = (!window_0_2_1_5_reg_1137.read().is_01() || !reg_309.read().is_01())? sc_lv<32>(): sc_bigint<32>(window_0_2_1_5_reg_1137.read()) * sc_bigint<32>(reg_309.read());
}

void do_convolution::thread_tmp_7_1_1_i_fu_767_p2() {
    tmp_7_1_1_i_fu_767_p2 = (!window_1_1_reg_1167.read().is_01() || !reg_309.read().is_01())? sc_lv<32>(): sc_bigint<32>(window_1_1_reg_1167.read()) * sc_bigint<32>(reg_309.read());
}

void do_convolution::thread_tmp_7_1_2_i_fu_772_p2() {
    tmp_7_1_2_i_fu_772_p2 = (!window_1_2_1_7_reg_1172.read().is_01() || !reg_313.read().is_01())? sc_lv<32>(): sc_bigint<32>(window_1_2_1_7_reg_1172.read()) * sc_bigint<32>(reg_313.read());
}

void do_convolution::thread_tmp_7_1_i_fu_718_p2() {
    tmp_7_1_i_fu_718_p2 = (!window_1_0_1_6_reg_1142.read().is_01() || !reg_313.read().is_01())? sc_lv<32>(): sc_bigint<32>(window_1_0_1_6_reg_1142.read()) * sc_bigint<32>(reg_313.read());
}

void do_convolution::thread_tmp_7_2_1_i_fu_834_p2() {
    tmp_7_2_1_i_fu_834_p2 = (!window_2_1_1_9_reg_1208.read().is_01() || !reg_313.read().is_01())? sc_lv<32>(): sc_bigint<32>(window_2_1_1_9_reg_1208.read()) * sc_bigint<32>(reg_313.read());
}

void do_convolution::thread_tmp_7_2_2_i_fu_865_p2() {
    tmp_7_2_2_i_fu_865_p2 = (!window_2_2_1_10_reg_1234.read().is_01() || !reg_309.read().is_01())? sc_lv<32>(): sc_bigint<32>(window_2_2_1_10_reg_1234.read()) * sc_bigint<32>(reg_309.read());
}

void do_convolution::thread_tmp_7_2_i_fu_829_p2() {
    tmp_7_2_i_fu_829_p2 = (!window_2_0_1_8_reg_1203.read().is_01() || !reg_309.read().is_01())? sc_lv<32>(): sc_bigint<32>(window_2_0_1_8_reg_1203.read()) * sc_bigint<32>(reg_309.read());
}

void do_convolution::thread_tmp_7_fu_604_p2() {
    tmp_7_fu_604_p2 = (!tmp_6_0_1_cast_reg_1034.read().is_01() || !tmp_3_reg_1045.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_6_0_1_cast_reg_1034.read()) + sc_biguint<6>(tmp_3_reg_1045.read()));
}

void do_convolution::thread_tmp_7_i_fu_657_p2() {
    tmp_7_i_fu_657_p2 = (!window_0_0_1_3_reg_1068.read().is_01() || !reg_309.read().is_01())? sc_lv<32>(): sc_bigint<32>(window_0_0_1_3_reg_1068.read()) * sc_bigint<32>(reg_309.read());
}

void do_convolution::thread_tmp_8_fu_593_p2() {
    tmp_8_fu_593_p2 = (!p_shl_cast_fu_589_p1.read().is_01() || !tmp_2_2_mid2_cast_fu_579_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl_cast_fu_589_p1.read()) + sc_biguint<6>(tmp_2_2_mid2_cast_fu_579_p1.read()));
}

void do_convolution::thread_tmp_9_cast_fu_463_p1() {
    tmp_9_cast_fu_463_p1 = esl_sext<64,6>(tmp_9_fu_457_p2.read());
}

void do_convolution::thread_tmp_9_fu_457_p2() {
    tmp_9_fu_457_p2 = (!tmp_6_cast_fu_453_p1.read().is_01() || !tmp_5_fu_399_p2.read().is_01())? sc_lv<6>(): (sc_bigint<6>(tmp_6_cast_fu_453_p1.read()) + sc_biguint<6>(tmp_5_fu_399_p2.read()));
}

void do_convolution::thread_tmp_9_i_fu_509_p2() {
    tmp_9_i_fu_509_p2 = (!x_assign_1_mid2_reg_983.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_1_mid2_reg_983.read() != ap_const_lv3_0);
}

void do_convolution::thread_tmp_fu_492_p3() {
    tmp_fu_492_p3 = esl_concat<3,2>(tmp_mid2_reg_989.read(), ap_const_lv2_0);
}

void do_convolution::thread_tmp_i4_fu_335_p2() {
    tmp_i4_fu_335_p2 = (!y_fu_329_p2.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): (sc_biguint<3>(y_fu_329_p2.read()) < sc_biguint<3>(ap_const_lv3_5));
}

void do_convolution::thread_tmp_i4_mid1_fu_433_p2() {
    tmp_i4_mid1_fu_433_p2 = (!y_assign_2_mid1_fu_419_p2.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): (sc_biguint<3>(y_assign_2_mid1_fu_419_p2.read()) < sc_biguint<3>(ap_const_lv3_5));
}

void do_convolution::thread_tmp_i4_mid2_fu_439_p3() {
    tmp_i4_mid2_fu_439_p3 = (!exitcond_fu_353_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_fu_353_p2.read()[0].to_bool())? tmp_i4_mid1_fu_433_p2.read(): tmp_i4_fu_335_p2.read());
}

void do_convolution::thread_tmp_i_fu_323_p2() {
    tmp_i_fu_323_p2 = (!ap_phi_mux_y_assign_1_phi_fu_291_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_y_assign_1_phi_fu_291_p4.read() != ap_const_lv3_0);
}

void do_convolution::thread_tmp_i_mid1_fu_405_p2() {
    tmp_i_mid1_fu_405_p2 = (!y_fu_329_p2.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(y_fu_329_p2.read() != ap_const_lv3_0);
}

void do_convolution::thread_tmp_i_mid2_fu_411_p3() {
    tmp_i_mid2_fu_411_p3 = (!exitcond_fu_353_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_fu_353_p2.read()[0].to_bool())? tmp_i_mid1_fu_405_p2.read(): tmp_i_fu_323_p2.read());
}

void do_convolution::thread_tmp_mid2_cast_fu_489_p1() {
    tmp_mid2_cast_fu_489_p1 = esl_zext<6,3>(tmp_mid2_reg_989.read());
}

void do_convolution::thread_tmp_mid2_fu_367_p3() {
    tmp_mid2_fu_367_p3 = (!exitcond_fu_353_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_fu_353_p2.read()[0].to_bool())? y_fu_329_p2.read(): ap_phi_mux_y_assign_1_phi_fu_291_p4.read());
}

void do_convolution::thread_tmp_s_fu_519_p2() {
    tmp_s_fu_519_p2 = (!tmp_6_cast_reg_1023.read().is_01() || !tmp_3_fu_503_p2.read().is_01())? sc_lv<6>(): (sc_bigint<6>(tmp_6_cast_reg_1023.read()) + sc_biguint<6>(tmp_3_fu_503_p2.read()));
}

void do_convolution::thread_window_0_0_1_3_fu_529_p3() {
    window_0_0_1_3_fu_529_p3 = (!or_cond1_i_fu_514_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond1_i_fu_514_p2.read()[0].to_bool())? data_in_q0.read(): window_0_0_1_fu_74.read());
}

void do_convolution::thread_window_0_1_1_4_fu_537_p3() {
    window_0_1_1_4_fu_537_p3 = (!tmp_i_mid2_reg_1001.read()[0].is_01())? sc_lv<32>(): ((tmp_i_mid2_reg_1001.read()[0].to_bool())? data_in_q1.read(): window_0_1_1_fu_78.read());
}

void do_convolution::thread_window_0_2_1_5_fu_642_p3() {
    window_0_2_1_5_fu_642_p3 = (!p_i_fu_623_p2.read()[0].is_01())? sc_lv<32>(): ((p_i_fu_623_p2.read()[0].to_bool())? data_in_q0.read(): window_0_2_1_fu_82.read());
}

void do_convolution::thread_window_1_0_1_6_fu_650_p3() {
    window_1_0_1_6_fu_650_p3 = (!tmp_9_i_reg_1051.read()[0].is_01())? sc_lv<32>(): ((tmp_9_i_reg_1051.read()[0].to_bool())? data_in_q1.read(): window_1_0_1_fu_86.read());
}

void do_convolution::thread_window_1_2_1_7_fu_688_p3() {
    window_1_2_1_7_fu_688_p3 = (!tmp_1_i4_reg_1115.read()[0].is_01())? sc_lv<32>(): ((tmp_1_i4_reg_1115.read()[0].to_bool())? data_in_q1.read(): window_1_2_1_fu_90.read());
}

void do_convolution::thread_window_2_0_1_8_fu_742_p3() {
    window_2_0_1_8_fu_742_p3 = (!or_cond1_i1_fu_738_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond1_i1_fu_738_p2.read()[0].to_bool())? data_in_q0.read(): window_2_0_1_fu_94.read());
}

void do_convolution::thread_window_2_1_1_9_fu_750_p3() {
    window_2_1_1_9_fu_750_p3 = (!tmp_i4_mid2_reg_1015.read()[0].is_01())? sc_lv<32>(): ((tmp_i4_mid2_reg_1015.read()[0].to_bool())? data_in_q1.read(): window_2_1_1_fu_98.read());
}

void do_convolution::thread_window_2_2_1_10_fu_794_p3() {
    window_2_2_1_10_fu_794_p3 = (!p_i1_fu_790_p2.read()[0].is_01())? sc_lv<32>(): ((p_i1_fu_790_p2.read()[0].to_bool())? data_in_q0.read(): window_2_2_1_fu_102.read());
}

void do_convolution::thread_x_assign_1_mid2_fu_359_p3() {
    x_assign_1_mid2_fu_359_p3 = (!exitcond_fu_353_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_fu_353_p2.read()[0].to_bool())? ap_const_lv3_0: ap_phi_mux_x_assign_1_phi_fu_302_p4.read());
}

void do_convolution::thread_x_assign_fu_447_p2() {
    x_assign_fu_447_p2 = (!x_assign_1_mid2_fu_359_p3.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<3>(): (sc_biguint<3>(x_assign_1_mid2_fu_359_p3.read()) + sc_bigint<3>(ap_const_lv3_7));
}

void do_convolution::thread_x_fu_544_p2() {
    x_fu_544_p2 = (!x_assign_1_mid2_reg_983.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_assign_1_mid2_reg_983.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void do_convolution::thread_y_assign_2_mid1_fu_419_p2() {
    y_assign_2_mid1_fu_419_p2 = (!ap_phi_mux_y_assign_1_phi_fu_291_p4.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_y_assign_1_phi_fu_291_p4.read()) + sc_biguint<3>(ap_const_lv3_2));
}

void do_convolution::thread_y_assign_fu_317_p2() {
    y_assign_fu_317_p2 = (!ap_phi_mux_y_assign_1_phi_fu_291_p4.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_y_assign_1_phi_fu_291_p4.read()) + sc_bigint<3>(ap_const_lv3_7));
}

void do_convolution::thread_y_fu_329_p2() {
    y_fu_329_p2 = (!ap_phi_mux_y_assign_1_phi_fu_291_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_y_assign_1_phi_fu_291_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void do_convolution::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_341_p2.read(), ap_const_lv1_1)) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_341_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage3_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage4_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

void do_convolution::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_address0\" :  \"" << data_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_ce0\" :  \"" << data_out_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_we0\" :  \"" << data_out_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_d0\" :  \"" << data_out_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_in_address0\" :  \"" << data_in_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_in_ce0\" :  \"" << data_in_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_q0\" :  \"" << data_in_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_in_address1\" :  \"" << data_in_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_in_ce1\" :  \"" << data_in_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_q1\" :  \"" << data_in_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address0\" :  \"" << kernel_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce0\" :  \"" << kernel_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q0\" :  \"" << kernel_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address1\" :  \"" << kernel_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce1\" :  \"" << kernel_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q1\" :  \"" << kernel_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

