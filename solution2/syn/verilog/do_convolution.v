// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="do_convolution,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.557000,HLS_SYN_LAT=129,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=27,HLS_SYN_FF=1120,HLS_SYN_LUT=1591}" *)

module do_convolution (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_out_address0,
        data_out_ce0,
        data_out_we0,
        data_out_d0,
        data_in_address0,
        data_in_ce0,
        data_in_q0,
        data_in_address1,
        data_in_ce1,
        data_in_q1,
        kernel_address0,
        kernel_ce0,
        kernel_q0,
        kernel_address1,
        kernel_ce1,
        kernel_q1
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state10 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] data_out_address0;
output   data_out_ce0;
output   data_out_we0;
output  [31:0] data_out_d0;
output  [4:0] data_in_address0;
output   data_in_ce0;
input  [31:0] data_in_q0;
output  [4:0] data_in_address1;
output   data_in_ce1;
input  [31:0] data_in_q1;
output  [3:0] kernel_address0;
output   kernel_ce0;
input  [31:0] kernel_q0;
output  [3:0] kernel_address1;
output   kernel_ce1;
input  [31:0] kernel_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_out_ce0;
reg data_out_we0;
reg[4:0] data_in_address0;
reg data_in_ce0;
reg[4:0] data_in_address1;
reg data_in_ce1;
reg[3:0] kernel_address0;
reg kernel_ce0;
reg[3:0] kernel_address1;
reg kernel_ce1;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_276;
reg   [2:0] y_assign_1_reg_287;
reg   [2:0] x_assign_1_reg_298;
reg  signed [31:0] reg_309;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] exitcond_flatten_reg_974;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] tmp_i4_mid2_reg_1015;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg  signed [31:0] reg_313;
wire   [0:0] exitcond_flatten_fu_341_p2;
reg   [0:0] exitcond_flatten_reg_974_pp0_iter1_reg;
wire   [4:0] indvar_flatten_next_fu_347_p2;
reg   [4:0] indvar_flatten_next_reg_978;
wire   [2:0] x_assign_1_mid2_fu_359_p3;
reg   [2:0] x_assign_1_mid2_reg_983;
wire   [2:0] tmp_mid2_fu_367_p3;
reg   [2:0] tmp_mid2_reg_989;
wire   [5:0] tmp_5_fu_399_p2;
reg   [5:0] tmp_5_reg_996;
wire   [0:0] tmp_i_mid2_fu_411_p3;
reg   [0:0] tmp_i_mid2_reg_1001;
wire   [2:0] tmp_2_2_mid2_fu_425_p3;
reg   [2:0] tmp_2_2_mid2_reg_1009;
wire   [0:0] tmp_i4_mid2_fu_439_p3;
reg   [0:0] tmp_i4_mid2_reg_1015_pp0_iter1_reg;
wire  signed [5:0] tmp_6_cast_fu_453_p1;
reg  signed [5:0] tmp_6_cast_reg_1023;
wire   [5:0] tmp_6_0_1_cast_fu_468_p1;
reg   [5:0] tmp_6_0_1_cast_reg_1034;
wire   [5:0] tmp_3_fu_503_p2;
reg   [5:0] tmp_3_reg_1045;
wire   [0:0] tmp_9_i_fu_509_p2;
reg   [0:0] tmp_9_i_reg_1051;
wire   [0:0] or_cond1_i_fu_514_p2;
reg   [0:0] or_cond1_i_reg_1058;
wire  signed [31:0] window_0_0_1_3_fu_529_p3;
reg  signed [31:0] window_0_0_1_3_reg_1068;
wire  signed [31:0] window_0_1_1_4_fu_537_p3;
reg  signed [31:0] window_0_1_1_4_reg_1073;
wire   [2:0] x_fu_544_p2;
reg   [2:0] x_reg_1078;
wire   [5:0] tmp_6_0_2_cast_fu_549_p1;
reg   [5:0] tmp_6_0_2_cast_reg_1084;
wire   [5:0] tmp_6_fu_599_p2;
reg   [5:0] tmp_6_reg_1095;
wire   [63:0] tmp_12_cast_fu_608_p1;
reg   [63:0] tmp_12_cast_reg_1100;
wire   [5:0] tmp_11_fu_613_p2;
reg   [5:0] tmp_11_reg_1110;
wire   [0:0] tmp_1_i4_fu_618_p2;
reg   [0:0] tmp_1_i4_reg_1115;
wire   [0:0] p_i_fu_623_p2;
reg   [0:0] p_i_reg_1122;
wire   [5:0] tmp_14_fu_637_p2;
reg   [5:0] tmp_14_reg_1132;
wire  signed [31:0] window_0_2_1_5_fu_642_p3;
reg  signed [31:0] window_0_2_1_5_reg_1137;
wire  signed [31:0] window_1_0_1_6_fu_650_p3;
reg  signed [31:0] window_1_0_1_6_reg_1142;
wire   [31:0] tmp_7_i_fu_657_p2;
reg   [31:0] tmp_7_i_reg_1147;
wire   [31:0] tmp_7_0_1_i_fu_662_p2;
reg   [31:0] tmp_7_0_1_i_reg_1152;
reg  signed [31:0] window_1_1_reg_1167;
wire  signed [31:0] window_1_2_1_7_fu_688_p3;
reg  signed [31:0] window_1_2_1_7_reg_1172;
wire   [31:0] result_2_0_1_i_fu_706_p3;
reg   [31:0] result_2_0_1_i_reg_1177;
wire   [31:0] tmp_7_0_2_i_fu_713_p2;
reg   [31:0] tmp_7_0_2_i_reg_1183;
wire   [31:0] tmp_7_1_i_fu_718_p2;
reg   [31:0] tmp_7_1_i_reg_1188;
wire   [0:0] or_cond1_i1_fu_738_p2;
reg   [0:0] or_cond1_i1_reg_1198;
wire  signed [31:0] window_2_0_1_8_fu_742_p3;
reg  signed [31:0] window_2_0_1_8_reg_1203;
wire  signed [31:0] window_2_1_1_9_fu_750_p3;
reg  signed [31:0] window_2_1_1_9_reg_1208;
wire   [31:0] result_2_0_2_i_fu_761_p3;
reg   [31:0] result_2_0_2_i_reg_1213;
wire   [31:0] tmp_7_1_1_i_fu_767_p2;
reg   [31:0] tmp_7_1_1_i_reg_1219;
wire   [31:0] tmp_7_1_2_i_fu_772_p2;
reg   [31:0] tmp_7_1_2_i_reg_1224;
wire   [0:0] p_i1_fu_790_p2;
reg   [0:0] p_i1_reg_1229;
wire  signed [31:0] window_2_2_1_10_fu_794_p3;
reg  signed [31:0] window_2_2_1_10_reg_1234;
wire   [31:0] result_2_1_2_i_fu_822_p3;
reg   [31:0] result_2_1_2_i_reg_1239;
wire   [31:0] tmp_7_2_i_fu_829_p2;
reg   [31:0] tmp_7_2_i_reg_1246;
wire   [31:0] tmp_7_2_1_i_fu_834_p2;
reg   [31:0] tmp_7_2_1_i_reg_1251;
wire   [31:0] result_2_2_1_i_fu_859_p3;
reg   [31:0] result_2_2_1_i_reg_1256;
wire   [31:0] tmp_7_2_2_i_fu_865_p2;
reg   [31:0] tmp_7_2_2_i_reg_1262;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage2_subdone;
reg   [4:0] ap_phi_mux_indvar_flatten_phi_fu_280_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_y_assign_1_phi_fu_291_p4;
reg   [2:0] ap_phi_mux_x_assign_1_phi_fu_302_p4;
wire  signed [63:0] tmp_9_cast_fu_463_p1;
wire  signed [63:0] tmp_13_cast_fu_478_p1;
wire   [63:0] tmp_10_cast_fu_524_p1;
wire    ap_block_pp0_stage1;
wire  signed [63:0] tmp_15_cast_fu_558_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_16_cast_fu_632_p1;
wire   [63:0] tmp_11_cast_fu_680_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_14_cast_fu_684_p1;
wire   [63:0] tmp_17_cast_fu_734_p1;
wire    ap_block_pp0_stage4;
reg   [31:0] window_0_0_1_fu_74;
reg   [31:0] window_0_1_1_fu_78;
reg   [31:0] window_0_2_1_fu_82;
reg   [31:0] window_1_0_1_fu_86;
reg   [31:0] window_1_2_1_fu_90;
reg   [31:0] window_2_0_1_fu_94;
reg   [31:0] window_2_1_1_fu_98;
reg   [31:0] window_2_2_1_fu_102;
wire   [2:0] y_fu_329_p2;
wire   [0:0] exitcond_fu_353_p2;
wire   [2:0] y_assign_fu_317_p2;
wire  signed [2:0] tmp_4_mid2_v_fu_375_p3;
wire   [4:0] tmp_4_fu_387_p3;
wire  signed [5:0] p_shl1_cast_fu_395_p1;
wire  signed [5:0] tmp_4_mid2_cast_fu_383_p1;
wire   [0:0] tmp_i_mid1_fu_405_p2;
wire   [0:0] tmp_i_fu_323_p2;
wire   [2:0] y_assign_2_mid1_fu_419_p2;
wire   [0:0] tmp_i4_mid1_fu_433_p2;
wire   [0:0] tmp_i4_fu_335_p2;
wire   [2:0] x_assign_fu_447_p2;
wire   [5:0] tmp_9_fu_457_p2;
wire   [5:0] tmp_10_fu_472_p2;
wire   [4:0] tmp_fu_492_p3;
wire   [5:0] p_shl2_cast_fu_499_p1;
wire   [5:0] tmp_mid2_cast_fu_489_p1;
wire   [5:0] tmp_s_fu_519_p2;
wire   [5:0] tmp_12_fu_553_p2;
wire   [4:0] tmp_1_fu_582_p3;
wire   [5:0] p_shl_cast_fu_589_p1;
wire   [5:0] tmp_2_2_mid2_cast_fu_579_p1;
wire   [5:0] tmp_8_fu_593_p2;
wire   [5:0] tmp_7_fu_604_p2;
wire   [5:0] tmp_13_fu_628_p2;
wire   [31:0] result_2_i_fu_695_p3;
wire   [31:0] result_3_0_1_i_fu_701_p2;
wire   [31:0] result_3_0_2_i_fu_757_p2;
wire   [31:0] result_3_1_i_fu_802_p2;
wire   [31:0] result_2_1_i_fu_806_p3;
wire   [31:0] result_3_1_1_i_fu_812_p2;
wire   [31:0] result_3_1_2_i_fu_817_p2;
wire   [31:0] result_3_2_i_fu_844_p2;
wire   [31:0] result_2_2_i_fu_848_p3;
wire   [31:0] result_3_2_1_i_fu_854_p2;
wire   [31:0] result_3_2_2_i_fu_870_p2;
wire    ap_CS_fsm_state10;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_276 <= indvar_flatten_next_reg_978;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_276 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_assign_1_reg_298 <= x_reg_1078;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        x_assign_1_reg_298 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_assign_1_reg_287 <= tmp_mid2_reg_989;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        y_assign_1_reg_287 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_974 <= exitcond_flatten_fu_341_p2;
        exitcond_flatten_reg_974_pp0_iter1_reg <= exitcond_flatten_reg_974;
        tmp_i4_mid2_reg_1015_pp0_iter1_reg <= tmp_i4_mid2_reg_1015;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_next_reg_978 <= indvar_flatten_next_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        or_cond1_i1_reg_1198 <= or_cond1_i1_fu_738_p2;
        result_2_0_2_i_reg_1213 <= result_2_0_2_i_fu_761_p3;
        tmp_7_1_1_i_reg_1219 <= tmp_7_1_1_i_fu_767_p2;
        window_2_0_1_8_reg_1203 <= window_2_0_1_8_fu_742_p3;
        window_2_1_1_9_reg_1208 <= window_2_1_1_9_fu_750_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_cond1_i_reg_1058 <= or_cond1_i_fu_514_p2;
        tmp_3_reg_1045 <= tmp_3_fu_503_p2;
        tmp_6_0_2_cast_reg_1084[2 : 0] <= tmp_6_0_2_cast_fu_549_p1[2 : 0];
        tmp_9_i_reg_1051 <= tmp_9_i_fu_509_p2;
        window_0_0_1_3_reg_1068 <= window_0_0_1_3_fu_529_p3;
        window_0_1_1_4_reg_1073 <= window_0_1_1_4_fu_537_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_i1_reg_1229 <= p_i1_fu_790_p2;
        result_2_1_2_i_reg_1239 <= result_2_1_2_i_fu_822_p3;
        window_2_2_1_10_reg_1234 <= window_2_2_1_10_fu_794_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_i_reg_1122 <= p_i_fu_623_p2;
        tmp_12_cast_reg_1100[5 : 0] <= tmp_12_cast_fu_608_p1[5 : 0];
        tmp_14_reg_1132 <= tmp_14_fu_637_p2;
        tmp_1_i4_reg_1115 <= tmp_1_i4_fu_618_p2;
        tmp_6_reg_1095 <= tmp_6_fu_599_p2;
        window_0_2_1_5_reg_1137 <= window_0_2_1_5_fu_642_p3;
        window_1_0_1_6_reg_1142 <= window_1_0_1_6_fu_650_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond_flatten_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond_flatten_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (tmp_i4_mid2_reg_1015 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((exitcond_flatten_reg_974 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_309 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((exitcond_flatten_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (tmp_i4_mid2_reg_1015 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((exitcond_flatten_reg_974 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_313 <= kernel_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        result_2_0_1_i_reg_1177 <= result_2_0_1_i_fu_706_p3;
        window_1_2_1_7_reg_1172 <= window_1_2_1_7_fu_688_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_2_2_1_i_reg_1256 <= result_2_2_1_i_fu_859_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_i4_mid2_reg_1015 == 1'd1))) begin
        tmp_11_reg_1110 <= tmp_11_fu_613_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_341_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_2_2_mid2_reg_1009 <= tmp_2_2_mid2_fu_425_p3;
        tmp_5_reg_996 <= tmp_5_fu_399_p2;
        tmp_6_0_1_cast_reg_1034[2 : 0] <= tmp_6_0_1_cast_fu_468_p1[2 : 0];
        tmp_6_cast_reg_1023 <= tmp_6_cast_fu_453_p1;
        tmp_i4_mid2_reg_1015 <= tmp_i4_mid2_fu_439_p3;
        tmp_i_mid2_reg_1001 <= tmp_i_mid2_fu_411_p3;
        x_assign_1_mid2_reg_983 <= x_assign_1_mid2_fu_359_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_i_mid2_reg_1001 == 1'd1))) begin
        tmp_7_0_1_i_reg_1152 <= tmp_7_0_1_i_fu_662_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (p_i_reg_1122 == 1'd1))) begin
        tmp_7_0_2_i_reg_1183 <= tmp_7_0_2_i_fu_713_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (tmp_1_i4_reg_1115 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        tmp_7_1_2_i_reg_1224 <= tmp_7_1_2_i_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_9_i_reg_1051 == 1'd1))) begin
        tmp_7_1_i_reg_1188 <= tmp_7_1_i_fu_718_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_i4_mid2_reg_1015 == 1'd1))) begin
        tmp_7_2_1_i_reg_1251 <= tmp_7_2_1_i_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (p_i1_reg_1229 == 1'd1))) begin
        tmp_7_2_2_i_reg_1262 <= tmp_7_2_2_i_fu_865_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond1_i1_reg_1198 == 1'd1) & (tmp_i4_mid2_reg_1015 == 1'd1))) begin
        tmp_7_2_i_reg_1246 <= tmp_7_2_i_fu_829_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_cond1_i_reg_1058 == 1'd1) & (tmp_i_mid2_reg_1001 == 1'd1))) begin
        tmp_7_i_reg_1147 <= tmp_7_i_fu_657_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_mid2_reg_989 <= tmp_mid2_fu_367_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        window_0_0_1_fu_74 <= window_0_0_1_3_fu_529_p3;
        window_0_1_1_fu_78 <= window_0_1_1_4_fu_537_p3;
        x_reg_1078 <= x_fu_544_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        window_0_2_1_fu_82 <= window_0_2_1_5_fu_642_p3;
        window_1_0_1_fu_86 <= window_1_0_1_6_fu_650_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten_reg_974 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        window_1_1_reg_1167 <= data_in_q0;
        window_1_2_1_fu_90 <= window_1_2_1_7_fu_688_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        window_2_0_1_fu_94 <= window_2_0_1_8_fu_742_p3;
        window_2_1_1_fu_98 <= window_2_1_1_9_fu_750_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        window_2_2_1_fu_102 <= window_2_2_1_10_fu_794_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_341_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_280_p4 = indvar_flatten_next_reg_978;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_280_p4 = indvar_flatten_reg_276;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_x_assign_1_phi_fu_302_p4 = x_reg_1078;
    end else begin
        ap_phi_mux_x_assign_1_phi_fu_302_p4 = x_assign_1_reg_298;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_974 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_y_assign_1_phi_fu_291_p4 = tmp_mid2_reg_989;
    end else begin
        ap_phi_mux_y_assign_1_phi_fu_291_p4 = y_assign_1_reg_287;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            data_in_address0 = tmp_17_cast_fu_734_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            data_in_address0 = tmp_11_cast_fu_680_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            data_in_address0 = tmp_12_cast_fu_608_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_in_address0 = tmp_15_cast_fu_558_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_in_address0 = tmp_9_cast_fu_463_p1;
        end else begin
            data_in_address0 = 'bx;
        end
    end else begin
        data_in_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            data_in_address1 = tmp_14_cast_fu_684_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            data_in_address1 = tmp_16_cast_fu_632_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_in_address1 = tmp_10_cast_fu_524_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_in_address1 = tmp_13_cast_fu_478_p1;
        end else begin
            data_in_address1 = 'bx;
        end
    end else begin
        data_in_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        data_in_ce0 = 1'b1;
    end else begin
        data_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        data_in_ce1 = 1'b1;
    end else begin
        data_in_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        data_out_ce0 = 1'b1;
    end else begin
        data_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten_reg_974_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        data_out_we0 = 1'b1;
    end else begin
        data_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            kernel_address0 = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            kernel_address0 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            kernel_address0 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            kernel_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            kernel_address0 = 64'd0;
        end else begin
            kernel_address0 = 'bx;
        end
    end else begin
        kernel_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            kernel_address1 = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            kernel_address1 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            kernel_address1 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            kernel_address1 = 64'd1;
        end else begin
            kernel_address1 = 'bx;
        end
    end else begin
        kernel_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        kernel_ce0 = 1'b1;
    end else begin
        kernel_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        kernel_ce1 = 1'b1;
    end else begin
        kernel_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten_fu_341_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_flatten_fu_341_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign data_out_address0 = tmp_12_cast_reg_1100;

assign data_out_d0 = ((p_i1_reg_1229[0:0] === 1'b1) ? result_3_2_2_i_fu_870_p2 : result_2_2_1_i_reg_1256);

assign exitcond_flatten_fu_341_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_280_p4 == 5'd25) ? 1'b1 : 1'b0);

assign exitcond_fu_353_p2 = ((ap_phi_mux_x_assign_1_phi_fu_302_p4 == 3'd5) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_347_p2 = (ap_phi_mux_indvar_flatten_phi_fu_280_p4 + 5'd1);

assign or_cond1_i1_fu_738_p2 = (tmp_i4_mid2_reg_1015 & tmp_9_i_reg_1051);

assign or_cond1_i_fu_514_p2 = (tmp_i_mid2_reg_1001 & tmp_9_i_fu_509_p2);

assign p_i1_fu_790_p2 = (tmp_i4_mid2_reg_1015 & tmp_1_i4_reg_1115);

assign p_i_fu_623_p2 = (tmp_i_mid2_reg_1001 & tmp_1_i4_fu_618_p2);

assign p_shl1_cast_fu_395_p1 = $signed(tmp_4_fu_387_p3);

assign p_shl2_cast_fu_499_p1 = tmp_fu_492_p3;

assign p_shl_cast_fu_589_p1 = tmp_1_fu_582_p3;

assign result_2_0_1_i_fu_706_p3 = ((tmp_i_mid2_reg_1001[0:0] === 1'b1) ? result_3_0_1_i_fu_701_p2 : 32'd0);

assign result_2_0_2_i_fu_761_p3 = ((p_i_reg_1122[0:0] === 1'b1) ? result_3_0_2_i_fu_757_p2 : result_2_0_1_i_reg_1177);

assign result_2_1_2_i_fu_822_p3 = ((tmp_1_i4_reg_1115[0:0] === 1'b1) ? result_3_1_2_i_fu_817_p2 : result_3_1_1_i_fu_812_p2);

assign result_2_1_i_fu_806_p3 = ((tmp_9_i_reg_1051[0:0] === 1'b1) ? result_3_1_i_fu_802_p2 : result_2_0_2_i_reg_1213);

assign result_2_2_1_i_fu_859_p3 = ((tmp_i4_mid2_reg_1015_pp0_iter1_reg[0:0] === 1'b1) ? result_3_2_1_i_fu_854_p2 : result_2_1_2_i_reg_1239);

assign result_2_2_i_fu_848_p3 = ((or_cond1_i1_reg_1198[0:0] === 1'b1) ? result_3_2_i_fu_844_p2 : result_2_1_2_i_reg_1239);

assign result_2_i_fu_695_p3 = ((or_cond1_i_reg_1058[0:0] === 1'b1) ? tmp_7_i_reg_1147 : 32'd0);

assign result_3_0_1_i_fu_701_p2 = (tmp_7_0_1_i_reg_1152 + result_2_i_fu_695_p3);

assign result_3_0_2_i_fu_757_p2 = (tmp_7_0_2_i_reg_1183 + result_2_0_1_i_reg_1177);

assign result_3_1_1_i_fu_812_p2 = (tmp_7_1_1_i_reg_1219 + result_2_1_i_fu_806_p3);

assign result_3_1_2_i_fu_817_p2 = (tmp_7_1_2_i_reg_1224 + result_3_1_1_i_fu_812_p2);

assign result_3_1_i_fu_802_p2 = (tmp_7_1_i_reg_1188 + result_2_0_2_i_reg_1213);

assign result_3_2_1_i_fu_854_p2 = (tmp_7_2_1_i_reg_1251 + result_2_2_i_fu_848_p3);

assign result_3_2_2_i_fu_870_p2 = (tmp_7_2_2_i_reg_1262 + result_2_2_1_i_reg_1256);

assign result_3_2_i_fu_844_p2 = (tmp_7_2_i_reg_1246 + result_2_1_2_i_reg_1239);

assign tmp_10_cast_fu_524_p1 = tmp_s_fu_519_p2;

assign tmp_10_fu_472_p2 = (tmp_6_0_1_cast_fu_468_p1 + tmp_5_fu_399_p2);

assign tmp_11_cast_fu_680_p1 = tmp_6_reg_1095;

assign tmp_11_fu_613_p2 = (tmp_6_0_1_cast_reg_1034 + tmp_8_fu_593_p2);

assign tmp_12_cast_fu_608_p1 = tmp_7_fu_604_p2;

assign tmp_12_fu_553_p2 = (tmp_6_0_2_cast_fu_549_p1 + tmp_5_reg_996);

assign tmp_13_cast_fu_478_p1 = $signed(tmp_10_fu_472_p2);

assign tmp_13_fu_628_p2 = (tmp_6_0_2_cast_reg_1084 + tmp_3_reg_1045);

assign tmp_14_cast_fu_684_p1 = tmp_11_reg_1110;

assign tmp_14_fu_637_p2 = (tmp_6_0_2_cast_reg_1084 + tmp_8_fu_593_p2);

assign tmp_15_cast_fu_558_p1 = $signed(tmp_12_fu_553_p2);

assign tmp_16_cast_fu_632_p1 = tmp_13_fu_628_p2;

assign tmp_17_cast_fu_734_p1 = tmp_14_reg_1132;

assign tmp_1_fu_582_p3 = {{tmp_2_2_mid2_reg_1009}, {2'd0}};

assign tmp_1_i4_fu_618_p2 = ((x_reg_1078 < 3'd5) ? 1'b1 : 1'b0);

assign tmp_2_2_mid2_cast_fu_579_p1 = tmp_2_2_mid2_reg_1009;

assign tmp_2_2_mid2_fu_425_p3 = ((exitcond_fu_353_p2[0:0] === 1'b1) ? y_assign_2_mid1_fu_419_p2 : y_fu_329_p2);

assign tmp_3_fu_503_p2 = (p_shl2_cast_fu_499_p1 + tmp_mid2_cast_fu_489_p1);

assign tmp_4_fu_387_p3 = {{tmp_4_mid2_v_fu_375_p3}, {2'd0}};

assign tmp_4_mid2_cast_fu_383_p1 = tmp_4_mid2_v_fu_375_p3;

assign tmp_4_mid2_v_fu_375_p3 = ((exitcond_fu_353_p2[0:0] === 1'b1) ? ap_phi_mux_y_assign_1_phi_fu_291_p4 : y_assign_fu_317_p2);

assign tmp_5_fu_399_p2 = ($signed(p_shl1_cast_fu_395_p1) + $signed(tmp_4_mid2_cast_fu_383_p1));

assign tmp_6_0_1_cast_fu_468_p1 = x_assign_1_mid2_fu_359_p3;

assign tmp_6_0_2_cast_fu_549_p1 = x_fu_544_p2;

assign tmp_6_cast_fu_453_p1 = $signed(x_assign_fu_447_p2);

assign tmp_6_fu_599_p2 = ($signed(tmp_6_cast_reg_1023) + $signed(tmp_8_fu_593_p2));

assign tmp_7_0_1_i_fu_662_p2 = ($signed(window_0_1_1_4_reg_1073) * $signed(reg_313));

assign tmp_7_0_2_i_fu_713_p2 = ($signed(window_0_2_1_5_reg_1137) * $signed(reg_309));

assign tmp_7_1_1_i_fu_767_p2 = ($signed(window_1_1_reg_1167) * $signed(reg_309));

assign tmp_7_1_2_i_fu_772_p2 = ($signed(window_1_2_1_7_reg_1172) * $signed(reg_313));

assign tmp_7_1_i_fu_718_p2 = ($signed(window_1_0_1_6_reg_1142) * $signed(reg_313));

assign tmp_7_2_1_i_fu_834_p2 = ($signed(window_2_1_1_9_reg_1208) * $signed(reg_313));

assign tmp_7_2_2_i_fu_865_p2 = ($signed(window_2_2_1_10_reg_1234) * $signed(reg_309));

assign tmp_7_2_i_fu_829_p2 = ($signed(window_2_0_1_8_reg_1203) * $signed(reg_309));

assign tmp_7_fu_604_p2 = (tmp_6_0_1_cast_reg_1034 + tmp_3_reg_1045);

assign tmp_7_i_fu_657_p2 = ($signed(window_0_0_1_3_reg_1068) * $signed(reg_309));

assign tmp_8_fu_593_p2 = (p_shl_cast_fu_589_p1 + tmp_2_2_mid2_cast_fu_579_p1);

assign tmp_9_cast_fu_463_p1 = $signed(tmp_9_fu_457_p2);

assign tmp_9_fu_457_p2 = ($signed(tmp_6_cast_fu_453_p1) + $signed(tmp_5_fu_399_p2));

assign tmp_9_i_fu_509_p2 = ((x_assign_1_mid2_reg_983 != 3'd0) ? 1'b1 : 1'b0);

assign tmp_fu_492_p3 = {{tmp_mid2_reg_989}, {2'd0}};

assign tmp_i4_fu_335_p2 = ((y_fu_329_p2 < 3'd5) ? 1'b1 : 1'b0);

assign tmp_i4_mid1_fu_433_p2 = ((y_assign_2_mid1_fu_419_p2 < 3'd5) ? 1'b1 : 1'b0);

assign tmp_i4_mid2_fu_439_p3 = ((exitcond_fu_353_p2[0:0] === 1'b1) ? tmp_i4_mid1_fu_433_p2 : tmp_i4_fu_335_p2);

assign tmp_i_fu_323_p2 = ((ap_phi_mux_y_assign_1_phi_fu_291_p4 != 3'd0) ? 1'b1 : 1'b0);

assign tmp_i_mid1_fu_405_p2 = ((y_fu_329_p2 != 3'd0) ? 1'b1 : 1'b0);

assign tmp_i_mid2_fu_411_p3 = ((exitcond_fu_353_p2[0:0] === 1'b1) ? tmp_i_mid1_fu_405_p2 : tmp_i_fu_323_p2);

assign tmp_mid2_cast_fu_489_p1 = tmp_mid2_reg_989;

assign tmp_mid2_fu_367_p3 = ((exitcond_fu_353_p2[0:0] === 1'b1) ? y_fu_329_p2 : ap_phi_mux_y_assign_1_phi_fu_291_p4);

assign tmp_s_fu_519_p2 = ($signed(tmp_6_cast_reg_1023) + $signed(tmp_3_fu_503_p2));

assign window_0_0_1_3_fu_529_p3 = ((or_cond1_i_fu_514_p2[0:0] === 1'b1) ? data_in_q0 : window_0_0_1_fu_74);

assign window_0_1_1_4_fu_537_p3 = ((tmp_i_mid2_reg_1001[0:0] === 1'b1) ? data_in_q1 : window_0_1_1_fu_78);

assign window_0_2_1_5_fu_642_p3 = ((p_i_fu_623_p2[0:0] === 1'b1) ? data_in_q0 : window_0_2_1_fu_82);

assign window_1_0_1_6_fu_650_p3 = ((tmp_9_i_reg_1051[0:0] === 1'b1) ? data_in_q1 : window_1_0_1_fu_86);

assign window_1_2_1_7_fu_688_p3 = ((tmp_1_i4_reg_1115[0:0] === 1'b1) ? data_in_q1 : window_1_2_1_fu_90);

assign window_2_0_1_8_fu_742_p3 = ((or_cond1_i1_fu_738_p2[0:0] === 1'b1) ? data_in_q0 : window_2_0_1_fu_94);

assign window_2_1_1_9_fu_750_p3 = ((tmp_i4_mid2_reg_1015[0:0] === 1'b1) ? data_in_q1 : window_2_1_1_fu_98);

assign window_2_2_1_10_fu_794_p3 = ((p_i1_fu_790_p2[0:0] === 1'b1) ? data_in_q0 : window_2_2_1_fu_102);

assign x_assign_1_mid2_fu_359_p3 = ((exitcond_fu_353_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_x_assign_1_phi_fu_302_p4);

assign x_assign_fu_447_p2 = ($signed(x_assign_1_mid2_fu_359_p3) + $signed(3'd7));

assign x_fu_544_p2 = (x_assign_1_mid2_reg_983 + 3'd1);

assign y_assign_2_mid1_fu_419_p2 = (ap_phi_mux_y_assign_1_phi_fu_291_p4 + 3'd2);

assign y_assign_fu_317_p2 = ($signed(ap_phi_mux_y_assign_1_phi_fu_291_p4) + $signed(3'd7));

assign y_fu_329_p2 = (ap_phi_mux_y_assign_1_phi_fu_291_p4 + 3'd1);

always @ (posedge ap_clk) begin
    tmp_6_0_1_cast_reg_1034[5:3] <= 3'b000;
    tmp_6_0_2_cast_reg_1084[5:3] <= 3'b000;
    tmp_12_cast_reg_1100[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //do_convolution
