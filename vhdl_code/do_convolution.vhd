-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity do_convolution is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_stream_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_stream_V_full_n : IN STD_LOGIC;
    out_stream_V_write : OUT STD_LOGIC;
    in_stream_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_stream_V_empty_n : IN STD_LOGIC;
    in_stream_V_read : OUT STD_LOGIC );
end;


architecture behav of do_convolution is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "do_convolution,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.354000,HLS_SYN_LAT=47,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=1103,HLS_SYN_LUT=1735}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal out_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal exitcond_flatten9_reg_1039 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten9_reg_1039_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond1_reg_913 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond4_reg_922 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal tmp_13_reg_1092 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_reg_195 : STD_LOGIC_VECTOR (2 downto 0);
    signal x1_reg_207 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_reg_219 : STD_LOGIC_VECTOR (2 downto 0);
    signal y2_reg_230 : STD_LOGIC_VECTOR (1 downto 0);
    signal window_2_2_1_reg_241 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_1_1_reg_253 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_2_1_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_1_1_reg_277 : STD_LOGIC_VECTOR (31 downto 0);
    signal x3_reg_289 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten7_reg_300 : STD_LOGIC_VECTOR (4 downto 0);
    signal y_assign_reg_311 : STD_LOGIC_VECTOR (2 downto 0);
    signal x_assign_reg_322 : STD_LOGIC_VECTOR (2 downto 0);
    signal window_2_1_reg_333 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_1_reg_333_pp3_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state11_pp3_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op154_read_state12 : BOOLEAN;
    signal ap_block_state12_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_state15_pp3_stage0_iter4 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal window_2_0_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_1_reg_356 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_0_reg_367 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_reg_378 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_1_fu_398_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal x_1_reg_917 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond4_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal x_2_fu_415_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal x_2_reg_926 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_931 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state8_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_432_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal tmp_9_mid2_v_fu_458_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_mid2_v_reg_940 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_466_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_945 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_mid2_fu_482_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_mid2_reg_950 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond1_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond1_reg_968 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_3_fu_512_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal window_2_2_6_fu_553_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal window_2_2_7_fu_560_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_8_fu_567_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_9_fu_574_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_flatten9_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten9_reg_1039_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten9_reg_1039_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next8_fu_610_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal tmp_i_i_mid2_fu_639_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_mid2_reg_1048 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_i_mid2_fu_659_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_i_mid2_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_i_mid2_reg_1055_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_i_mid2_reg_1055_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_i_mid2_reg_1055_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_assign_mid2_fu_667_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_14_i_i_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_i_i_reg_1067 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_i_i_reg_1067_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_i_i_reg_1067_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_4_fu_681_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal x_4_reg_1074 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buf_0_addr_2_reg_1080 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buf_0_addr_2_reg_1080_pp3_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buf_1_addr_2_reg_1086 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buf_1_addr_2_reg_1086_pp3_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_i2_i_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_i2_i_reg_1096 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_i2_i_reg_1096_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_i2_i_reg_1096_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal result_2_0_2_i_fu_779_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_0_2_i_reg_1102 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_0_read_as_1_reg_1113 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_1_1_i_fu_837_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_1_1_i_reg_1118 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_buf_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_2_reg_1124 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal result_2_1_2_i_fu_854_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_1_2_i_reg_1129 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_2_1_i_fu_883_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_2_1_i_reg_1134 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state5 : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state8 : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp3_exit_iter2_state13 : STD_LOGIC;
    signal line_buf_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buf_0_ce0 : STD_LOGIC;
    signal line_buf_0_we0 : STD_LOGIC;
    signal line_buf_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_buf_0_ce1 : STD_LOGIC;
    signal line_buf_0_we1 : STD_LOGIC;
    signal line_buf_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buf_1_ce0 : STD_LOGIC;
    signal line_buf_1_we0 : STD_LOGIC;
    signal line_buf_1_ce1 : STD_LOGIC;
    signal line_buf_1_we1 : STD_LOGIC;
    signal ap_phi_mux_x_phi_fu_199_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_x1_phi_fu_211_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_y2_phi_fu_234_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_x_assign_phi_fu_326_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_window_2_0_phi_fu_347_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_window_1_0_phi_fu_370_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter0_window_2_2_reg_378 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter1_window_2_2_reg_378 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp3_iter2_window_2_2_reg_378 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_500_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0_01001 : BOOLEAN;
    signal window_0_0_read_as_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_0_0_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_0_1_fu_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_0_read_as_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_0_read_as_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_count_1_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_count_fu_699_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_fu_438_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal cond_mid1_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x3_mid2_fu_450_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal x3_cast_fu_490_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_494_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal window_1_1_2_fu_518_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_4_fu_539_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_5_fu_546_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_1_10_fu_525_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_2_fu_532_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_fu_592_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond2_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_mid1_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_assign_1_mid1_fu_647_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i2_i_mid1_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_i_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_mid2_fu_625_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_cond1_i_i_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_read_i_fu_736_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_0_1_i_fu_750_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_0_1_i_fu_756_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i2_i_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_3_0_2_i_fu_773_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_808_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_1_i_fu_814_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_825_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_1_1_i_fu_831_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_1_i_fu_819_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_843_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_1_2_i_fu_849_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond1_i6_i_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_3_2_i_fu_864_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_2_i_fu_869_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_877_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_2_1_i_fu_889_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i8_i_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_3_2_2_i_fu_898_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_condition_242 : BOOLEAN;
    signal ap_condition_286 : BOOLEAN;

    component do_convolution_libkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    line_buf_0_U : component do_convolution_libkb
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buf_0_address0,
        ce0 => line_buf_0_ce0,
        we0 => line_buf_0_we0,
        d0 => in_stream_V_dout,
        q0 => line_buf_0_q0,
        address1 => line_buf_0_addr_2_reg_1080_pp3_iter1_reg,
        ce1 => line_buf_0_ce1,
        we1 => line_buf_0_we1,
        d1 => line_buf_1_q0);

    line_buf_1_U : component do_convolution_libkb
    generic map (
        DataWidth => 32,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buf_1_address0,
        ce0 => line_buf_1_ce0,
        we0 => line_buf_1_we0,
        d0 => in_stream_V_dout,
        q0 => line_buf_1_q0,
        address1 => line_buf_1_addr_2_reg_1086_pp3_iter1_reg,
        ce1 => line_buf_1_ce1,
        we1 => line_buf_1_we1,
        d1 => ap_phi_reg_pp3_iter2_window_2_2_reg_378);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state5);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state8))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state8);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((exitcond_flatten9_fu_604_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter2_state13)) then 
                        ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp3_iter1_window_2_2_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_242)) then
                if (((tmp_13_fu_693_p2 = ap_const_lv1_0) and (exitcond_flatten9_fu_604_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp3_iter1_window_2_2_reg_378 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp3_iter1_window_2_2_reg_378 <= ap_phi_reg_pp3_iter0_window_2_2_reg_378;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp3_iter2_window_2_2_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_286)) then
                if (((tmp_13_reg_1092 = ap_const_lv1_1) and (exitcond_flatten9_reg_1039 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp3_iter2_window_2_2_reg_378 <= in_stream_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp3_iter2_window_2_2_reg_378 <= ap_phi_reg_pp3_iter1_window_2_2_reg_378;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten7_reg_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                indvar_flatten7_reg_300 <= ap_const_lv5_0;
            elsif (((exitcond_flatten9_fu_604_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                indvar_flatten7_reg_300 <= indvar_flatten_next8_fu_610_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_426_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                indvar_flatten_reg_219 <= indvar_flatten_next_fu_432_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten_reg_219 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    read_count_1_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_13_fu_693_p2 = ap_const_lv1_1) and (exitcond_flatten9_fu_604_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                read_count_1_fu_120 <= read_count_fu_699_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                read_count_1_fu_120 <= ap_const_lv32_7;
            end if; 
        end if;
    end process;

    window_1_0_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                window_1_0_reg_367 <= window_1_1_1_reg_277;
            elsif (((exitcond_flatten9_reg_1039_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                window_1_0_reg_367 <= window_1_1_reg_356;
            end if; 
        end if;
    end process;

    window_1_1_reg_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                window_1_1_reg_356 <= window_1_2_1_reg_265;
            elsif (((exitcond_flatten9_reg_1039_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                window_1_1_reg_356 <= window_1_2_reg_1124;
            end if; 
        end if;
    end process;

    window_2_0_reg_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                window_2_0_reg_344 <= window_2_1_1_reg_253;
            elsif (((exitcond_flatten9_reg_1039_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                window_2_0_reg_344 <= window_2_1_reg_333;
            end if; 
        end if;
    end process;

    window_2_1_reg_333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                window_2_1_reg_333 <= window_2_2_1_reg_241;
            elsif (((exitcond_flatten9_reg_1039_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                window_2_1_reg_333 <= window_2_2_reg_378;
            end if; 
        end if;
    end process;

    x1_reg_207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_reg_922 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                x1_reg_207 <= x_2_reg_926;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                x1_reg_207 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    x3_reg_289_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_426_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                x3_reg_289 <= x_3_fu_512_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                x3_reg_289 <= ap_const_lv2_1;
            end if; 
        end if;
    end process;

    x_assign_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                x_assign_reg_322 <= ap_const_lv3_0;
            elsif (((exitcond_flatten9_reg_1039 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                x_assign_reg_322 <= x_4_reg_1074;
            end if; 
        end if;
    end process;

    x_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_913 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                x_reg_195 <= x_1_reg_917;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                x_reg_195 <= ap_const_lv3_3;
            end if; 
        end if;
    end process;

    y2_reg_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_931 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                y2_reg_230 <= tmp_9_mid2_v_reg_940;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                y2_reg_230 <= ap_const_lv2_1;
            end if; 
        end if;
    end process;

    y_assign_reg_311_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                y_assign_reg_311 <= ap_const_lv3_0;
            elsif (((exitcond_flatten9_fu_604_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                y_assign_reg_311 <= y_assign_mid2_fu_667_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_426_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                cond1_reg_968 <= cond1_fu_506_p2;
                cond_mid2_reg_950 <= cond_mid2_fu_482_p3;
                tmp_10_reg_945 <= tmp_10_fu_466_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond1_reg_913 <= exitcond1_fu_392_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                exitcond4_reg_922 <= exitcond4_fu_409_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                exitcond_flatten9_reg_1039 <= exitcond_flatten9_fu_604_p2;
                exitcond_flatten9_reg_1039_pp3_iter1_reg <= exitcond_flatten9_reg_1039;
                line_buf_0_addr_2_reg_1080_pp3_iter1_reg <= line_buf_0_addr_2_reg_1080;
                line_buf_1_addr_2_reg_1086_pp3_iter1_reg <= line_buf_1_addr_2_reg_1086;
                tmp_14_i_i_reg_1067_pp3_iter1_reg <= tmp_14_i_i_reg_1067;
                tmp_i2_i_mid2_reg_1055_pp3_iter1_reg <= tmp_i2_i_mid2_reg_1055;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                exitcond_flatten9_reg_1039_pp3_iter2_reg <= exitcond_flatten9_reg_1039_pp3_iter1_reg;
                exitcond_flatten9_reg_1039_pp3_iter3_reg <= exitcond_flatten9_reg_1039_pp3_iter2_reg;
                tmp_14_i_i_reg_1067_pp3_iter2_reg <= tmp_14_i_i_reg_1067_pp3_iter1_reg;
                tmp_15_i2_i_reg_1096_pp3_iter2_reg <= tmp_15_i2_i_reg_1096;
                tmp_15_i2_i_reg_1096_pp3_iter3_reg <= tmp_15_i2_i_reg_1096_pp3_iter2_reg;
                tmp_i2_i_mid2_reg_1055_pp3_iter2_reg <= tmp_i2_i_mid2_reg_1055_pp3_iter1_reg;
                tmp_i2_i_mid2_reg_1055_pp3_iter3_reg <= tmp_i2_i_mid2_reg_1055_pp3_iter2_reg;
                window_2_1_reg_333_pp3_iter3_reg <= window_2_1_reg_333;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                exitcond_flatten_reg_931 <= exitcond_flatten_fu_426_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten9_fu_604_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                line_buf_0_addr_2_reg_1080 <= tmp_12_fu_687_p1(3 - 1 downto 0);
                line_buf_1_addr_2_reg_1086 <= tmp_12_fu_687_p1(3 - 1 downto 0);
                tmp_13_reg_1092 <= tmp_13_fu_693_p2;
                tmp_14_i_i_reg_1067 <= tmp_14_i_i_fu_675_p2;
                tmp_i2_i_mid2_reg_1055 <= tmp_i2_i_mid2_fu_659_p3;
                tmp_i_i_mid2_reg_1048 <= tmp_i_i_mid2_fu_639_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten9_reg_1039 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                result_2_0_2_i_reg_1102 <= result_2_0_2_i_fu_779_p3;
                tmp_15_i2_i_reg_1096 <= tmp_15_i2_i_fu_763_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten9_reg_1039_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                result_2_1_2_i_reg_1129 <= result_2_1_2_i_fu_854_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten9_reg_1039_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                result_3_1_1_i_reg_1118 <= result_3_1_1_i_fu_837_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i2_i_mid2_reg_1055_pp3_iter2_reg = ap_const_lv1_1) and (exitcond_flatten9_reg_1039_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                result_3_2_1_i_reg_1134 <= result_3_2_1_i_fu_883_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_426_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                tmp_9_mid2_v_reg_940 <= tmp_9_mid2_v_fu_458_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                window_0_0_fu_104 <= window_0_1_fu_108;
                window_0_0_read_as_fu_100 <= window_0_0_fu_104;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten9_reg_1039 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                window_0_1_fu_108 <= line_buf_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                window_1_0_read_as_fu_112 <= ap_phi_mux_window_1_0_phi_fu_370_p4;
                window_2_0_read_as_fu_116 <= ap_phi_mux_window_2_0_phi_fu_347_p4;
                window_2_2_reg_378 <= ap_phi_reg_pp3_iter2_window_2_2_reg_378;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_931 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                window_1_1_1_reg_277 <= window_2_2_9_fu_574_p3;
                window_1_2_1_reg_265 <= window_2_2_8_fu_567_p3;
                window_2_1_1_reg_253 <= window_2_2_7_fu_560_p3;
                window_2_2_1_reg_241 <= window_2_2_6_fu_553_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten9_reg_1039_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                window_1_2_reg_1124 <= line_buf_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i2_i_mid2_reg_1055_pp3_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                window_2_0_read_as_1_reg_1113 <= window_2_0_read_as_fu_116;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_392_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                x_1_reg_917 <= x_1_fu_398_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                x_2_reg_926 <= x_2_fu_415_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten9_fu_604_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                x_4_reg_1074 <= x_4_fu_681_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp3_iter4, ap_enable_reg_pp3_iter1, exitcond1_fu_392_p2, ap_enable_reg_pp0_iter0, exitcond4_fu_409_p2, ap_enable_reg_pp1_iter0, exitcond_flatten_fu_426_p2, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter2, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((exitcond1_fu_392_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((exitcond1_fu_392_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((exitcond4_fu_409_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((exitcond4_fu_409_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((exitcond_flatten_fu_426_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((exitcond_flatten_fu_426_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) and not(((ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(6);
    ap_CS_fsm_state16 <= ap_CS_fsm(8);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(in_stream_V_empty_n, ap_enable_reg_pp0_iter1, exitcond1_reg_913)
    begin
                ap_block_pp0_stage0_11001 <= ((exitcond1_reg_913 = ap_const_lv1_0) and (in_stream_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_stream_V_empty_n, ap_enable_reg_pp0_iter1, exitcond1_reg_913)
    begin
                ap_block_pp0_stage0_subdone <= ((exitcond1_reg_913 = ap_const_lv1_0) and (in_stream_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(in_stream_V_empty_n, ap_enable_reg_pp1_iter1, exitcond4_reg_922)
    begin
                ap_block_pp1_stage0_11001 <= ((exitcond4_reg_922 = ap_const_lv1_0) and (in_stream_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(in_stream_V_empty_n, ap_enable_reg_pp1_iter1, exitcond4_reg_922)
    begin
                ap_block_pp1_stage0_subdone <= ((exitcond4_reg_922 = ap_const_lv1_0) and (in_stream_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_assign_proc : process(out_stream_V_full_n, in_stream_V_empty_n, ap_enable_reg_pp3_iter4, exitcond_flatten9_reg_1039_pp3_iter3_reg, ap_enable_reg_pp3_iter1, ap_predicate_op154_read_state12)
    begin
                ap_block_pp3_stage0_01001 <= (((in_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op154_read_state12 = ap_const_boolean_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((exitcond_flatten9_reg_1039_pp3_iter3_reg = ap_const_lv1_0) and (out_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1)));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(out_stream_V_full_n, in_stream_V_empty_n, ap_enable_reg_pp3_iter4, exitcond_flatten9_reg_1039_pp3_iter3_reg, ap_enable_reg_pp3_iter1, ap_predicate_op154_read_state12)
    begin
                ap_block_pp3_stage0_11001 <= (((in_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op154_read_state12 = ap_const_boolean_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((exitcond_flatten9_reg_1039_pp3_iter3_reg = ap_const_lv1_0) and (out_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1)));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(out_stream_V_full_n, in_stream_V_empty_n, ap_enable_reg_pp3_iter4, exitcond_flatten9_reg_1039_pp3_iter3_reg, ap_enable_reg_pp3_iter1, ap_predicate_op154_read_state12)
    begin
                ap_block_pp3_stage0_subdone <= (((in_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op154_read_state12 = ap_const_boolean_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((exitcond_flatten9_reg_1039_pp3_iter3_reg = ap_const_lv1_0) and (out_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1)));
    end process;

        ap_block_state11_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_pp3_stage0_iter1_assign_proc : process(in_stream_V_empty_n, ap_predicate_op154_read_state12)
    begin
                ap_block_state12_pp3_stage0_iter1 <= ((in_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op154_read_state12 = ap_const_boolean_1));
    end process;

        ap_block_state13_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_pp3_stage0_iter4_assign_proc : process(out_stream_V_full_n, exitcond_flatten9_reg_1039_pp3_iter3_reg)
    begin
                ap_block_state15_pp3_stage0_iter4 <= ((exitcond_flatten9_reg_1039_pp3_iter3_reg = ap_const_lv1_0) and (out_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(in_stream_V_empty_n, exitcond1_reg_913)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((exitcond1_reg_913 = ap_const_lv1_0) and (in_stream_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp1_stage0_iter1_assign_proc : process(in_stream_V_empty_n, exitcond4_reg_922)
    begin
                ap_block_state6_pp1_stage0_iter1 <= ((exitcond4_reg_922 = ap_const_lv1_0) and (in_stream_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state8_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_242_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
                ap_condition_242 <= ((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001));
    end process;


    ap_condition_286_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_11001)
    begin
                ap_condition_286 <= ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond1_fu_392_p2)
    begin
        if ((exitcond1_fu_392_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state5_assign_proc : process(exitcond4_fu_409_p2)
    begin
        if ((exitcond4_fu_409_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state8_assign_proc : process(exitcond_flatten_fu_426_p2)
    begin
        if ((exitcond_flatten_fu_426_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter2_state13_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            ap_condition_pp3_exit_iter2_state13 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter2_state13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter4, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter3)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_window_1_0_phi_fu_370_p4_assign_proc : process(ap_block_pp3_stage0, window_1_1_reg_356, window_1_0_reg_367, exitcond_flatten9_reg_1039_pp3_iter2_reg, ap_enable_reg_pp3_iter3)
    begin
        if (((exitcond_flatten9_reg_1039_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_window_1_0_phi_fu_370_p4 <= window_1_1_reg_356;
        else 
            ap_phi_mux_window_1_0_phi_fu_370_p4 <= window_1_0_reg_367;
        end if; 
    end process;


    ap_phi_mux_window_2_0_phi_fu_347_p4_assign_proc : process(ap_block_pp3_stage0, window_2_1_reg_333, window_2_0_reg_344, exitcond_flatten9_reg_1039_pp3_iter2_reg, ap_enable_reg_pp3_iter3)
    begin
        if (((exitcond_flatten9_reg_1039_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_window_2_0_phi_fu_347_p4 <= window_2_1_reg_333;
        else 
            ap_phi_mux_window_2_0_phi_fu_347_p4 <= window_2_0_reg_344;
        end if; 
    end process;


    ap_phi_mux_x1_phi_fu_211_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond4_reg_922, x1_reg_207, x_2_reg_926)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond4_reg_922 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_x1_phi_fu_211_p4 <= x_2_reg_926;
        else 
            ap_phi_mux_x1_phi_fu_211_p4 <= x1_reg_207;
        end if; 
    end process;


    ap_phi_mux_x_assign_phi_fu_326_p4_assign_proc : process(ap_block_pp3_stage0, exitcond_flatten9_reg_1039, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, x_assign_reg_322, x_4_reg_1074)
    begin
        if (((exitcond_flatten9_reg_1039 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_phi_mux_x_assign_phi_fu_326_p4 <= x_4_reg_1074;
        else 
            ap_phi_mux_x_assign_phi_fu_326_p4 <= x_assign_reg_322;
        end if; 
    end process;


    ap_phi_mux_x_phi_fu_199_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond1_reg_913, x_reg_195, x_1_reg_917)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond1_reg_913 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_x_phi_fu_199_p4 <= x_1_reg_917;
        else 
            ap_phi_mux_x_phi_fu_199_p4 <= x_reg_195;
        end if; 
    end process;


    ap_phi_mux_y2_phi_fu_234_p4_assign_proc : process(y2_reg_230, exitcond_flatten_reg_931, ap_CS_fsm_pp2_stage0, tmp_9_mid2_v_reg_940, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((exitcond_flatten_reg_931 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_y2_phi_fu_234_p4 <= tmp_9_mid2_v_reg_940;
        else 
            ap_phi_mux_y2_phi_fu_234_p4 <= y2_reg_230;
        end if; 
    end process;

    ap_phi_reg_pp3_iter0_window_2_2_reg_378 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op154_read_state12_assign_proc : process(exitcond_flatten9_reg_1039, tmp_13_reg_1092)
    begin
                ap_predicate_op154_read_state12 <= ((tmp_13_reg_1092 = ap_const_lv1_1) and (exitcond_flatten9_reg_1039 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cond1_fu_506_p2 <= "1" when (x3_mid2_fu_450_p3 = ap_const_lv2_1) else "0";
    cond_fu_476_p2 <= "1" when (ap_phi_mux_y2_phi_fu_234_p4 = ap_const_lv2_1) else "0";
    cond_mid1_fu_470_p2 <= "1" when (ap_phi_mux_y2_phi_fu_234_p4 = ap_const_lv2_0) else "0";
    cond_mid2_fu_482_p3 <= 
        cond_mid1_fu_470_p2 when (exitcond_fu_444_p2(0) = '1') else 
        cond_fu_476_p2;
    exitcond1_fu_392_p2 <= "1" when (ap_phi_mux_x_phi_fu_199_p4 = ap_const_lv3_5) else "0";
    exitcond2_fu_619_p2 <= "1" when (ap_phi_mux_x_assign_phi_fu_326_p4 = ap_const_lv3_5) else "0";
    exitcond4_fu_409_p2 <= "1" when (ap_phi_mux_x1_phi_fu_211_p4 = ap_const_lv3_5) else "0";
    exitcond_flatten9_fu_604_p2 <= "1" when (indvar_flatten7_reg_300 = ap_const_lv5_19) else "0";
    exitcond_flatten_fu_426_p2 <= "1" when (indvar_flatten_reg_219 = ap_const_lv3_4) else "0";
    exitcond_fu_444_p2 <= "1" when (x3_reg_289 = ap_const_lv2_3) else "0";

    in_stream_V_blk_n_assign_proc : process(in_stream_V_empty_n, ap_block_pp3_stage0, exitcond_flatten9_reg_1039, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond1_reg_913, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond4_reg_922, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, tmp_13_reg_1092)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond4_reg_922 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond1_reg_913 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_13_reg_1092 = ap_const_lv1_1) and (exitcond_flatten9_reg_1039 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            in_stream_V_blk_n <= in_stream_V_empty_n;
        else 
            in_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_reg_913, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond4_reg_922, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_predicate_op154_read_state12, ap_block_pp3_stage0_11001, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_predicate_op154_read_state12 = ap_const_boolean_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((exitcond4_reg_922 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((exitcond1_reg_913 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            in_stream_V_read <= ap_const_logic_1;
        else 
            in_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next8_fu_610_p2 <= std_logic_vector(unsigned(indvar_flatten7_reg_300) + unsigned(ap_const_lv5_1));
    indvar_flatten_next_fu_432_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_219) + unsigned(ap_const_lv3_1));

    line_buf_0_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter0, ap_block_pp2_stage0, tmp_s_fu_404_p1, tmp_8_fu_500_p1, tmp_12_fu_687_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
            line_buf_0_address0 <= tmp_12_fu_687_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            line_buf_0_address0 <= tmp_8_fu_500_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buf_0_address0 <= tmp_s_fu_404_p1(3 - 1 downto 0);
        else 
            line_buf_0_address0 <= "XXX";
        end if; 
    end process;


    line_buf_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            line_buf_0_ce0 <= ap_const_logic_1;
        else 
            line_buf_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_0_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            line_buf_0_ce1 <= ap_const_logic_1;
        else 
            line_buf_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_reg_913, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond1_reg_913 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buf_0_we0 <= ap_const_logic_1;
        else 
            line_buf_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_0_we1_assign_proc : process(ap_block_pp3_stage0_11001, exitcond_flatten9_reg_1039_pp3_iter1_reg, ap_enable_reg_pp3_iter2)
    begin
        if (((exitcond_flatten9_reg_1039_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            line_buf_0_we1 <= ap_const_logic_1;
        else 
            line_buf_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_1_address0_assign_proc : process(ap_block_pp3_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, line_buf_1_addr_2_reg_1086, ap_block_pp2_stage0, tmp_6_fu_421_p1, tmp_8_fu_500_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            line_buf_1_address0 <= line_buf_1_addr_2_reg_1086;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            line_buf_1_address0 <= tmp_8_fu_500_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            line_buf_1_address0 <= tmp_6_fu_421_p1(3 - 1 downto 0);
        else 
            line_buf_1_address0 <= "XXX";
        end if; 
    end process;


    line_buf_1_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            line_buf_1_ce0 <= ap_const_logic_1;
        else 
            line_buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_1_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            line_buf_1_ce1 <= ap_const_logic_1;
        else 
            line_buf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_1_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond4_reg_922, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond4_reg_922 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            line_buf_1_we0 <= ap_const_logic_1;
        else 
            line_buf_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_1_we1_assign_proc : process(ap_block_pp3_stage0_11001, exitcond_flatten9_reg_1039_pp3_iter1_reg, ap_enable_reg_pp3_iter2)
    begin
        if (((exitcond_flatten9_reg_1039_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            line_buf_1_we1 <= ap_const_logic_1;
        else 
            line_buf_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond1_i6_i_fu_860_p2 <= (tmp_i2_i_mid2_reg_1055_pp3_iter2_reg and tmp_14_i_i_reg_1067_pp3_iter2_reg);
    or_cond1_i_i_fu_732_p2 <= (tmp_i_i_mid2_reg_1048 and tmp_14_i_i_reg_1067);

    out_stream_V_blk_n_assign_proc : process(out_stream_V_full_n, ap_enable_reg_pp3_iter4, ap_block_pp3_stage0, exitcond_flatten9_reg_1039_pp3_iter3_reg)
    begin
        if (((exitcond_flatten9_reg_1039_pp3_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1))) then 
            out_stream_V_blk_n <= out_stream_V_full_n;
        else 
            out_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_stream_V_din <= 
        result_3_2_2_i_fu_898_p2 when (p_i8_i_fu_894_p2(0) = '1') else 
        result_2_2_1_i_fu_889_p3;

    out_stream_V_write_assign_proc : process(ap_enable_reg_pp3_iter4, exitcond_flatten9_reg_1039_pp3_iter3_reg, ap_block_pp3_stage0_11001)
    begin
        if (((exitcond_flatten9_reg_1039_pp3_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            out_stream_V_write <= ap_const_logic_1;
        else 
            out_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_i2_i_fu_768_p2 <= (tmp_i_i_mid2_reg_1048 and tmp_15_i2_i_fu_763_p2);
    p_i8_i_fu_894_p2 <= (tmp_i2_i_mid2_reg_1055_pp3_iter3_reg and tmp_15_i2_i_reg_1096_pp3_iter3_reg);
    p_read_i_fu_736_p3 <= 
        window_0_0_read_as_fu_100 when (or_cond1_i_i_fu_732_p2(0) = '1') else 
        ap_const_lv32_0;
    read_count_fu_699_p2 <= std_logic_vector(unsigned(read_count_1_fu_120) + unsigned(ap_const_lv32_1));
    result_2_0_1_i_fu_756_p3 <= 
        result_3_0_1_i_fu_750_p2 when (tmp_i_i_mid2_reg_1048(0) = '1') else 
        ap_const_lv32_0;
    result_2_0_2_i_fu_779_p3 <= 
        result_3_0_2_i_fu_773_p2 when (p_i2_i_fu_768_p2(0) = '1') else 
        result_2_0_1_i_fu_756_p3;
    result_2_1_2_i_fu_854_p3 <= 
        result_3_1_2_i_fu_849_p2 when (tmp_15_i2_i_reg_1096_pp3_iter2_reg(0) = '1') else 
        result_3_1_1_i_reg_1118;
    result_2_1_i_fu_819_p3 <= 
        result_3_1_i_fu_814_p2 when (tmp_14_i_i_reg_1067_pp3_iter1_reg(0) = '1') else 
        result_2_0_2_i_reg_1102;
    result_2_2_1_i_fu_889_p3 <= 
        result_3_2_1_i_reg_1134 when (tmp_i2_i_mid2_reg_1055_pp3_iter3_reg(0) = '1') else 
        result_2_1_2_i_reg_1129;
    result_2_2_i_fu_869_p3 <= 
        result_3_2_i_fu_864_p2 when (or_cond1_i6_i_fu_860_p2(0) = '1') else 
        result_2_1_2_i_fu_854_p3;
    result_3_0_1_i_fu_750_p2 <= std_logic_vector(unsigned(p_read_i_fu_736_p3) + unsigned(tmp_11_fu_744_p2));
    result_3_0_2_i_fu_773_p2 <= std_logic_vector(unsigned(result_2_0_1_i_fu_756_p3) - unsigned(window_0_1_fu_108));
    result_3_1_1_i_fu_837_p2 <= std_logic_vector(unsigned(tmp_7_1_1_i_fu_831_p2) + unsigned(result_2_1_i_fu_819_p3));
    result_3_1_2_i_fu_849_p2 <= std_logic_vector(unsigned(result_3_1_1_i_reg_1118) - unsigned(tmp_16_fu_843_p2));
    result_3_1_i_fu_814_p2 <= std_logic_vector(unsigned(result_2_0_2_i_reg_1102) + unsigned(tmp_14_fu_808_p2));
    result_3_2_1_i_fu_883_p2 <= std_logic_vector(unsigned(result_2_2_i_fu_869_p3) + unsigned(tmp_17_fu_877_p2));
    result_3_2_2_i_fu_898_p2 <= std_logic_vector(unsigned(result_2_2_1_i_fu_889_p3) - unsigned(window_2_1_reg_333_pp3_iter3_reg));
    result_3_2_i_fu_864_p2 <= std_logic_vector(unsigned(result_2_1_2_i_fu_854_p3) + unsigned(window_2_0_read_as_1_reg_1113));
    tmp_10_fu_466_p1 <= tmp_9_mid2_v_fu_458_p3(1 - 1 downto 0);
    tmp_11_fu_744_p2 <= std_logic_vector(shift_left(unsigned(window_0_0_fu_104),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_12_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_assign_mid2_fu_625_p3),64));
    tmp_13_fu_693_p2 <= "1" when (signed(read_count_1_fu_120) < signed(ap_const_lv32_19)) else "0";
    tmp_14_fu_808_p2 <= std_logic_vector(shift_left(unsigned(window_1_0_read_as_fu_112),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_14_i_i_fu_675_p2 <= "0" when (x_assign_mid2_fu_625_p3 = ap_const_lv3_0) else "1";
    tmp_15_fu_825_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_window_1_0_phi_fu_370_p4),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    tmp_15_i2_i_fu_763_p2 <= "1" when (unsigned(x_4_reg_1074) < unsigned(ap_const_lv3_5)) else "0";
    tmp_16_fu_843_p2 <= std_logic_vector(shift_left(unsigned(window_1_1_reg_356),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_17_fu_877_p2 <= std_logic_vector(shift_left(unsigned(window_2_0_reg_344),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    tmp_6_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x1_reg_207),64));
    tmp_7_1_1_i_fu_831_p2 <= std_logic_vector(unsigned(tmp_15_fu_825_p2) - unsigned(ap_phi_mux_window_1_0_phi_fu_370_p4));
    tmp_7_fu_494_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(x3_cast_fu_490_p1));
    tmp_8_fu_500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_494_p2),64));
    tmp_9_mid2_v_fu_458_p3 <= 
        y_fu_438_p2 when (exitcond_fu_444_p2(0) = '1') else 
        ap_phi_mux_y2_phi_fu_234_p4;
    tmp_i2_i_fu_598_p2 <= "1" when (unsigned(y_1_fu_592_p2) < unsigned(ap_const_lv3_5)) else "0";
    tmp_i2_i_mid1_fu_653_p2 <= "1" when (unsigned(y_assign_1_mid1_fu_647_p2) < unsigned(ap_const_lv3_5)) else "0";
    tmp_i2_i_mid2_fu_659_p3 <= 
        tmp_i2_i_mid1_fu_653_p2 when (exitcond2_fu_619_p2(0) = '1') else 
        tmp_i2_i_fu_598_p2;
    tmp_i_i_fu_586_p2 <= "0" when (y_assign_reg_311 = ap_const_lv3_0) else "1";
    tmp_i_i_mid1_fu_633_p2 <= "0" when (y_1_fu_592_p2 = ap_const_lv3_0) else "1";
    tmp_i_i_mid2_fu_639_p3 <= 
        tmp_i_i_mid1_fu_633_p2 when (exitcond2_fu_619_p2(0) = '1') else 
        tmp_i_i_fu_586_p2;
    tmp_s_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_reg_195),64));
    window_1_1_2_fu_518_p3 <= 
        line_buf_0_q0 when (tmp_10_reg_945(0) = '1') else 
        line_buf_1_q0;
    window_2_2_1_10_fu_525_p3 <= 
        window_1_2_1_reg_265 when (cond1_reg_968(0) = '1') else 
        window_1_1_2_fu_518_p3;
    window_2_2_2_fu_532_p3 <= 
        window_1_1_2_fu_518_p3 when (cond1_reg_968(0) = '1') else 
        window_1_1_1_reg_277;
    window_2_2_4_fu_539_p3 <= 
        window_2_2_1_reg_241 when (cond1_reg_968(0) = '1') else 
        window_1_1_2_fu_518_p3;
    window_2_2_5_fu_546_p3 <= 
        window_1_1_2_fu_518_p3 when (cond1_reg_968(0) = '1') else 
        window_2_1_1_reg_253;
    window_2_2_6_fu_553_p3 <= 
        window_2_2_1_reg_241 when (cond_mid2_reg_950(0) = '1') else 
        window_2_2_4_fu_539_p3;
    window_2_2_7_fu_560_p3 <= 
        window_2_1_1_reg_253 when (cond_mid2_reg_950(0) = '1') else 
        window_2_2_5_fu_546_p3;
    window_2_2_8_fu_567_p3 <= 
        window_2_2_1_10_fu_525_p3 when (cond_mid2_reg_950(0) = '1') else 
        window_1_2_1_reg_265;
    window_2_2_9_fu_574_p3 <= 
        window_2_2_2_fu_532_p3 when (cond_mid2_reg_950(0) = '1') else 
        window_1_1_1_reg_277;
    x3_cast_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x3_mid2_fu_450_p3),3));
    x3_mid2_fu_450_p3 <= 
        ap_const_lv2_1 when (exitcond_fu_444_p2(0) = '1') else 
        x3_reg_289;
    x_1_fu_398_p2 <= std_logic_vector(unsigned(ap_phi_mux_x_phi_fu_199_p4) + unsigned(ap_const_lv3_1));
    x_2_fu_415_p2 <= std_logic_vector(unsigned(ap_phi_mux_x1_phi_fu_211_p4) + unsigned(ap_const_lv3_1));
    x_3_fu_512_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(x3_mid2_fu_450_p3));
    x_4_fu_681_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(x_assign_mid2_fu_625_p3));
    x_assign_mid2_fu_625_p3 <= 
        ap_const_lv3_0 when (exitcond2_fu_619_p2(0) = '1') else 
        ap_phi_mux_x_assign_phi_fu_326_p4;
    y_1_fu_592_p2 <= std_logic_vector(unsigned(y_assign_reg_311) + unsigned(ap_const_lv3_1));
    y_assign_1_mid1_fu_647_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(y_assign_reg_311));
    y_assign_mid2_fu_667_p3 <= 
        y_1_fu_592_p2 when (exitcond2_fu_619_p2(0) = '1') else 
        y_assign_reg_311;
    y_fu_438_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(ap_phi_mux_y2_phi_fu_234_p4));
end behav;
