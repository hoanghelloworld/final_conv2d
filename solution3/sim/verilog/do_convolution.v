// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="do_convolution,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.354000,HLS_SYN_LAT=47,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=1103,HLS_SYN_LUT=1735}" *)

module do_convolution (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_stream_V_din,
        out_stream_V_full_n,
        out_stream_V_write,
        in_stream_V_dout,
        in_stream_V_empty_n,
        in_stream_V_read
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_pp0_stage0 = 9'd2;
parameter    ap_ST_fsm_state4 = 9'd4;
parameter    ap_ST_fsm_pp1_stage0 = 9'd8;
parameter    ap_ST_fsm_state7 = 9'd16;
parameter    ap_ST_fsm_pp2_stage0 = 9'd32;
parameter    ap_ST_fsm_state10 = 9'd64;
parameter    ap_ST_fsm_pp3_stage0 = 9'd128;
parameter    ap_ST_fsm_state16 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] out_stream_V_din;
input   out_stream_V_full_n;
output   out_stream_V_write;
input  [31:0] in_stream_V_dout;
input   in_stream_V_empty_n;
output   in_stream_V_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_stream_V_write;
reg in_stream_V_read;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    out_stream_V_blk_n;
reg    ap_enable_reg_pp3_iter4;
wire    ap_block_pp3_stage0;
reg   [0:0] exitcond_flatten9_reg_1039;
reg   [0:0] exitcond_flatten9_reg_1039_pp3_iter3_reg;
reg    in_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond1_reg_913;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond4_reg_922;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] tmp_13_reg_1092;
reg   [2:0] x_reg_195;
reg   [2:0] x1_reg_207;
reg   [2:0] indvar_flatten_reg_219;
reg   [1:0] y2_reg_230;
reg   [31:0] window_2_2_1_reg_241;
reg   [31:0] window_2_1_1_reg_253;
reg   [31:0] window_1_2_1_reg_265;
reg   [31:0] window_1_1_1_reg_277;
reg   [1:0] x3_reg_289;
reg   [4:0] indvar_flatten7_reg_300;
reg   [2:0] y_assign_reg_311;
reg   [2:0] x_assign_reg_322;
reg   [31:0] window_2_1_reg_333;
reg   [31:0] window_2_1_reg_333_pp3_iter3_reg;
wire    ap_block_state11_pp3_stage0_iter0;
reg    ap_predicate_op154_read_state12;
reg    ap_block_state12_pp3_stage0_iter1;
wire    ap_block_state13_pp3_stage0_iter2;
wire    ap_block_state14_pp3_stage0_iter3;
reg    ap_block_state15_pp3_stage0_iter4;
reg    ap_block_pp3_stage0_11001;
reg   [31:0] window_2_0_reg_344;
reg   [31:0] window_1_1_reg_356;
reg   [31:0] window_1_0_reg_367;
reg   [31:0] window_2_2_reg_378;
wire   [0:0] exitcond1_fu_392_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] x_1_fu_398_p2;
reg   [2:0] x_1_reg_917;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond4_fu_409_p2;
wire    ap_block_state5_pp1_stage0_iter0;
reg    ap_block_state6_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [2:0] x_2_fu_415_p2;
reg   [2:0] x_2_reg_926;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten_fu_426_p2;
reg   [0:0] exitcond_flatten_reg_931;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state9_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [2:0] indvar_flatten_next_fu_432_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [1:0] tmp_9_mid2_v_fu_458_p3;
reg   [1:0] tmp_9_mid2_v_reg_940;
wire   [0:0] tmp_10_fu_466_p1;
reg   [0:0] tmp_10_reg_945;
wire   [0:0] cond_mid2_fu_482_p3;
reg   [0:0] cond_mid2_reg_950;
wire   [0:0] cond1_fu_506_p2;
reg   [0:0] cond1_reg_968;
wire   [1:0] x_3_fu_512_p2;
wire   [31:0] window_2_2_6_fu_553_p3;
reg    ap_enable_reg_pp2_iter1;
wire   [31:0] window_2_2_7_fu_560_p3;
wire   [31:0] window_2_2_8_fu_567_p3;
wire   [31:0] window_2_2_9_fu_574_p3;
wire   [0:0] exitcond_flatten9_fu_604_p2;
reg   [0:0] exitcond_flatten9_reg_1039_pp3_iter1_reg;
reg   [0:0] exitcond_flatten9_reg_1039_pp3_iter2_reg;
wire   [4:0] indvar_flatten_next8_fu_610_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] tmp_i_i_mid2_fu_639_p3;
reg   [0:0] tmp_i_i_mid2_reg_1048;
wire   [0:0] tmp_i2_i_mid2_fu_659_p3;
reg   [0:0] tmp_i2_i_mid2_reg_1055;
reg   [0:0] tmp_i2_i_mid2_reg_1055_pp3_iter1_reg;
reg   [0:0] tmp_i2_i_mid2_reg_1055_pp3_iter2_reg;
reg   [0:0] tmp_i2_i_mid2_reg_1055_pp3_iter3_reg;
wire   [2:0] y_assign_mid2_fu_667_p3;
wire   [0:0] tmp_14_i_i_fu_675_p2;
reg   [0:0] tmp_14_i_i_reg_1067;
reg   [0:0] tmp_14_i_i_reg_1067_pp3_iter1_reg;
reg   [0:0] tmp_14_i_i_reg_1067_pp3_iter2_reg;
wire   [2:0] x_4_fu_681_p2;
reg   [2:0] x_4_reg_1074;
reg   [2:0] line_buf_0_addr_2_reg_1080;
reg   [2:0] line_buf_0_addr_2_reg_1080_pp3_iter1_reg;
reg   [2:0] line_buf_1_addr_2_reg_1086;
reg   [2:0] line_buf_1_addr_2_reg_1086_pp3_iter1_reg;
wire   [0:0] tmp_13_fu_693_p2;
wire   [0:0] tmp_15_i2_i_fu_763_p2;
reg   [0:0] tmp_15_i2_i_reg_1096;
reg   [0:0] tmp_15_i2_i_reg_1096_pp3_iter2_reg;
reg   [0:0] tmp_15_i2_i_reg_1096_pp3_iter3_reg;
wire   [31:0] result_2_0_2_i_fu_779_p3;
reg   [31:0] result_2_0_2_i_reg_1102;
reg   [31:0] window_2_0_read_as_1_reg_1113;
wire   [31:0] result_3_1_1_i_fu_837_p2;
reg   [31:0] result_3_1_1_i_reg_1118;
wire   [31:0] line_buf_1_q0;
reg   [31:0] window_1_2_reg_1124;
reg    ap_enable_reg_pp3_iter2;
wire   [31:0] result_2_1_2_i_fu_854_p3;
reg   [31:0] result_2_1_2_i_reg_1129;
wire   [31:0] result_3_2_1_i_fu_883_p2;
reg   [31:0] result_3_2_1_i_reg_1134;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_CS_fsm_state4;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
wire    ap_CS_fsm_state7;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state8;
wire    ap_CS_fsm_state10;
reg    ap_block_pp3_stage0_subdone;
reg    ap_enable_reg_pp3_iter3;
reg    ap_condition_pp3_exit_iter2_state13;
reg   [2:0] line_buf_0_address0;
reg    line_buf_0_ce0;
reg    line_buf_0_we0;
wire   [31:0] line_buf_0_q0;
reg    line_buf_0_ce1;
reg    line_buf_0_we1;
reg   [2:0] line_buf_1_address0;
reg    line_buf_1_ce0;
reg    line_buf_1_we0;
reg    line_buf_1_ce1;
reg    line_buf_1_we1;
reg   [2:0] ap_phi_mux_x_phi_fu_199_p4;
reg   [2:0] ap_phi_mux_x1_phi_fu_211_p4;
reg   [1:0] ap_phi_mux_y2_phi_fu_234_p4;
wire    ap_block_pp2_stage0;
reg   [2:0] ap_phi_mux_x_assign_phi_fu_326_p4;
reg   [31:0] ap_phi_mux_window_2_0_phi_fu_347_p4;
reg   [31:0] ap_phi_mux_window_1_0_phi_fu_370_p4;
wire   [31:0] ap_phi_reg_pp3_iter0_window_2_2_reg_378;
reg   [31:0] ap_phi_reg_pp3_iter1_window_2_2_reg_378;
reg   [31:0] ap_phi_reg_pp3_iter2_window_2_2_reg_378;
wire   [63:0] tmp_s_fu_404_p1;
wire   [63:0] tmp_6_fu_421_p1;
wire   [63:0] tmp_8_fu_500_p1;
wire   [63:0] tmp_12_fu_687_p1;
reg    ap_block_pp3_stage0_01001;
reg   [31:0] window_0_0_read_as_fu_100;
reg   [31:0] window_0_0_fu_104;
reg   [31:0] window_0_1_fu_108;
reg   [31:0] window_1_0_read_as_fu_112;
reg   [31:0] window_2_0_read_as_fu_116;
reg   [31:0] read_count_1_fu_120;
wire   [31:0] read_count_fu_699_p2;
wire   [0:0] exitcond_fu_444_p2;
wire   [1:0] y_fu_438_p2;
wire   [0:0] cond_mid1_fu_470_p2;
wire   [0:0] cond_fu_476_p2;
wire   [1:0] x3_mid2_fu_450_p3;
wire   [2:0] x3_cast_fu_490_p1;
wire   [2:0] tmp_7_fu_494_p2;
wire   [31:0] window_1_1_2_fu_518_p3;
wire   [31:0] window_2_2_4_fu_539_p3;
wire   [31:0] window_2_2_5_fu_546_p3;
wire   [31:0] window_2_2_1_10_fu_525_p3;
wire   [31:0] window_2_2_2_fu_532_p3;
wire   [2:0] y_1_fu_592_p2;
wire   [0:0] exitcond2_fu_619_p2;
wire   [0:0] tmp_i_i_mid1_fu_633_p2;
wire   [0:0] tmp_i_i_fu_586_p2;
wire   [2:0] y_assign_1_mid1_fu_647_p2;
wire   [0:0] tmp_i2_i_mid1_fu_653_p2;
wire   [0:0] tmp_i2_i_fu_598_p2;
wire   [2:0] x_assign_mid2_fu_625_p3;
wire   [0:0] or_cond1_i_i_fu_732_p2;
wire   [31:0] p_read_i_fu_736_p3;
wire   [31:0] tmp_11_fu_744_p2;
wire   [31:0] result_3_0_1_i_fu_750_p2;
wire   [31:0] result_2_0_1_i_fu_756_p3;
wire   [0:0] p_i2_i_fu_768_p2;
wire   [31:0] result_3_0_2_i_fu_773_p2;
wire   [31:0] tmp_14_fu_808_p2;
wire   [31:0] result_3_1_i_fu_814_p2;
wire   [31:0] tmp_15_fu_825_p2;
wire   [31:0] tmp_7_1_1_i_fu_831_p2;
wire   [31:0] result_2_1_i_fu_819_p3;
wire   [31:0] tmp_16_fu_843_p2;
wire   [31:0] result_3_1_2_i_fu_849_p2;
wire   [0:0] or_cond1_i6_i_fu_860_p2;
wire   [31:0] result_3_2_i_fu_864_p2;
wire   [31:0] result_2_2_i_fu_869_p3;
wire   [31:0] tmp_17_fu_877_p2;
wire   [31:0] result_2_2_1_i_fu_889_p3;
wire   [0:0] p_i8_i_fu_894_p2;
wire   [31:0] result_3_2_2_i_fu_898_p2;
wire    ap_CS_fsm_state16;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_condition_242;
reg    ap_condition_286;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
end

do_convolution_libkb #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
line_buf_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buf_0_address0),
    .ce0(line_buf_0_ce0),
    .we0(line_buf_0_we0),
    .d0(in_stream_V_dout),
    .q0(line_buf_0_q0),
    .address1(line_buf_0_addr_2_reg_1080_pp3_iter1_reg),
    .ce1(line_buf_0_ce1),
    .we1(line_buf_0_we1),
    .d1(line_buf_1_q0)
);

do_convolution_libkb #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
line_buf_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buf_1_address0),
    .ce0(line_buf_1_ce0),
    .we0(line_buf_1_we0),
    .d0(in_stream_V_dout),
    .q0(line_buf_1_q0),
    .address1(line_buf_1_addr_2_reg_1086_pp3_iter1_reg),
    .ce1(line_buf_1_ce1),
    .we1(line_buf_1_we1),
    .d1(ap_phi_reg_pp3_iter2_window_2_2_reg_378)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state8);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((exitcond_flatten9_fu_604_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter2_state13)) begin
                ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_242)) begin
        if (((tmp_13_fu_693_p2 == 1'd0) & (exitcond_flatten9_fu_604_p2 == 1'd0))) begin
            ap_phi_reg_pp3_iter1_window_2_2_reg_378 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter1_window_2_2_reg_378 <= ap_phi_reg_pp3_iter0_window_2_2_reg_378;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_286)) begin
        if (((tmp_13_reg_1092 == 1'd1) & (exitcond_flatten9_reg_1039 == 1'd0))) begin
            ap_phi_reg_pp3_iter2_window_2_2_reg_378 <= in_stream_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter2_window_2_2_reg_378 <= ap_phi_reg_pp3_iter1_window_2_2_reg_378;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten7_reg_300 <= 5'd0;
    end else if (((exitcond_flatten9_fu_604_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        indvar_flatten7_reg_300 <= indvar_flatten_next8_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_426_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        indvar_flatten_reg_219 <= indvar_flatten_next_fu_432_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten_reg_219 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_13_fu_693_p2 == 1'd1) & (exitcond_flatten9_fu_604_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        read_count_1_fu_120 <= read_count_fu_699_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        read_count_1_fu_120 <= 32'd7;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        window_1_0_reg_367 <= window_1_1_1_reg_277;
    end else if (((exitcond_flatten9_reg_1039_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        window_1_0_reg_367 <= window_1_1_reg_356;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        window_1_1_reg_356 <= window_1_2_1_reg_265;
    end else if (((exitcond_flatten9_reg_1039_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        window_1_1_reg_356 <= window_1_2_reg_1124;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        window_2_0_reg_344 <= window_2_1_1_reg_253;
    end else if (((exitcond_flatten9_reg_1039_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        window_2_0_reg_344 <= window_2_1_reg_333;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        window_2_1_reg_333 <= window_2_2_1_reg_241;
    end else if (((exitcond_flatten9_reg_1039_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        window_2_1_reg_333 <= window_2_2_reg_378;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_reg_922 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        x1_reg_207 <= x_2_reg_926;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x1_reg_207 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_426_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        x3_reg_289 <= x_3_fu_512_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        x3_reg_289 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        x_assign_reg_322 <= 3'd0;
    end else if (((exitcond_flatten9_reg_1039 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        x_assign_reg_322 <= x_4_reg_1074;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_reg_913 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_reg_195 <= x_1_reg_917;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        x_reg_195 <= 3'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_931 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        y2_reg_230 <= tmp_9_mid2_v_reg_940;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        y2_reg_230 <= 2'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        y_assign_reg_311 <= 3'd0;
    end else if (((exitcond_flatten9_fu_604_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        y_assign_reg_311 <= y_assign_mid2_fu_667_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        cond1_reg_968 <= cond1_fu_506_p2;
        cond_mid2_reg_950 <= cond_mid2_fu_482_p3;
        tmp_10_reg_945 <= tmp_10_fu_466_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond1_reg_913 <= exitcond1_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond4_reg_922 <= exitcond4_fu_409_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        exitcond_flatten9_reg_1039 <= exitcond_flatten9_fu_604_p2;
        exitcond_flatten9_reg_1039_pp3_iter1_reg <= exitcond_flatten9_reg_1039;
        line_buf_0_addr_2_reg_1080_pp3_iter1_reg <= line_buf_0_addr_2_reg_1080;
        line_buf_1_addr_2_reg_1086_pp3_iter1_reg <= line_buf_1_addr_2_reg_1086;
        tmp_14_i_i_reg_1067_pp3_iter1_reg <= tmp_14_i_i_reg_1067;
        tmp_i2_i_mid2_reg_1055_pp3_iter1_reg <= tmp_i2_i_mid2_reg_1055;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        exitcond_flatten9_reg_1039_pp3_iter2_reg <= exitcond_flatten9_reg_1039_pp3_iter1_reg;
        exitcond_flatten9_reg_1039_pp3_iter3_reg <= exitcond_flatten9_reg_1039_pp3_iter2_reg;
        tmp_14_i_i_reg_1067_pp3_iter2_reg <= tmp_14_i_i_reg_1067_pp3_iter1_reg;
        tmp_15_i2_i_reg_1096_pp3_iter2_reg <= tmp_15_i2_i_reg_1096;
        tmp_15_i2_i_reg_1096_pp3_iter3_reg <= tmp_15_i2_i_reg_1096_pp3_iter2_reg;
        tmp_i2_i_mid2_reg_1055_pp3_iter2_reg <= tmp_i2_i_mid2_reg_1055_pp3_iter1_reg;
        tmp_i2_i_mid2_reg_1055_pp3_iter3_reg <= tmp_i2_i_mid2_reg_1055_pp3_iter2_reg;
        window_2_1_reg_333_pp3_iter3_reg <= window_2_1_reg_333;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        exitcond_flatten_reg_931 <= exitcond_flatten_fu_426_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten9_fu_604_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        line_buf_0_addr_2_reg_1080 <= tmp_12_fu_687_p1;
        line_buf_1_addr_2_reg_1086 <= tmp_12_fu_687_p1;
        tmp_13_reg_1092 <= tmp_13_fu_693_p2;
        tmp_14_i_i_reg_1067 <= tmp_14_i_i_fu_675_p2;
        tmp_i2_i_mid2_reg_1055 <= tmp_i2_i_mid2_fu_659_p3;
        tmp_i_i_mid2_reg_1048 <= tmp_i_i_mid2_fu_639_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten9_reg_1039 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        result_2_0_2_i_reg_1102 <= result_2_0_2_i_fu_779_p3;
        tmp_15_i2_i_reg_1096 <= tmp_15_i2_i_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten9_reg_1039_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        result_2_1_2_i_reg_1129 <= result_2_1_2_i_fu_854_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten9_reg_1039_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        result_3_1_1_i_reg_1118 <= result_3_1_1_i_fu_837_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i2_i_mid2_reg_1055_pp3_iter2_reg == 1'd1) & (exitcond_flatten9_reg_1039_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        result_3_2_1_i_reg_1134 <= result_3_2_1_i_fu_883_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_426_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        tmp_9_mid2_v_reg_940 <= tmp_9_mid2_v_fu_458_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        window_0_0_fu_104 <= window_0_1_fu_108;
        window_0_0_read_as_fu_100 <= window_0_0_fu_104;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten9_reg_1039 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        window_0_1_fu_108 <= line_buf_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        window_1_0_read_as_fu_112 <= ap_phi_mux_window_1_0_phi_fu_370_p4;
        window_2_0_read_as_fu_116 <= ap_phi_mux_window_2_0_phi_fu_347_p4;
        window_2_2_reg_378 <= ap_phi_reg_pp3_iter2_window_2_2_reg_378;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_931 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        window_1_1_1_reg_277 <= window_2_2_9_fu_574_p3;
        window_1_2_1_reg_265 <= window_2_2_8_fu_567_p3;
        window_2_1_1_reg_253 <= window_2_2_7_fu_560_p3;
        window_2_2_1_reg_241 <= window_2_2_6_fu_553_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten9_reg_1039_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        window_1_2_reg_1124 <= line_buf_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i2_i_mid2_reg_1055_pp3_iter1_reg == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        window_2_0_read_as_1_reg_1113 <= window_2_0_read_as_fu_116;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_392_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_1_reg_917 <= x_1_fu_398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        x_2_reg_926 <= x_2_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten9_fu_604_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        x_4_reg_1074 <= x_4_fu_681_p2;
    end
end

always @ (*) begin
    if ((exitcond1_fu_392_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_409_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_426_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        ap_condition_pp3_exit_iter2_state13 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter2_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten9_reg_1039_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        ap_phi_mux_window_1_0_phi_fu_370_p4 = window_1_1_reg_356;
    end else begin
        ap_phi_mux_window_1_0_phi_fu_370_p4 = window_1_0_reg_367;
    end
end

always @ (*) begin
    if (((exitcond_flatten9_reg_1039_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        ap_phi_mux_window_2_0_phi_fu_347_p4 = window_2_1_reg_333;
    end else begin
        ap_phi_mux_window_2_0_phi_fu_347_p4 = window_2_0_reg_344;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond4_reg_922 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_x1_phi_fu_211_p4 = x_2_reg_926;
    end else begin
        ap_phi_mux_x1_phi_fu_211_p4 = x1_reg_207;
    end
end

always @ (*) begin
    if (((exitcond_flatten9_reg_1039 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_x_assign_phi_fu_326_p4 = x_4_reg_1074;
    end else begin
        ap_phi_mux_x_assign_phi_fu_326_p4 = x_assign_reg_322;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond1_reg_913 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_x_phi_fu_199_p4 = x_1_reg_917;
    end else begin
        ap_phi_mux_x_phi_fu_199_p4 = x_reg_195;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_931 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_y2_phi_fu_234_p4 = tmp_9_mid2_v_reg_940;
    end else begin
        ap_phi_mux_y2_phi_fu_234_p4 = y2_reg_230;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (exitcond4_reg_922 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (exitcond1_reg_913 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_13_reg_1092 == 1'd1) & (exitcond_flatten9_reg_1039 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        in_stream_V_blk_n = in_stream_V_empty_n;
    end else begin
        in_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op154_read_state12 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((exitcond4_reg_922 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((exitcond1_reg_913 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        in_stream_V_read = 1'b1;
    end else begin
        in_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        line_buf_0_address0 = tmp_12_fu_687_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        line_buf_0_address0 = tmp_8_fu_500_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buf_0_address0 = tmp_s_fu_404_p1;
    end else begin
        line_buf_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        line_buf_0_ce0 = 1'b1;
    end else begin
        line_buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        line_buf_0_ce1 = 1'b1;
    end else begin
        line_buf_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_reg_913 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buf_0_we0 = 1'b1;
    end else begin
        line_buf_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten9_reg_1039_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        line_buf_0_we1 = 1'b1;
    end else begin
        line_buf_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        line_buf_1_address0 = line_buf_1_addr_2_reg_1086;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        line_buf_1_address0 = tmp_8_fu_500_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        line_buf_1_address0 = tmp_6_fu_421_p1;
    end else begin
        line_buf_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        line_buf_1_ce0 = 1'b1;
    end else begin
        line_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        line_buf_1_ce1 = 1'b1;
    end else begin
        line_buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_reg_922 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        line_buf_1_we0 = 1'b1;
    end else begin
        line_buf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten9_reg_1039_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        line_buf_1_we1 = 1'b1;
    end else begin
        line_buf_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten9_reg_1039_pp3_iter3_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        out_stream_V_blk_n = out_stream_V_full_n;
    end else begin
        out_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten9_reg_1039_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        out_stream_V_write = 1'b1;
    end else begin
        out_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((exitcond1_fu_392_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((exitcond1_fu_392_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((exitcond4_fu_409_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((exitcond4_fu_409_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((exitcond_flatten_fu_426_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((exitcond_flatten_fu_426_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)) & ~((ap_enable_reg_pp3_iter3 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter3 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter4 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((exitcond1_reg_913 == 1'd0) & (in_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((exitcond1_reg_913 == 1'd0) & (in_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((exitcond4_reg_922 == 1'd0) & (in_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((exitcond4_reg_922 == 1'd0) & (in_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = (((in_stream_V_empty_n == 1'b0) & (ap_predicate_op154_read_state12 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((exitcond_flatten9_reg_1039_pp3_iter3_reg == 1'd0) & (out_stream_V_full_n == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((in_stream_V_empty_n == 1'b0) & (ap_predicate_op154_read_state12 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((exitcond_flatten9_reg_1039_pp3_iter3_reg == 1'd0) & (out_stream_V_full_n == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((in_stream_V_empty_n == 1'b0) & (ap_predicate_op154_read_state12 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((exitcond_flatten9_reg_1039_pp3_iter3_reg == 1'd0) & (out_stream_V_full_n == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1)));
end

assign ap_block_state11_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp3_stage0_iter1 = ((in_stream_V_empty_n == 1'b0) & (ap_predicate_op154_read_state12 == 1'b1));
end

assign ap_block_state13_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp3_stage0_iter4 = ((exitcond_flatten9_reg_1039_pp3_iter3_reg == 1'd0) & (out_stream_V_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((exitcond1_reg_913 == 1'd0) & (in_stream_V_empty_n == 1'b0));
end

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp1_stage0_iter1 = ((exitcond4_reg_922 == 1'd0) & (in_stream_V_empty_n == 1'b0));
end

assign ap_block_state8_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_242 = ((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001));
end

always @ (*) begin
    ap_condition_286 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_phi_reg_pp3_iter0_window_2_2_reg_378 = 'bx;

always @ (*) begin
    ap_predicate_op154_read_state12 = ((tmp_13_reg_1092 == 1'd1) & (exitcond_flatten9_reg_1039 == 1'd0));
end

assign cond1_fu_506_p2 = ((x3_mid2_fu_450_p3 == 2'd1) ? 1'b1 : 1'b0);

assign cond_fu_476_p2 = ((ap_phi_mux_y2_phi_fu_234_p4 == 2'd1) ? 1'b1 : 1'b0);

assign cond_mid1_fu_470_p2 = ((ap_phi_mux_y2_phi_fu_234_p4 == 2'd0) ? 1'b1 : 1'b0);

assign cond_mid2_fu_482_p3 = ((exitcond_fu_444_p2[0:0] === 1'b1) ? cond_mid1_fu_470_p2 : cond_fu_476_p2);

assign exitcond1_fu_392_p2 = ((ap_phi_mux_x_phi_fu_199_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond2_fu_619_p2 = ((ap_phi_mux_x_assign_phi_fu_326_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond4_fu_409_p2 = ((ap_phi_mux_x1_phi_fu_211_p4 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond_flatten9_fu_604_p2 = ((indvar_flatten7_reg_300 == 5'd25) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_426_p2 = ((indvar_flatten_reg_219 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond_fu_444_p2 = ((x3_reg_289 == 2'd3) ? 1'b1 : 1'b0);

assign indvar_flatten_next8_fu_610_p2 = (indvar_flatten7_reg_300 + 5'd1);

assign indvar_flatten_next_fu_432_p2 = (indvar_flatten_reg_219 + 3'd1);

assign or_cond1_i6_i_fu_860_p2 = (tmp_i2_i_mid2_reg_1055_pp3_iter2_reg & tmp_14_i_i_reg_1067_pp3_iter2_reg);

assign or_cond1_i_i_fu_732_p2 = (tmp_i_i_mid2_reg_1048 & tmp_14_i_i_reg_1067);

assign out_stream_V_din = ((p_i8_i_fu_894_p2[0:0] === 1'b1) ? result_3_2_2_i_fu_898_p2 : result_2_2_1_i_fu_889_p3);

assign p_i2_i_fu_768_p2 = (tmp_i_i_mid2_reg_1048 & tmp_15_i2_i_fu_763_p2);

assign p_i8_i_fu_894_p2 = (tmp_i2_i_mid2_reg_1055_pp3_iter3_reg & tmp_15_i2_i_reg_1096_pp3_iter3_reg);

assign p_read_i_fu_736_p3 = ((or_cond1_i_i_fu_732_p2[0:0] === 1'b1) ? window_0_0_read_as_fu_100 : 32'd0);

assign read_count_fu_699_p2 = (read_count_1_fu_120 + 32'd1);

assign result_2_0_1_i_fu_756_p3 = ((tmp_i_i_mid2_reg_1048[0:0] === 1'b1) ? result_3_0_1_i_fu_750_p2 : 32'd0);

assign result_2_0_2_i_fu_779_p3 = ((p_i2_i_fu_768_p2[0:0] === 1'b1) ? result_3_0_2_i_fu_773_p2 : result_2_0_1_i_fu_756_p3);

assign result_2_1_2_i_fu_854_p3 = ((tmp_15_i2_i_reg_1096_pp3_iter2_reg[0:0] === 1'b1) ? result_3_1_2_i_fu_849_p2 : result_3_1_1_i_reg_1118);

assign result_2_1_i_fu_819_p3 = ((tmp_14_i_i_reg_1067_pp3_iter1_reg[0:0] === 1'b1) ? result_3_1_i_fu_814_p2 : result_2_0_2_i_reg_1102);

assign result_2_2_1_i_fu_889_p3 = ((tmp_i2_i_mid2_reg_1055_pp3_iter3_reg[0:0] === 1'b1) ? result_3_2_1_i_reg_1134 : result_2_1_2_i_reg_1129);

assign result_2_2_i_fu_869_p3 = ((or_cond1_i6_i_fu_860_p2[0:0] === 1'b1) ? result_3_2_i_fu_864_p2 : result_2_1_2_i_fu_854_p3);

assign result_3_0_1_i_fu_750_p2 = (p_read_i_fu_736_p3 + tmp_11_fu_744_p2);

assign result_3_0_2_i_fu_773_p2 = (result_2_0_1_i_fu_756_p3 - window_0_1_fu_108);

assign result_3_1_1_i_fu_837_p2 = (tmp_7_1_1_i_fu_831_p2 + result_2_1_i_fu_819_p3);

assign result_3_1_2_i_fu_849_p2 = (result_3_1_1_i_reg_1118 - tmp_16_fu_843_p2);

assign result_3_1_i_fu_814_p2 = (result_2_0_2_i_reg_1102 + tmp_14_fu_808_p2);

assign result_3_2_1_i_fu_883_p2 = (result_2_2_i_fu_869_p3 + tmp_17_fu_877_p2);

assign result_3_2_2_i_fu_898_p2 = (result_2_2_1_i_fu_889_p3 - window_2_1_reg_333_pp3_iter3_reg);

assign result_3_2_i_fu_864_p2 = (result_2_1_2_i_fu_854_p3 + window_2_0_read_as_1_reg_1113);

assign tmp_10_fu_466_p1 = tmp_9_mid2_v_fu_458_p3[0:0];

assign tmp_11_fu_744_p2 = window_0_0_fu_104 << 32'd1;

assign tmp_12_fu_687_p1 = x_assign_mid2_fu_625_p3;

assign tmp_13_fu_693_p2 = (($signed(read_count_1_fu_120) < $signed(32'd25)) ? 1'b1 : 1'b0);

assign tmp_14_fu_808_p2 = window_1_0_read_as_fu_112 << 32'd1;

assign tmp_14_i_i_fu_675_p2 = ((x_assign_mid2_fu_625_p3 != 3'd0) ? 1'b1 : 1'b0);

assign tmp_15_fu_825_p2 = ap_phi_mux_window_1_0_phi_fu_370_p4 << 32'd2;

assign tmp_15_i2_i_fu_763_p2 = ((x_4_reg_1074 < 3'd5) ? 1'b1 : 1'b0);

assign tmp_16_fu_843_p2 = window_1_1_reg_356 << 32'd1;

assign tmp_17_fu_877_p2 = window_2_0_reg_344 << 32'd2;

assign tmp_6_fu_421_p1 = x1_reg_207;

assign tmp_7_1_1_i_fu_831_p2 = (tmp_15_fu_825_p2 - ap_phi_mux_window_1_0_phi_fu_370_p4);

assign tmp_7_fu_494_p2 = (3'd2 + x3_cast_fu_490_p1);

assign tmp_8_fu_500_p1 = tmp_7_fu_494_p2;

assign tmp_9_mid2_v_fu_458_p3 = ((exitcond_fu_444_p2[0:0] === 1'b1) ? y_fu_438_p2 : ap_phi_mux_y2_phi_fu_234_p4);

assign tmp_i2_i_fu_598_p2 = ((y_1_fu_592_p2 < 3'd5) ? 1'b1 : 1'b0);

assign tmp_i2_i_mid1_fu_653_p2 = ((y_assign_1_mid1_fu_647_p2 < 3'd5) ? 1'b1 : 1'b0);

assign tmp_i2_i_mid2_fu_659_p3 = ((exitcond2_fu_619_p2[0:0] === 1'b1) ? tmp_i2_i_mid1_fu_653_p2 : tmp_i2_i_fu_598_p2);

assign tmp_i_i_fu_586_p2 = ((y_assign_reg_311 != 3'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_mid1_fu_633_p2 = ((y_1_fu_592_p2 != 3'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_mid2_fu_639_p3 = ((exitcond2_fu_619_p2[0:0] === 1'b1) ? tmp_i_i_mid1_fu_633_p2 : tmp_i_i_fu_586_p2);

assign tmp_s_fu_404_p1 = x_reg_195;

assign window_1_1_2_fu_518_p3 = ((tmp_10_reg_945[0:0] === 1'b1) ? line_buf_0_q0 : line_buf_1_q0);

assign window_2_2_1_10_fu_525_p3 = ((cond1_reg_968[0:0] === 1'b1) ? window_1_2_1_reg_265 : window_1_1_2_fu_518_p3);

assign window_2_2_2_fu_532_p3 = ((cond1_reg_968[0:0] === 1'b1) ? window_1_1_2_fu_518_p3 : window_1_1_1_reg_277);

assign window_2_2_4_fu_539_p3 = ((cond1_reg_968[0:0] === 1'b1) ? window_2_2_1_reg_241 : window_1_1_2_fu_518_p3);

assign window_2_2_5_fu_546_p3 = ((cond1_reg_968[0:0] === 1'b1) ? window_1_1_2_fu_518_p3 : window_2_1_1_reg_253);

assign window_2_2_6_fu_553_p3 = ((cond_mid2_reg_950[0:0] === 1'b1) ? window_2_2_1_reg_241 : window_2_2_4_fu_539_p3);

assign window_2_2_7_fu_560_p3 = ((cond_mid2_reg_950[0:0] === 1'b1) ? window_2_1_1_reg_253 : window_2_2_5_fu_546_p3);

assign window_2_2_8_fu_567_p3 = ((cond_mid2_reg_950[0:0] === 1'b1) ? window_2_2_1_10_fu_525_p3 : window_1_2_1_reg_265);

assign window_2_2_9_fu_574_p3 = ((cond_mid2_reg_950[0:0] === 1'b1) ? window_2_2_2_fu_532_p3 : window_1_1_1_reg_277);

assign x3_cast_fu_490_p1 = x3_mid2_fu_450_p3;

assign x3_mid2_fu_450_p3 = ((exitcond_fu_444_p2[0:0] === 1'b1) ? 2'd1 : x3_reg_289);

assign x_1_fu_398_p2 = (ap_phi_mux_x_phi_fu_199_p4 + 3'd1);

assign x_2_fu_415_p2 = (ap_phi_mux_x1_phi_fu_211_p4 + 3'd1);

assign x_3_fu_512_p2 = (2'd1 + x3_mid2_fu_450_p3);

assign x_4_fu_681_p2 = (3'd1 + x_assign_mid2_fu_625_p3);

assign x_assign_mid2_fu_625_p3 = ((exitcond2_fu_619_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_x_assign_phi_fu_326_p4);

assign y_1_fu_592_p2 = (y_assign_reg_311 + 3'd1);

assign y_assign_1_mid1_fu_647_p2 = (3'd2 + y_assign_reg_311);

assign y_assign_mid2_fu_667_p3 = ((exitcond2_fu_619_p2[0:0] === 1'b1) ? y_1_fu_592_p2 : y_assign_reg_311);

assign y_fu_438_p2 = (2'd1 + ap_phi_mux_y2_phi_fu_234_p4);

endmodule //do_convolution
